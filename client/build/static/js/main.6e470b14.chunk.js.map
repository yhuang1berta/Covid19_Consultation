{"version":3,"sources":["components/HomePage/sub-com/end.jsx","components/HomePage/sub-com/homepage-introduce.jsx","components/HomePage/sub-com/header.jsx","components/HomePage/Navbar.jsx","actions/doctor.js","actions/patients.js","components/HomePage/homepage.jsx","components/HomePage/Cases.jsx","components/HomePage/sub-com/covidHeader.jsx","components/HomePage/sub-com/newsCA.jsx","components/HomePage/sub-com/newsUS.jsx","components/HomePage/sub-com/newsW.jsx","components/HomePage/currentnews.jsx","components/HomePage/covid19.jsx","components/HomePage/sub-com/carousel.jsx","components/HomePage/preventions.jsx","components/Login/PatientLogin.jsx","components/Login/DoctorLogin.jsx","actions/admin.js","components/Login/AdminLogin.jsx","components/Registration/Registration.js","components/DoctorDashboard/LoginHeader/LoginHeader.js","actions/message.js","components/ChatPage/PreChatPage/PreDoctorChat.js","components/ChatPage/DoctorChatPage.js","components/PatientDashboard/components/PatientHeader/PatientHeader.js","components/ChatPage/PatientChatPage.js","components/DoctorDashboard/Greeting/Greeting.js","components/AdminDashboard/PatientTable.js","components/AdminDashboard/DoctorTable.js","components/AdminDashboard/adminNav.jsx","actions/news.js","components/AdminDashboard/AdminDashboard.js","actions/cases.js","components/PatientDashboard/components/ProfileTable/ProfileTable.js","components/PatientDashboard/PatientDashboard.js","components/DoctorDashboard/SearchBar/SearchBar.js","components/DoctorDashboard/DoctorDashboard.js","components/RegistrationInfo/infomation.js","components/ChatPage/PreChatPage/PrePatientChat.js","main.jsx","App.js","serviceWorker.js","index.js","components/ChatPage/Picture/patient.jpg","components/ChatPage/Picture/doctor.jpg","components/HomePage/img/b1.gif","components/HomePage/img/covid.png","components/HomePage/img/ca1.jpg","components/HomePage/img/ca2.jpg","components/HomePage/img/ca3.jpg","components/HomePage/img/us1.jpg","components/HomePage/img/us2.jpg","components/HomePage/img/us3.jpg","components/HomePage/img/w1.jpeg","components/HomePage/img/w2.jpg","components/HomePage/img/w3.jpg","components/HomePage/img/pr1.png","components/HomePage/img/pr2.png","components/HomePage/img/pr3.png"],"names":["end","state","className","href","rel","aria-hidden","Component","introduce","num","cases","request","Request","method","headers","fetch","then","response","json","datas","setState","length","catch","error","console","log","request2","Container","UncontrolledAlert","color","col","Row","Col","md","this","src","Bact","alt","Header","type","data-toggle","aria-haspopup","aria-expanded","Navbar","title","to","scroll","updateLoginForm","loginComp","field","value","name","logout","app","res","currentDoctor","message","body","selectedPatient","updateWatchlist","doctor","patient","JSON","stringify","Accept","Promise","resolve","status","updateSelectedPatient","AddToWatchlist","button","Error","setDisabled","watchlist","success","disabled","setTimeout","endDoctorChat","readPatientCookie","currentPatient","selectedDoctor","updateSelectedDoctor","endPatientChat","homepage","r","Cases","props","handleChange","event","target","province","data","BC","AB","MB","NB","NL","NT","NS","NU","PE","QC","SK","YT","ON","undefined","p","deaths","recorvered","death","revorvered","onChange","CHeader","newsCA","info1","info2","info3","l1","l2","l3","t1","t2","t3","news","ca1","ca2","ca3","lca1","lca2","lca3","tca1","tca2","tca3","c1","c2","c3","newsUS","us1","us2","us3","lus1","lus2","lus3","tus1","tus2","tus3","newsW","w1","w2","w3","lw1","lw2","lw3","tw1","tw2","tw3","currentnews","tabNum","tabId","ripple","changeTab","Covid","Cimg","Carousel","id","data-ride","role","data-slide","preventions","Cone","Ctwo","Cthree","Login","username","password","wrong","history","push","margin","e","label","raised","onClick","login","currentAdmin","Registration","gender","age","visit_history","handleUsernameChange","bind","handlePasswordChange","handleAgeChange","handleGenderChange","handleProvinceChange","pattern","row","colored","registerComp","register","currentTarget","React","LoginHeader","logoutDoctor","chatWithPatients","doctorHome","patientIcon","doctorIcon","getMessages","chatPage","isDoctor","d","url2","messages","i","text","toString","sender","setPatientChatPage","url1","sendMessage","cp","receiver","messageReplied","isReplied","displayMessage","avatar","newMessage","user","uid","PreDoctorChat","patientMessages","pdc","pop","filter","m","columns","filterable","accessor","filterMethod","rows","matchSorter","keys","filterAll","sortable","Cell","url","setDoctorChatPage","noDataText","DoctorChatPage","onSubmit","innerText","addPatientToWatchlist","PatientHeader","logoutPatient","askADoctor","patientHome","PatientChatPage","doctorType","location","Greeting","userId","PatientTable","patients","doctors","searching","handleNameChange","patient_list","map","Id","_id","edit","updatePatient","shadow","sortFn","a","b","isAsc","match","localeCompare","tooltip","changed_id","parentElement","firstElementChild","new_state","slice","patien","users","DoctorTable","activeTab","handleLocationChange","handleDoctorTypeChange","doctor_list","updateDoctor","logoutAdmin","deletenews","postnews","Comp","new_news","AdminDashboard","No","new_cases","handleNewsChange","curr","handleCasesChange","parseInt","class","lus4","lus5","lus6","lw4","lw5","lw6","deletecases","postcases","displayTabTable","ProfileTable","loading","visits","visit","index","key","Button","readPatientVisitHistory","displayHistory","PatientDashboard","Date","Pimg","SearchBar","keyword","found","handleSearchClick","found_patients","removePatientFromWatchlist","getWatchlist","add","includes","placeholder","showSearch","showWatchlist","DoctorDashBoard","PrePatientChat","doctorInfo","createOptions","opt","select","ppc","Filter","style","width","Main","readSelectedPatientCookie","readDoctorCookie","readAdminCookie","exact","path","component","render","PatientLogin","covid","Dlogin","Alogin","App","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"weAoCeA,E,4MAjCbC,MAAQ,G,uDAEN,OACE,yBAAKC,UAAU,WACb,oDAEA,6BAEA,yEAEA,yBAAKA,UAAU,OACb,uBAAGC,KAAK,2BAA2BC,IAAI,QACrC,uBACEF,UAAU,iCACVG,cAAY,UAIhB,uBAAGF,KAAK,2BAA2BC,IAAI,QACrC,uBAAGF,UAAU,kBAAkBG,cAAY,UAE7C,uBAAGF,KAAK,2BAA2BC,IAAI,QACrC,uBAAGF,UAAU,gBAAgBG,cAAY,UAE3C,uBAAGF,KAAK,2BAA2BC,IAAI,QACrC,uBAAGF,UAAU,wBAAwBG,cAAY,gB,GA1B3CC,a,qDC+IHC,E,4MA3IbN,MAAQ,CAAEO,IAAK,EAAGC,MAAO,G,mEACH,IAAD,OACbC,EAAU,IAAIC,QAAQ,YAAa,CACvCC,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAIpBC,MAAMJ,GACHK,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKC,SAAS,CAAEX,IAAKU,EAAME,YAE5BC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MAEhC,IAAMG,EAAW,IAAId,QAAQ,cAAe,CAC1CC,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAIpBC,MAAMW,GACHV,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKC,SAAS,CAAEV,MAAOS,EAAMT,MAAMA,WAEpCY,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,Q,+BAGhC,OACE,6BACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBzB,UAAU,kBAAkB0B,MAAM,WACnD,8BACE,yCADF,0CAMJ,6BACA,6BACA,6BACA,kBAACF,EAAA,EAAD,KACE,kBAAC,OAAD,KACE,kBAAC,OAAD,CAAMG,IAAK,IACT,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,yBAAK9B,UAAU,WACb,4BACE,8BAAO+B,KAAKhC,MAAMQ,OADpB,uBAKF,6BAPF,IAOY,6BACV,yBAAKP,UAAU,WACb,4BACE,8BAAO+B,KAAKhC,MAAMO,KADpB,4BAQR,kBAAC,OAAD,CAAMqB,IAAK,GACT,yBAAKK,IAAKC,IAAMC,IAAI,OAAOlC,UAAU,gBAI3C,6BAtCF,IAsCY,6BAtCZ,IAsCsB,6BAtCtB,IAsCgC,6BAtChC,IAsC0C,6BAtC1C,IAsCoD,6BAtCpD,IAsC8D,6BAAU,IACtE,6BAvCF,IAuCY,6BAvCZ,IAuCsB,6BACpB,kBAACwB,EAAA,EAAD,KACE,6BACA,uBAAGxB,UAAU,QAAb,qBAEA,6BACA,6BACA,6BACA,6BACA,kBAAC4B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,yBAAK9B,UAAU,UACb,sDACA,wBAAIA,UAAU,kBAAd,qCAIF,6BACA,6BACA,yBAAKA,UAAU,UACb,6CACA,wBAAIA,UAAU,iBAAd,oCAKR,6BACA,6BACA,kBAAC,OAAD,KACE,kBAAC,OAAD,CAAM2B,IAAK,IACX,kBAAC,OAAD,CAAMA,IAAK,GACT,yBAAK3B,UAAU,SACb,uBAAGA,UAAU,6BAA6BG,cAAY,QACnD,KAEH,yBAAKH,UAAU,cACb,6BACA,uBAAGA,UAAU,QAAb,+CAIF,uBAAGA,UAAU,sBAAsBG,cAAY,UAEjD,8BAEF,kBAAC,OAAD,CAAMwB,IAAK,IACX,kBAAC,OAAD,CAAMA,IAAK,IACX,kBAAC,OAAD,CAAMA,IAAK,GACT,yBAAK3B,UAAU,SACb,uBAAGA,UAAU,6BAA6BG,cAAY,QACnD,KAEH,yBAAKH,UAAU,cACb,6BACA,uBAAGA,UAAU,QAAb,+CAIF,uBAAGA,UAAU,uBAAuBG,cAAY,WAGpD,kBAAC,OAAD,CAAMwB,IAAK,U,GArIGvB,aCuDT+B,G,kNAxDbpC,MAAQ,G,uDAEN,OACE,yBAAKC,UAAU,cACb,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,mBACf,kBAACwB,EAAA,EAAD,KACE,6BACE,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,wBAAIxB,UAAU,SAAd,6CACA,wBAAIA,UAAU,SACd,yBAAKA,UAAU,aACb,4BACEoC,KAAK,SACLpC,UAAU,kCACVqC,cAAY,WACZC,gBAAc,OACdC,gBAAc,SALhB,cASA,yBAAKvC,UAAU,iBACb,uBAAGA,UAAU,gBAAgBC,KAAK,iBAAlC,SAGA,uBAAGD,UAAU,gBAAgBC,KAAK,iBAAlC,WAGA,uBAAGD,UAAU,gBAAgBC,KAAK,gBAAlC,gBAGA,yBAAKD,UAAU,qBACf,uBAAGA,UAAU,gBAAgBC,KAAK,eAAlC,+B,GA7CKG,c,QC0BNoC,E,uKAxBX,OACE,yBAAKxC,UAAU,oBACb,kBAAC,SAAD,KACE,kBAAC,SAAD,CACEA,UAAU,eACVyC,MACE,kBAAC,IAAD,CAAMzC,UAAU,OAAO0C,GAAG,KAA1B,WAIFC,QAAM,GAEN,kBAAC,aAAD,KACE,kBAAC,IAAD,CAAMD,GAAG,KAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,0BACA,kBAAC,IAAD,CAAMA,GAAG,gBAAT,uB,GAjBOtC,a,QCoCRwC,EAAkB,SAACC,EAAWC,GACzC,IAAMC,EAAQD,EAAMC,MACdC,EAAOF,EAAME,KAEnBH,EAAU5B,SAAV,eACG+B,EAAOD,KAkCCE,EAAS,SAACC,GAGrBtC,MAFY,WAGPC,MAAK,SAACsC,GACHD,EAAIjC,SAAS,CACTmC,cAAe,KACfC,QAAS,CAACjB,KAAM,GAAIkB,KAAM,IAC1BC,gBAAiB,UAGxBpC,OAAM,SAACC,GACJC,QAAQC,IAAIF,OAwBhBoC,EAAkB,SAACC,EAAQC,GAC/B,IACMlD,EAAU,IAAIC,QADR,WACqB,CAC/BC,OAAQ,MACR4C,KAAMK,KAAKC,UAAU,CACnBF,QAASA,EACTD,OAAQA,IAEV9C,QAAS,CACPkD,OAAQ,oCACR,eAAgB,sBAGpB,OAAO,IAAIC,SAAQ,SAACC,GAClBnD,MAAMJ,GACDK,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,UAGlBF,MAAK,SAACE,GACHgD,EAAQhD,MAEXI,OAAM,SAACC,GACJC,QAAQC,IAAIF,UA4DX6C,EAAwB,WACnC,IACMzD,EAAU,IAAIC,QADR,4BACqB,CAC/BC,OAAQ,MACR4C,KAAMK,KAAKC,UAAU,CACnBL,gBAAiB,OAEnB5C,QAAS,CACPkD,OAAQ,oCACR,eAAgB,sBAGpB,OAAO,IAAIC,SAAQ,SAACC,GAClBnD,MAAMJ,GACDK,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,UAGlBF,MAAK,SAACE,GACHgD,EAAQhD,SAEfI,OAAM,SAACC,GACRC,QAAQC,IAAIF,OAKH8C,EAAiB,SAAChB,EAAKiB,EAAQV,EAAQC,GAClDF,EAAgBC,EAAQC,GACnB7C,MAAK,SAACE,GACH,IAAIA,EAQA,MAAM,IAAIqD,MAPVD,EAAOE,aAAc,EACrBnB,EAAIjC,SAAS,CACTqD,UAAWvD,EAAKuD,UAChBC,QAAS,8BACTnD,MAAO,QAMlBD,OAAM,SAACC,GACJ+C,EAAOK,UAAW,EAClBtB,EAAIjC,SAAS,CACTG,MAAO,qCACPmD,QAAS,KAEbE,YAAW,WACPN,EAAOK,UAAW,IACnB,SAKAE,EAAgB,SAACxB,GAC5Be,IACKpD,MAAK,SAACE,GACCA,GACAmC,EAAIjC,SAAS,CACTsC,gBAAiBxC,EAAKwC,qBAIjCpC,OAAM,SAACC,GACJC,QAAQC,IAAIF,OCtQTuD,EAAoB,SAACzB,GAE9BtC,MADY,2BAEPC,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,UAGlBF,MAAK,SAACE,GACCA,GAAQA,EAAK6D,gBACb1B,EAAIjC,SAAS,CAAC2D,eAAgB7D,EAAK6D,oBAG1CzD,OAAM,SAACC,GACJC,QAAQC,IAAIF,OAwBXwB,EAAkB,SAACC,EAAWC,GACvC,IAAMC,EAAQD,EAAMC,MACdC,EAAOF,EAAME,KAEnBH,EAAU5B,SAAV,eACK+B,EAAOD,KAyEHE,EAAS,SAACC,GAEnBtC,MADY,WAEPC,MAAK,SAACsC,GACHD,EAAIjC,SAAS,CACT2D,eAAgB,KAChBvB,QAAS,CAACjB,KAAM,GAAIkB,KAAM,IAC1BuB,eAAgB,UAGvB1D,OAAM,SAACC,GACJC,QAAQC,IAAIF,OAKX0D,EAAuB,WAChC,IACMtE,EAAU,IAAIC,QADR,2BACqB,CAC7BC,OAAQ,MACR4C,KAAMK,KAAKC,UAAU,CACjBiB,eAAgB,OAEpBlE,QAAS,CACLkD,OAAQ,oCACR,eAAgB,sBAGxB,OAAO,IAAIC,SAAQ,SAAAC,GACfnD,MAAMJ,GAASK,MAAK,SAAAsC,GAChB,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,UAEhBF,MAAK,SAAAE,GACJgD,EAAQhD,SAEbI,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAKP2D,EAAiB,SAAC7B,GAE3B4B,IAAuBjE,MAAK,SAAAE,GACpBA,GACAmC,EAAIjC,SACA,CACI4D,eAAgB9D,EAAK8D,oBAIhC1D,OAAM,SAAAC,GACPC,QAAQC,IAAIF,OCjHL4D,E,4MA7CXjF,MAAQ,G,kEAGJ+E,IAAuBjE,MAAK,SAAAoE,GACpBA,GACA5D,QAAQC,IAAI,8BAEjBH,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MAGhB6C,IAAwBpD,MAAK,SAAAoE,GACrBA,GACA5D,QAAQC,IAAI,+BAEjBH,OAAM,SAAAC,GACLC,QAAQC,IAAIF,Q,+BAKhB,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,OAAD,CAAMpB,UAAU,YACZ,kBAAC,OAAD,CAAM2B,IAAK,IACP,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEJ,kBAAC,OAAD,CAAMA,IAAK,KACX,kBAAC,OAAD,CAAMA,IAAK,KACX,kBAAC,OAAD,CAAMA,IAAK,KACX,kBAAC,OAAD,CAAMA,IAAK,KACX,kBAAC,OAAD,CAAMA,IAAK,KACX,kBAAC,OAAD,CAAMA,IAAK,KACX,kBAAC,OAAD,CAAMA,IAAK,KACX,kBAAC,OAAD,CAAMA,IAAK,IACP,kBAAC,EAAD,a,GAtCDvB,a,iBCmHR8E,G,wDAtHb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA6BRC,aAAe,SAACC,GAAW,IACjBtC,EAAUsC,EAAMC,OAAhBvC,MACM,OAAVA,EACF,EAAK9B,SAAS,CAAEsE,SAAU,EAAKxF,MAAMyF,KAAKC,KACvB,OAAV1C,EACT,EAAK9B,SAAS,CAAEsE,SAAU,EAAKxF,MAAMyF,KAAKE,KACvB,OAAV3C,EACT,EAAK9B,SAAS,CAAEsE,SAAU,EAAKxF,MAAMyF,KAAKG,KACvB,OAAV5C,EACT,EAAK9B,SAAS,CAAEsE,SAAU,EAAKxF,MAAMyF,KAAKI,KACvB,OAAV7C,EACT,EAAK9B,SAAS,CAAEsE,SAAU,EAAKxF,MAAMyF,KAAKK,KACvB,OAAV9C,EACT,EAAK9B,SAAS,CAAEsE,SAAU,EAAKxF,MAAMyF,KAAKM,KACvB,OAAV/C,EACT,EAAK9B,SAAS,CAAEsE,SAAU,EAAKxF,MAAMyF,KAAKO,KACvB,OAAVhD,EACT,EAAK9B,SAAS,CAAEsE,SAAU,EAAKxF,MAAMyF,KAAKQ,KACvB,OAAVjD,EACT,EAAK9B,SAAS,CAAEsE,SAAU,EAAKxF,MAAMyF,KAAKS,KACvB,OAAVlD,EACT,EAAK9B,SAAS,CAAEsE,SAAU,EAAKxF,MAAMyF,KAAKU,KACvB,OAAVnD,EACT,EAAK9B,SAAS,CAAEsE,SAAU,EAAKxF,MAAMyF,KAAKW,KACvB,OAAVpD,EACT,EAAK9B,SAAS,CAAEsE,SAAU,EAAKxF,MAAMyF,KAAKY,KAE1C,EAAKnF,SAAS,CAAEsE,SAAU,EAAKxF,MAAMyF,KAAKa,MAvD5C,EAAKtG,MAAQ,CACXyF,UAAMc,EACNf,SAAU,EAAKJ,MAAMoB,EACrBhG,WAAM+F,EACNE,YAAQF,EACRG,gBAAWH,GAPI,E,iEAUG,IAAD,OACb9F,EAAU,IAAIC,QAAQ,cAAe,CACzCC,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAIpBC,MAAMJ,GACDK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,EAAKC,SAAS,CAACuE,KAAMxE,EAAMT,QAC3B,EAAKU,SAAS,CAACV,MAAOS,EAAMT,MAAMA,QAClC,EAAKU,SAAS,CAACuF,OAAQxF,EAAMT,MAAMmG,QACnC,EAAKzF,SAAS,CAACwF,WAAWzF,EAAMT,MAAMoG,gBAGvCxF,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,Q,+BAkChC,OACE,yBAAKpB,UAAU,MACb,wBAAIA,UAAU,KAAd,qBACA,8BACE,2BAAOA,UAAU,KAAjB,aACA,4BAAQ4G,SAAU7E,KAAKqD,cACrB,4BAAQrC,MAAM,QAAd,8BACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,oBACA,4BAAQA,MAAM,MAAd,YACA,4BAAQA,MAAM,MAAd,iBACA,4BAAQA,MAAM,MAAd,6BACA,4BAAQA,MAAM,MAAd,yBACA,4BAAQA,MAAM,MAAd,eACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,wBACA,4BAAQA,MAAM,MAAd,UACA,4BAAQA,MAAM,MAAd,gBACA,4BAAQA,MAAM,MAAd,WAGJ,6BACA,wBAAI/C,UAAU,KAAd,sCACsC+B,KAAKhC,MAAMwF,UAEjD,6BACA,6BACA,6BACA,kBAAC/D,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,yBAAK9B,UAAU,KACb,yDAEF,kBAACwB,EAAA,EAAD,KACE,yBAAKxB,UAAU,KACb,kDACA,wBAAIA,UAAU,KAAK+B,KAAKhC,MAAMQ,QAEhC,yBAAKP,UAAU,KACb,uCACA,wBAAIA,UAAU,KAAK+B,KAAKhC,MAAMyG,SAEhC,yBAAKxG,UAAU,KACb,2CACA,wBAAIA,UAAU,KAAK+B,KAAKhC,MAAM0G,sB,GA7G5BrG,cCqBLyG,E,4MAzBb9G,MAAQ,G,uDAEN,OACE,yBAAKC,UAAU,MACb,6BACE,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,wBAAIA,UAAU,SAAd,mCACA,wBAAIA,UAAU,SACd,wBAAIA,UAAU,KAAd,6F,GAhBYI,a,mDCkFP0G,E,4MA5EX/G,MAAQ,CACJgH,WAAOT,EACPU,WAAOV,EACPW,WAAOX,EACPY,QAAIZ,EACJa,QAAIb,EACJc,QAAId,EACJe,QAAIf,EACJgB,QAAIhB,EACJiB,QAAIjB,G,mEAIc,IAAD,OACX9F,EAAU,IAAIC,QAAQ,aAAc,CACtCC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAIxBC,MAAMJ,GACDK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA2E,GACF,EAAKvE,SAAS,CAAC8F,MAAOvB,EAAKgC,KAAKC,MAChC,EAAKxG,SAAS,CAAC+F,MAAOxB,EAAKgC,KAAKE,MAChC,EAAKzG,SAAS,CAACgG,MAAOzB,EAAKgC,KAAKG,MAChC,EAAK1G,SAAS,CAACiG,GAAI1B,EAAKgC,KAAKI,OAC7B,EAAK3G,SAAS,CAACkG,GAAI3B,EAAKgC,KAAKK,OAC7B,EAAK5G,SAAS,CAACmG,GAAI5B,EAAKgC,KAAKM,OAC7B,EAAK7G,SAAS,CAACoG,GAAI7B,EAAKgC,KAAKO,OAC7B,EAAK9G,SAAS,CAACqG,GAAI9B,EAAKgC,KAAKQ,OAC7B,EAAK/G,SAAS,CAACsG,GAAI/B,EAAKgC,KAAKS,UAGhC9G,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,Q,+BAMhC,OACI,6BACI,yBAAKpB,UAAU,SACX,yBAAKgC,IAAKkG,IAAIlI,UAAU,YAAYkC,IAAI,QACxC,yBAAKlC,UAAU,KACX,4BAAK+B,KAAKhC,MAAMsH,IAChB,2BAAItF,KAAKhC,MAAMgH,OACf,uBAAG/G,UAAU,QAAQ+B,KAAKhC,MAAMmH,MAGxC,6BATJ,IASc,6BACV,6BACA,yBAAKlH,UAAU,SACX,yBAAKgC,IAAKmG,IAAInI,UAAU,YAAYkC,IAAI,QACxC,yBAAKlC,UAAU,KACX,4BAAK+B,KAAKhC,MAAMuH,IAChB,2BAAIvF,KAAKhC,MAAMiH,OACf,uBAAGhH,UAAU,QAAQ+B,KAAKhC,MAAMoH,MAGxC,6BAnBJ,IAmBc,6BACV,6BACA,yBAAKnH,UAAU,SACX,yBAAKgC,IAAKoG,IAAIpI,UAAU,YAAYkC,IAAI,QACxC,yBAAKlC,UAAU,KACX,4BAAK+B,KAAKhC,MAAMwH,IAChB,2BAAIxF,KAAKhC,MAAMkH,OACf,uBAAGjH,UAAU,QAAQ+B,KAAKhC,MAAMqH,W,GArEnChH,a,mDC0ENiI,G,4MA3EXtI,MAAQ,CACJgH,WAAOT,EACPU,WAAOV,EACPW,WAAOX,EACPY,QAAIZ,EACJa,QAAIb,EACJc,QAAId,EACJe,QAAIf,EACJgB,QAAIhB,EACJiB,QAAIjB,G,mEAGc,IAAD,OACX9F,EAAU,IAAIC,QAAQ,aAAc,CACtCC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAIxBC,MAAMJ,GACDK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA2E,GACF,EAAKvE,SAAS,CAAC8F,MAAOvB,EAAKgC,KAAKc,MAChC,EAAKrH,SAAS,CAAC+F,MAAOxB,EAAKgC,KAAKe,MAChC,EAAKtH,SAAS,CAACgG,MAAOzB,EAAKgC,KAAKgB,MAChC,EAAKvH,SAAS,CAACiG,GAAI1B,EAAKgC,KAAKiB,OAC7B,EAAKxH,SAAS,CAACkG,GAAI3B,EAAKgC,KAAKkB,OAC7B,EAAKzH,SAAS,CAACmG,GAAI5B,EAAKgC,KAAKmB,OAC7B,EAAK1H,SAAS,CAACoG,GAAI7B,EAAKgC,KAAKoB,OAC7B,EAAK3H,SAAS,CAACqG,GAAI9B,EAAKgC,KAAKqB,OAC7B,EAAK5H,SAAS,CAACsG,GAAI/B,EAAKgC,KAAKsB,UAGhC3H,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,Q,+BAMpC,OACE,6BACE,yBAAKpB,UAAU,SACb,yBAAKgC,IAAKkG,IAAIlI,UAAU,YAAYkC,IAAI,QACxC,yBAAKlC,UAAU,KACb,4BAAK+B,KAAKhC,MAAMsH,IAChB,2BAAItF,KAAKhC,MAAMgH,OACf,uBAAG/G,UAAU,QAAQ+B,KAAKhC,MAAMmH,MAGpC,6BATF,IASY,6BACV,6BACA,yBAAKlH,UAAU,SACb,yBAAKgC,IAAKmG,IAAInI,UAAU,YAAYkC,IAAI,QACxC,yBAAKlC,UAAU,KACb,4BAAK+B,KAAKhC,MAAMuH,IAChB,2BAAIvF,KAAKhC,MAAMiH,OACf,uBAAGhH,UAAU,QAAQ+B,KAAKhC,MAAMoH,MAGpC,6BAnBF,IAmBY,6BACV,6BACA,yBAAKnH,UAAU,SACb,yBAAKgC,IAAKoG,IAAIpI,UAAU,YAAYkC,IAAI,QACxC,yBAAKlC,UAAU,KACb,4BAAK+B,KAAKhC,MAAMwH,IAChB,2BAAIxF,KAAKhC,MAAMkH,OACf,uBAAGjH,UAAU,QAAQ+B,KAAKhC,MAAMqH,W,GApEvBhH,a,4DC4EN2I,G,4MA1EXhJ,MAAQ,CACJgH,WAAOT,EACPU,WAAOV,EACPW,WAAOX,EACPY,QAAIZ,EACJa,QAAIb,EACJc,QAAId,EACJe,QAAIf,EACJgB,QAAIhB,EACJiB,QAAIjB,G,mEAGc,IAAD,OACX9F,EAAU,IAAIC,QAAQ,aAAc,CACtCC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAIxBC,MAAMJ,GACDK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA2E,GACF,EAAKvE,SAAS,CAAC8F,MAAOvB,EAAKgC,KAAKwB,KAChC,EAAK/H,SAAS,CAAC+F,MAAOxB,EAAKgC,KAAKyB,KAChC,EAAKhI,SAAS,CAACgG,MAAOzB,EAAKgC,KAAK0B,KAChC,EAAKjI,SAAS,CAACiG,GAAI1B,EAAKgC,KAAK2B,MAC7B,EAAKlI,SAAS,CAACkG,GAAI3B,EAAKgC,KAAK4B,MAC7B,EAAKnI,SAAS,CAACmG,GAAI5B,EAAKgC,KAAK6B,MAC7B,EAAKpI,SAAS,CAACoG,GAAI7B,EAAKgC,KAAK8B,MAC7B,EAAKrI,SAAS,CAACqG,GAAI9B,EAAKgC,KAAK+B,MAC7B,EAAKtI,SAAS,CAACsG,GAAI/B,EAAKgC,KAAKgC,SAGhCrI,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,Q,+BAKhC,OACI,6BACI,yBAAKpB,UAAU,SACX,yBAAKgC,IAAKkG,KAAIlI,UAAU,YAAYkC,IAAI,QACxC,yBAAKlC,UAAU,KACX,4BAAK+B,KAAKhC,MAAMsH,IAChB,2BAAItF,KAAKhC,MAAMgH,OACf,uBAAG/G,UAAU,QAAQ+B,KAAKhC,MAAMmH,MAGxC,6BATJ,IASc,6BACV,6BACA,yBAAKlH,UAAU,SACX,yBAAKgC,IAAKmG,KAAInI,UAAU,YAAYkC,IAAI,QACxC,yBAAKlC,UAAU,KACX,4BAAK+B,KAAKhC,MAAMuH,IAChB,2BAAIvF,KAAKhC,MAAMiH,OACf,uBAAGhH,UAAU,QAAQ+B,KAAKhC,MAAMoH,MAGxC,6BAnBJ,IAmBc,6BACV,6BACA,yBAAKnH,UAAU,SACX,yBAAKgC,IAAKoG,KAAIpI,UAAU,YAAYkC,IAAI,QACxC,yBAAKlC,UAAU,KACX,4BAAK+B,KAAKhC,MAAMwH,IAChB,2BAAIxF,KAAKhC,MAAMkH,OACf,uBAAGjH,UAAU,QAAQ+B,KAAKhC,MAAMqH,W,GAnEpChH,aC4BLqJ,G,4MA1Bb1J,MAAQ,CAAE2J,OAAQ,G,0DAEhB,OAA0B,IAAtB3H,KAAKhC,MAAM2J,OACN,kBAAC,EAAD,MACwB,IAAtB3H,KAAKhC,MAAM2J,OACb,kBAAC,GAAD,MAEA,kBAAC,GAAD,Q,+BAGD,IAAD,OACP,OACE,6BACE,kBAAC,OAAD,CAAM9C,SAAU,SAAC+C,GAAD,OAAW,EAAK1I,SAAS,CAAEyI,OAAQC,KAAUC,QAAM,GACjE,kBAAC,MAAD,eACA,kBAAC,MAAD,WACA,kBAAC,MAAD,eAEF,iCACE,yBAAK5J,UAAU,WAAW+B,KAAK8H,mB,GApBfzJ,aCoDX0J,G,4MA7Cb/J,MAAQ,G,uDAGN,OACE,yBAAKC,UAAU,YACb,kBAAC,EAAD,MACA,kBAAC,OAAD,KACE,kBAAC,OAAD,CAAM2B,IAAK,GACT,kBAACH,EAAA,EAAD,KACE,kBAAC,EAAD,MACA,6BACA,6BACA,6BACA,6BACA,6BACA,kBAAC,EAAD,MACA,6BACA,6BATF,IASY,6BACV,6BACA,wBAAIxB,UAAU,KAAd,mBAGJ,kBAAC,OAAD,CAAM2B,IAAK,GACT,6BACE,6BACA,6BACA,6BACA,yBAAKK,IAAK+H,IAAM7H,IAAI,gBAGxB,kBAAC,OAAD,CAAMP,IAAK,IACT,kBAAC,GAAD,QAGJ,6BACA,6BACA,6BAhCF,IAgCY,6BACV,6BACA,6BACA,kBAAC,EAAD,W,GAxCYvB,aCsCL4J,I,mNAhDbjK,MAAQ,G,uDAEN,OACE,yBACEkK,GAAG,0BACHjK,UAAU,iBACVkK,YAAU,YAEV,yBAAKlK,UAAU,kBACb,yBAAKA,UAAU,wBACb,yBAAKgC,IAAKD,KAAKoD,MAAM+C,GAAIlI,UAAU,gBAAgBkC,IAAI,SAEzD,yBAAKlC,UAAU,iBACb,yBAAKgC,IAAKD,KAAKoD,MAAMgD,GAAInI,UAAU,gBAAgBkC,IAAI,SAEzD,yBAAKlC,UAAU,iBACb,yBAAKgC,IAAKD,KAAKoD,MAAMiD,GAAIpI,UAAU,gBAAgBkC,IAAI,UAG3D,uBACElC,UAAU,wBACVC,KAAK,2BACLkK,KAAK,SACLC,aAAW,QAEX,0BACEpK,UAAU,6BACVG,cAAY,SAEd,0BAAMH,UAAU,WAAhB,aAEF,uBACEA,UAAU,wBACVC,KAAK,2BACLkK,KAAK,SACLC,aAAW,QAEX,0BACEpK,UAAU,6BACVG,cAAY,SAEd,0BAAMH,UAAU,WAAhB,c,GA1CaI,c,4DC+NRiK,G,4MAnNbtK,MAAQ,CAAE2J,OAAQ,G,0DAGhB,OAA0B,IAAtB3H,KAAKhC,MAAM2J,OAEX,y/EAwC6B,IAAtB3H,KAAKhC,MAAM2J,OAElB,yBAAK1J,UAAU,YACb,kBAAC,OAAD,KACE,kBAAC,WAAD,6BAEE,uBAAGA,UAAU,uBAAuBG,cAAY,UAGlD,kBAAC,WAAD,2BAEE,uBAAGH,UAAU,uBAAuBG,cAAY,UAGlD,kBAAC,WAAD,4EAGE,uBAAGH,UAAU,uBAAuBG,cAAY,UAGlD,kBAAC,WAAD,gCAEE,uBAAGH,UAAU,uBAAuBG,cAAY,UAElD,kBAAC,WAAD,2BAEE,uBAAGH,UAAU,uBAAuBG,cAAY,YAKzB,IAAtB4B,KAAKhC,MAAM2J,OAElB,yBAAK1J,UAAU,YACb,kBAAC,OAAD,KACE,kBAAC,WAAD,6CAEE,uBAAGA,UAAU,kBAAkBG,cAAY,UAG7C,kBAAC,WAAD,wCAEE,uBAAGH,UAAU,kBAAkBG,cAAY,UAG7C,kBAAC,WAAD,gEAEE,uBAAGH,UAAU,kBAAkBG,cAAY,UAG7C,kBAAC,WAAD,8CAEE,uBAAGH,UAAU,kBAAkBG,cAAY,UAE7C,kBAAC,WAAD,yBAEE,uBAAGH,UAAU,kBAAkBG,cAAY,YAKpB,IAAtB4B,KAAKhC,MAAM2J,OAElB,yBAAK1J,UAAU,YACb,kBAAC,OAAD,KACE,kBAAC,WAAD,eAEE,uBAAGA,UAAU,eAAeG,cAAY,UAG1C,kBAAC,WAAD,cAEE,uBAAGH,UAAU,eAAeG,cAAY,UAG1C,kBAAC,WAAD,mBAEE,uBAAGH,UAAU,eAAeG,cAAY,UAG1C,kBAAC,WAAD,oBAEE,uBAAGH,UAAU,eAAeG,cAAY,UAG1C,kBAAC,WAAD,sBAEE,uBAAGH,UAAU,eAAeG,cAAY,UAG1C,kBAAC,WAAD,0BAEE,uBAAGH,UAAU,eAAeG,cAAY,iBA/B3C,I,+BAsCC,IAAD,OACP,OACE,yBAAKH,UAAU,YACb,kBAAC,EAAD,MACA,kBAAC,OAAD,KACE,kBAAC,OAAD,CAAM2B,IAAK,IACT,kBAACH,EAAA,EAAD,KACE,6BACE,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,wBAAIxB,UAAU,SAAd,wDAGA,uBAAGA,UAAU,KAAb,qDAGA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,gCAIN,kBAAC,OAAD,CAAM2B,IAAK,GACT,kBAAC,GAAD,CAAUuG,GAAIoC,KAAMnC,GAAIoC,KAAMnC,GAAIoC,QAEpC,kBAAC,OAAD,CAAM7I,IAAK,GACT,yBAAK3B,UAAU,YACb,kBAAC,OAAD,CACE4G,SAAU,SAAC+C,GAAD,OAAW,EAAK1I,SAAS,CAAEyI,OAAQC,KAC7CC,QAAM,GAEN,kBAAC,MAAD,yBACA,kBAAC,MAAD,mBACA,kBAAC,MAAD,yBACA,kBAAC,MAAD,kBAEF,iCACE,yBAAK5J,UAAU,WAAW+B,KAAK8H,gBAIrC,kBAAC,OAAD,CAAMlI,IAAK,IACR,IACD,6BACA,6BACA,6BACA,6BACA,kBAAC,EAAD,a,GA5McvB,aC2CXqK,I,wDAhDb,WAAYtF,GAAQ,IAAD,8BACjB,cAAMA,IAGRpF,MAAQ,CAAE2K,SAAU,GAAIC,SAAU,GAAIC,OAAO,GAF3C,EAAKzF,MAAM0F,QAAQC,KAAK,iBAFP,E,qDAMT,IAAD,OACC5H,EAAQnB,KAAKoD,MAAbjC,IACR,OACE,yBAAKlD,UAAU,qBACb,kBAAC,EAAD,MACA,kBAACwB,EAAA,EAAD,CAAWxB,UAAU,WACnB,wBAAIA,UAAU,cAAd,iBACA,6BACA,yBAAKA,UAAU,SAAf,YACY,IACV,kBAAC,YAAD,CACEgD,KAAK,WACL+H,OAAO,SACPnE,SAAU,SAACoE,GAAD,OAAOpI,EAAgB,EAAMoI,EAAE1F,SACzC2F,MAAM,+BACL,IACH,6BARF,YASY,IACV,kBAAC,YAAD,CACEjI,KAAK,WACL+H,OAAO,SACPnE,SAAU,SAACoE,GAAD,OAAOpI,EAAgB,EAAMoI,EAAE1F,SACzC2F,MAAM,+BACL,IACH,6BACClJ,KAAKhC,MAAM6K,MACV,yBAAK5K,UAAU,sBAAsBmK,KAAK,SAA1C,yDAIA,8BAEF,kBAAC,SAAD,CAAQe,QAAM,EAACxJ,OAAK,EAACyJ,QAAS,kBXIrB,SAACtI,EAAWK,GAC7B,IAAM1C,EAAU,IAAIC,QAAQ,kBAAmB,CAC3CC,OAAQ,OACR4C,KAAMK,KAAKC,UAAUf,EAAU9C,OAC/BY,QAAS,CACLkD,OAAQ,oCACR,eAAgB,sBAIxBjD,MAAMJ,GACDK,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,UAGlBF,MAAK,SAACE,GACHM,QAAQC,IAAIP,GACZM,QAAQC,IAAIP,EAAK6D,gBACW,OAAxB7D,EAAK6D,qBAA4D0B,IAAjCvF,EAAK6D,eAAe8F,WACpDrJ,QAAQC,IAAI,WACZ4B,EAAIjC,SAAS,CAAC2D,eAAgB7D,EAAK6D,iBACnCvD,QAAQC,IAAI4B,EAAInD,WAGvBoB,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZyB,EAAU5B,SAAS,CAAC2J,OAAO,OW/BSQ,CAAM,EAAMlI,KAAhD,iB,GAvCQ9C,cCgDLqK,G,kDA/Cb,WAAYtF,GAAQ,IAAD,8BACjB,cAAMA,IAGRpF,MAAQ,CAAE2K,SAAU,GAAIC,SAAU,GAAIC,OAAO,GAF3C,EAAKzF,MAAM0F,QAAQC,KAAK,gBAFP,E,qDAMT,IAAD,OACC5H,EAAQnB,KAAKoD,MAAbjC,IACR,OACE,yBAAKlD,UAAU,qBACb,kBAAC,EAAD,MACA,kBAACwB,EAAA,EAAD,CAAWxB,UAAU,WACnB,wBAAIA,UAAU,cAAd,gBACA,6BACA,yBAAKA,UAAU,SAAf,YACY,IACV,kBAAC,YAAD,CACEgD,KAAK,WACL+H,OAAO,SACPnE,SAAU,SAACoE,GAAD,OAAOpI,EAAgB,EAAMoI,EAAE1F,SACzC2F,MAAM,+BACL,IACH,6BARF,YASY,IACV,kBAAC,YAAD,CACEjI,KAAK,WACL+H,OAAO,SACPnE,SAAU,SAACoE,GAAD,OAAOpI,EAAgB,EAAMoI,EAAE1F,SACzC2F,MAAM,+BACL,IACH,6BACClJ,KAAKhC,MAAM6K,MACV,yBAAK5K,UAAU,sBAAsBmK,KAAK,SAA1C,yDAIA,8BAEF,kBAAC,SAAD,CAAQe,QAAM,EAACxJ,OAAK,EAACyJ,QAAS,kBbIrB,SAACtI,EAAWK,GAC/B,IAAM1C,EAAU,IAAIC,QAAQ,iBAAkB,CAC5CC,OAAQ,OACR4C,KAAMK,KAAKC,UAAUf,EAAU9C,OAC/BY,QAAS,CACPkD,OAAQ,oCACR,eAAgB,sBAIpBjD,MAAMJ,GACDK,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,UAGlBF,MAAK,SAACE,GACHM,QAAQC,IAAIP,QACeuF,IAAvBvF,EAAKqC,eACLF,EAAIjC,SAAS,CAACmC,cAAerC,EAAKqC,mBAGzCjC,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZyB,EAAU5B,SAAS,CAAC2J,OAAO,Oa5BWQ,CAAM,EAAMlI,KAAhD,iB,GAvCQ9C,aCePwC,GAAkB,SAACC,EAAWC,GACvC,IAAMC,EAAQD,EAAMC,MACdC,EAAOF,EAAME,KAEnBH,EAAU5B,SAAV,eACK+B,EAAOD,KAwCHE,GAAS,SAACC,GAGnBtC,MAFY,WAGPC,MAAK,SAACsC,GACHD,EAAIjC,SAAS,CACToK,aAAc,KACdhI,QAAS,CAACjB,KAAM,GAAIkB,KAAM,SAGjCnC,OAAM,SAACC,GACJC,QAAQC,IAAIF,OCvBTqJ,G,kDA/Cb,WAAYtF,GAAQ,IAAD,8BACjB,cAAMA,IAGRpF,MAAQ,CAAE2K,SAAU,GAAIC,SAAU,GAAIC,OAAO,GAF3C,EAAKzF,MAAM0F,QAAQC,KAAK,eAFP,E,qDAMT,IAAD,OACC5H,EAAQnB,KAAKoD,MAAbjC,IACR,OACE,yBAAKlD,UAAU,qBACb,kBAAC,EAAD,MACA,kBAACwB,EAAA,EAAD,CAAWxB,UAAU,WACnB,wBAAIA,UAAU,cAAd,eACA,6BACA,yBAAKA,UAAU,SAAf,YACY,IACV,kBAAC,YAAD,CACEgD,KAAK,WACL+H,OAAO,SACPnE,SAAU,SAACoE,GAAD,OAAOpI,GAAgB,EAAMoI,EAAE1F,SACzC2F,MAAM,+BACL,IACH,6BARF,YASY,IACV,kBAAC,YAAD,CACEjI,KAAK,WACL+H,OAAO,SACPnE,SAAU,SAACoE,GAAD,OAAOpI,GAAgB,EAAMoI,EAAE1F,SACzC2F,MAAM,+BACL,IACH,6BACClJ,KAAKhC,MAAM6K,MACV,yBAAK5K,UAAU,sBAAsBmK,KAAK,SAA1C,yDAIA,8BAEF,kBAAC,SAAD,CAAQe,QAAM,EAACxJ,OAAK,EAACyJ,QAAS,kBDdrB,SAACtI,EAAWK,GAC7B,IAAM1C,EAAU,IAAIC,QAAQ,gBAAiB,CACzCC,OAAQ,OACR4C,KAAMK,KAAKC,UAAUf,EAAU9C,OAC/BY,QAAS,CACLkD,OAAQ,oCACR,eAAgB,sBAIxBjD,MAAMJ,GACDK,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,OAGX,MADAM,QAAQC,IAAI6B,EAAIa,QACV,IAAII,SAGjBvD,MAAK,SAACE,GACHM,QAAQC,IAAIP,GAEc,OAAtBA,EAAKsK,mBAC0B/E,IAA/BvF,EAAKsK,aAAaX,UAElBxH,EAAIjC,SAAS,CAACoK,aAActK,EAAKsK,kBAGxClK,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZyB,EAAU5B,SAAS,CAAC2J,OAAO,OChBSQ,CAAM,EAAMlI,KAAhD,iB,GAvCQ9C,aCmJLkL,I,yDAhJb,WAAYnG,GAAQ,IAAD,8BACjB,cAAMA,IACDH,SAAWG,EAAMjC,IACtB,EAAKiC,MAAM0F,QAAQC,KAAK,iBACxB,EAAK1J,MAAQ,GACb,EAAKrB,MAAQ,CACX2K,SAAU,GACVC,SAAU,GACVY,OAAQ,OACRC,IAAK,GACLjG,SAAU,KACVkG,cAAe,IAEjB,EAAKC,qBAAuB,EAAKA,qBAAqBC,KAA1B,gBAC5B,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBACvB,EAAKG,mBAAqB,EAAKA,mBAAmBH,KAAxB,gBAC1B,EAAKI,qBAAuB,EAAKA,qBAAqBJ,KAA1B,gBAjBX,E,qDAoBT,IAAD,SACgB5J,KAAKoD,MAAhB0F,GADL,EACA3H,IADA,EACK2H,SACZ,OACA,6BACE,kBAAC,EAAD,MACA,yBAAK7K,UAAU,gBACb,kBAACwB,EAAA,EAAD,KACE,6BACE,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BAEA,wBAAIxB,UAAU,2BAAd,gBACA,6BACA,yBAAKA,UAAU,oBAAf,YACY,IACV,kBAAC,YAAD,CAAW4G,SAAU7E,KAAK2J,qBAAsBT,MAAM,WAFxD,IAEoE,6BAFpE,YAGY,IACV,kBAAC,YAAD,CAAWrE,SAAU7E,KAAK6J,qBAAsBX,MAAM,SAJxD,IAIkE,6BAJlE,UAKU,IACR,kBAAC,aAAD,CAAYjI,KAAK,SAASD,MAAM,QAC9B,kBAAC,QAAD,CAAOA,MAAM,OAAOoI,QAASpJ,KAAK+J,mBAAoBlC,QAAM,GAA5D,QAGA,kBAAC,QAAD,CAAO7G,MAAM,SAASoI,QAASpJ,KAAK+J,mBAAoBlC,QAAM,GAA9D,WAGY,IACd,6BAdF,OAeO,IACL,kBAAC,YAAD,CACEhD,SAAU7E,KAAK8J,gBACfZ,MAAM,KACNe,QAAQ,oBACR5K,MAAM,8BACL,IACH,6BAtBF,YAwBE,kBAAC,aAAD,CACE6K,KAAK,EACLjJ,KAAK,WACLD,MAAM,MAEN,kBAAC,QAAD,CAAOoI,QAASpJ,KAAKgK,qBAAsBhJ,MAAM,KAAK6G,QAAM,GAA5D,oBAGA,6BACA,kBAAC,QAAD,CAAOuB,QAASpJ,KAAKgK,qBAAsBhJ,MAAM,KAAK6G,QAAM,GAA5D,WAGA,6BACA,kBAAC,QAAD,CAAOuB,QAASpJ,KAAKgK,qBAAsBhJ,MAAM,KAAK6G,QAAM,GAA5D,YAGA,6BACA,kBAAC,QAAD,CAAOuB,QAASpJ,KAAKgK,qBAAsBhJ,MAAM,KAAK6G,QAAM,GAA5D,iBAGA,6BACA,kBAAC,QAAD,CAAOuB,QAASpJ,KAAKgK,qBAAsBhJ,MAAM,KAAK6G,QAAM,GAA5D,6BAGA,6BACA,kBAAC,QAAD,CAAOuB,QAASpJ,KAAKgK,qBAAsBhJ,MAAM,KAAK6G,QAAM,GAA5D,eAGA,6BACA,kBAAC,QAAD,CAAOuB,QAASpJ,KAAKgK,qBAAsBhJ,MAAM,KAAK6G,QAAM,GAA5D,WAGA,6BACA,kBAAC,QAAD,CAAOuB,QAASpJ,KAAKgK,qBAAsBhJ,MAAM,MAAM6G,QAAM,GAA7D,wBAGA,6BACA,kBAAC,QAAD,CAAOuB,QAASpJ,KAAKgK,qBAAsBhJ,MAAM,KAAK6G,QAAM,GAA5D,UAGA,6BACA,kBAAC,QAAD,CAAOuB,QAASpJ,KAAKgK,qBAAsBhJ,MAAM,KAAK6G,QAAM,GAA5D,iBAIF,6BACA,kBAAC,SAAD,CAAQsB,QAAM,EAACgB,SAAO,EAACf,QAAS,kBfnCtB,SAACgB,EAAcjJ,EAAK2H,GACxC,IAEMnH,EAAUyI,EAAapM,MAEvBS,EAAU,IAAIC,QAJR,YAIqB,CAC7BC,OAAQ,OACR4C,KAAMK,KAAKC,UAAUF,GACrB/C,QAAS,CACLkD,OAAQ,oCACR,eAAgB,sBAGxBjD,MAAMJ,GACDK,MAAK,SAAUsC,GACZ,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,OAEX,MAAM,IAAIqD,SAGjBvD,MAAK,SAACE,GACEmC,EAAInD,MAAM6E,qBAA+C0B,IAA7BpD,EAAInD,MAAM6E,gBAEvCiG,EAAQC,KAAK,oBAGpB3J,OAAM,SAAC6J,GACJmB,EAAa/K,MAAQ,mDACrB+K,EAAalL,SAASkL,EAAapM,UeMKqM,CAAS,EAAM,EAAKpH,SAAU6F,KAApE,UAGA,wBAAI7K,UAAU,SAAS+B,KAAKX,c,2CAUnBiE,GACnBtD,KAAKd,SAAS,CAAEyJ,SAAUrF,EAAMC,OAAOvC,U,2CAGpBsC,GACnBtD,KAAKd,SAAS,CAAE0J,SAAUtF,EAAMC,OAAOvC,U,yCAGtBsC,GACjBtD,KAAKd,SAAS,CAAEsK,OAAQlG,EAAMgH,cAActJ,U,sCAG9BsC,GACdtD,KAAKd,SAAS,CAAEuK,IAAKnG,EAAMgH,cAActJ,U,2CAGtBsC,GACnBtD,KAAKd,SAAS,CAAEsE,SAAUF,EAAMC,OAAOvC,Y,GA5IhBuJ,IAAMlM,YCuClBmM,G,4MAzCbxM,MAAQ,G,EACRyM,aAAe,SAACtJ,GACd,EAAKiC,MAAM0F,QAAQC,KAAK,gBACxB7H,EAAOC,I,EAGTuJ,iBAAmB,SAACvJ,GAClBwB,EAAcxB,GACd,EAAKiC,MAAM0F,QAAQC,KAAK,4B,EAG1B4B,WAAa,SAACxJ,GACZwB,EAAcxB,GACd,EAAKiC,MAAM0F,QAAQC,KAAK,gB,uDAGhB,IAAD,SACwB/I,KAAKoD,MAA5BjC,EADD,EACCA,IAAcF,GADf,EACM6H,QADN,EACe7H,MACtB,OACE,6BACE,kBAAC,SAAD,CACEP,MACE,kBAAC,IAAD,CAAMzC,UAAU,OAAO0C,GAAG,eAA1B,UACMM,EADN,eAIFhD,UAAU,aAEV,kBAAC,aAAD,KACE,kBAAC,IAAD,CAAMmL,QAAS,kBAAM,EAAKuB,WAAWxJ,KAArC,aACA,kBAAC,IAAD,CAAMiI,QAAS,kBAAM,EAAKsB,iBAAiBvJ,KAA3C,sBAGA,kBAAC,IAAD,CAAMiI,QAAS,kBAAM,EAAKqB,aAAatJ,KAAvC,kB,GAlCc9C,a,0BCLpBuM,GAAc,wDACdC,GAAa,4DAINC,GAAc,SAACC,EAAUC,GAElCnM,MADYmM,EAAW,yBAA2B,2BAE7ClM,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,UAGlBF,MAAK,SAACE,GACCA,IAASA,EAAK6D,gBAAkB7D,EAAKqC,iBAChC2J,EAGDD,EAAS7L,SAAS,CAACmC,cAAerC,EAAKqC,gBAFvC0J,EAAS7L,SAAS,CAAC2D,eAAgB7D,EAAK6D,kBAMhDhE,MADamM,EAAW,4BAA8B,4BAEjDlM,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,UAGlBF,MAAK,SAACE,GACCA,IAASA,EAAK8D,gBAAkB9D,EAAKwC,mBAChCwJ,EAGDD,EAAS7L,SAAS,CAACsC,gBAAiBxC,EAAKwC,kBAFzCuJ,EAAS7L,SAAS,CAAC4D,eAAgB9D,EAAK8D,kBAKhD,IAAM0B,EAAIwG,EAAWD,EAAS/M,MAAMwD,gBAAgBmH,SAAWoC,EAAS/M,MAAM6E,eAAe8F,SACvFsC,EAAID,EAAWD,EAAS/M,MAAMqD,cAAcsH,SAAWoC,EAAS/M,MAAM8E,eAAe6F,SACrFuC,EAAI,oBAAgB1G,EAAhB,YAAqByG,GAC/BpM,MAAMqM,GACDpM,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,UAGlBF,MAAK,SAACE,GAEH,IADA,IAAMmM,EAAW,GACRC,EAAI,EAAGA,EAAIpM,EAAKG,OAAQiM,IAC7BD,EAASpC,KAAK,CACV,KAAQ/J,EAAKoM,GAAGC,KAChB,IAAOD,EAAI,GAAGE,WACd,OAAU,CACN,KAAQtM,EAAKoM,GAAGG,OAChB,IAAOvM,EAAKoM,GAAGG,SAAW/G,EAAI,IAAM,IACpC,OAAUxF,EAAKoM,GAAGG,SAAW/G,EAAIoG,GAAcC,MAI3DE,EAAS7L,SAAS,CACdiM,SAAUA,OAGjB/L,OAAM,SAACC,GACJC,QAAQC,IAAIF,SAGvBD,OAAM,SAACC,GACJC,QAAQC,IAAIF,SAGvBD,OAAM,SAACC,GACJC,QAAQC,IAAIF,OAOXmM,GAAqB,SAAC9J,EAAQP,EAAK2H,GAC5C,IAAM2C,EAAI,mBAAe/J,GACzB7C,MAAM4M,GAAM3M,MAAK,SAACsC,GACd,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,UAEhBF,MAAK,SAACE,GACLmC,EAAIjC,SAAS,CACT4D,eAAgB9D,EAAK,KAEzB,IACMyE,EAAO,CACT9B,QAASR,EAAInD,MAAM6E,eACnBnB,OAAQ1C,EAAK,IAEXP,EAAU,IAAIC,QALR,YAKqB,CAC7BC,OAAQ,MACR4C,KAAMK,KAAKC,UAAU4B,GACrB7E,QAAS,CACLkD,OAAQ,oCACR,eAAgB,sBAGxBjD,MAAMJ,GAASK,MAAK,SAACsC,GACjB0H,EAAQC,KAAK,gCACd3J,OAAM,SAACC,GACNC,QAAQC,IAAIF,SAEjBD,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAkFPqM,GAAc,SAACpK,EAASqK,GACjC,IAAMJ,EAASI,EAAG3N,MAAMgN,SAAWW,EAAG3N,MAAMqD,cAAcsH,SAAWgD,EAAG3N,MAAM6E,eAAe8F,SACvFiD,EAAWD,EAAG3N,MAAMgN,SAAWW,EAAG3N,MAAMwD,gBAAgBmH,SAAWgD,EAAG3N,MAAM8E,eAAe6F,UArB9E,SAACiD,EAAUL,GAC9B,IAAM9M,EAAU,IAAIC,QAAQ,oBAAqB,CAC7CC,OAAQ,OACR4C,KAAMK,KAAKC,UAAU,CACjB0J,OAAQA,EACRK,SAAUA,IAEdhN,QAAS,CACLkD,OAAQ,oCACR,eAAgB,sBAGxBjD,MAAMJ,GAASW,OAAM,SAAAC,GACjBC,QAAQC,IAAIF,MAShBwM,CAAeN,EAAQK,GACvB,IAAMnI,EAAO,CACT8H,OAAQA,EACRK,SAAUA,EACVP,KAAM/J,EACNwK,WAAW,GAETrN,EAAU,IAAIC,QAAQ,YAAa,CACrCC,OAAQ,OACR4C,KAAMK,KAAKC,UAAU4B,GACrB7E,QAAS,CACLkD,OAAQ,oCACR,eAAgB,sBAGxBjD,MAAMJ,GAASK,MAAK,SAAAsC,GACG,MAAfA,EAAIa,OACJ3C,QAAQC,IAAI,WAEZD,QAAQC,IAAI,aAEjBH,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAMP0M,GAAiB,SAACzK,EAASyJ,GACpC,IAAMiB,EAASjB,EAAS/M,MAAMgN,SAAWH,GAAaD,GAChDqB,EAAa,CACf,KAAQ3K,EACR,GAAMyJ,EAAS/M,MAAMmN,SAAShM,OAAS,EACvC,OAAU,CACN,KAAQ4L,EAAS/M,MAAMiD,KACvB,IAAO8J,EAAS/M,MAAMkO,KAAKC,IAC3B,OAAUH,IAGlBjB,EAAS/M,MAAMmN,SAASpC,KAAKkD,I,UCtJlBG,G,kDAxEX,WAAYhJ,GAAQ,IAAD,8BACf,cAAMA,IACDA,MAAM0F,QAAQC,KAAK,2BACxB,EAAK/K,MAAQ,CACTqD,cAAe,CACXsH,SAAU,IAEd0D,gBAAiB,IAPN,E,gEDuGU,IAACC,IC3FRtM,KD6FtBnB,MADY,0BAEPC,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,UAGlBF,MAAK,SAACE,GACCA,GAAQA,EAAKqC,eACbiL,EAAIpN,SAAS,CAACmC,cAAerC,EAAKqC,gBAEtC,IAAMoK,EAAI,oBAAgBa,EAAItO,MAAMqD,cAAcsH,UAClD9J,MAAM4M,GACD3M,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,UAGlBF,MAAK,SAACE,GAEH,IADA,IAAMqN,EAAkB,GADZ,aAGR,IAAI/K,EAAUtC,EAAKuN,MACnBvN,EAAOA,EAAKwN,QAAO,SAAAC,GAAC,OAAIA,EAAElB,SAAWjK,EAAQiK,UAC7Cc,EAAgBtD,KAAKzH,IAHlBtC,EAAKG,OAAS,GAAI,IAKzBmN,EAAIpN,SAAS,CACTmN,gBAAiBA,OAGxBjN,OAAM,SAACC,GACJC,QAAQC,IAAIF,SAGvBD,OAAM,SAACC,GACJC,QAAQC,IAAIF,Q,+BC3HV,IAAD,EACkBW,KAAKoD,MAArB0F,EADF,EACEA,QAAS3H,EADX,EACWA,IACVuL,EAAU,CACZ,CACItM,OAAQ,eACR8H,GAAI,cACJyE,YAAY,EACZC,SAAU,SACVC,aAAc,SAACL,EAAQM,GAAT,OACVC,aAAYD,EAAMN,EAAOxL,MAAO,CAACgM,KAAM,CAAC,kBAC5CC,WAAW,GAEf,CACI7M,OAAQ,UACR8H,GAAI,UACJgF,UAAU,EACVP,YAAY,EACZC,SAAU,OACVC,aAAc,SAACL,EAAQM,GAAT,OACVC,aAAYD,EAAMN,EAAOxL,MAAO,CAACgM,KAAM,CAAC,cAC5CC,WAAW,GAEf,CACI7M,OAAQ,oBACR8M,UAAU,EACVN,SAAU,SACVO,KAAM,SAAC/J,GAAD,OACF,4BAAQnF,UAAW,YAAaiK,GAAI9E,EAAMpC,MAAOoI,QAAS,SAAA9F,IDsG7C,SAAC3B,EAASR,EAAK2H,GAC5C,IAAMsE,EAAG,oBAAgBzL,GACzB9C,MAAMuO,GAAKtO,MAAK,SAACsC,GACb,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,UAEhBF,MAAK,SAACE,GACLmC,EAAIjC,SAAS,CACTsC,gBAAiBxC,EAAK,KAE1B8J,EAAQC,KAAK,+BACd3J,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MCjHIgO,CAAkB/J,EAAMC,OAAO2E,GAAI/G,EAAK2H,KAD5C,mBAOZ,OACI,yBAAK7K,UAAU,gBACX,kBAAC,GAAD,CAAa6K,QAASA,EAAS3H,IAAKA,EAAKF,KAAMjB,KAAKhC,MAAMqD,cAAcsH,WACxE,yBAAK1K,UAAU,YACX,uBAAGA,UAAU,eAAb,sBAIJ,kBAAC,KAAD,KACI,kBAAC,KAAD,CACIA,UAAS,aACTyO,QAASA,EACTjJ,KAAMzD,KAAKhC,MAAMqO,gBACjBiB,WAAU,mC,GA/DN/C,IAAMlM,W,4CC6EnBkP,G,kDAzEX,WAAYnK,GAAQ,IAAD,8BACf,cAAMA,IAGVpF,MAAQ,CACJqD,cAAe,CACXsH,SAAU,IAEdwC,SAAU,GACVe,KAAM,CAAC,IAAO,KACd1K,gBAAiB,CACbmH,SAAU,GACVa,OAAQ,GACRC,IAAK,GACLjG,SAAU,IAEdwH,UAAU,GAhBK,E,gEAqBfF,GAAY9K,MADK,K,+BAIX,IAAD,SACkBA,KAAKoD,MAArB0F,EADF,EACEA,QAAS3H,EADX,EACWA,IACVO,EAAS1B,KAAKhC,MAAMqD,cACpBM,EAAU3B,KAAKhC,MAAMwD,gBAC3B,OACI,6BACI,kBAAC,GAAD,CAAasH,QAASA,EAAS3H,IAAKA,EAAKF,KAAMS,EAAOiH,WACtD,yBAAK1K,UAAU,SACX,yBAAKA,UAAW,UAAhB,QACA,yBAAKA,UAAU,cACX,kBAAC,KAAD,KACI,yBAAKA,UAAU,eACX,0CAAgByD,EAAOiH,WAE3B,kBAAC,KAAD,CACIwC,SAAUnL,KAAKhC,MAAMmN,SACrBe,KAAMlM,KAAKhC,MAAMkO,KACjBsB,SAAU,SAAClM,GACPoK,GAAYpK,EAAS,GACrByK,GAAezK,EAAS,QAMxC,yBAAKrD,UAAU,SACX,kBAAC,KAAD,KACI,uBAAGA,UAAU,WAAb,gBACA,yBAAKA,UAAU,eACX,yBAAKgC,IAAK2K,KAAazK,IAAKwB,EAAQgH,SAAU1K,UAAW,gBACzD,4BAAK0D,EAAQgH,UACb,2BAAIhH,EAAQ6H,QACZ,2BAAI7H,EAAQ8H,KACZ,2BAAI9H,EAAQ6B,UACZ,2BACI,4BAAQvF,UAAW,aAAcmL,QAAS,SAAA9F,IpByEzC,SAAClB,EAAQV,EAAQC,EAASR,GAC7DM,EAAgBC,EAAQC,GAAS7C,MAAK,SAACsC,GACjCA,GACFD,EAAInD,MAAMqD,cAAckB,UAAYnB,EAAImB,UACxCH,EAAOqL,UAAY,SACnB/K,YAAW,WACTN,EAAOqL,UAAY,gBAClB,OAEHrL,EAAOqL,UAAY,UACnB/K,YAAW,WACTN,EAAOqL,UAAY,gBAClB,SoBpF+BC,CAAsBpK,EAAMC,OAAQ7B,EAAQC,EAASR,KADzD,yB,GA5DPoJ,IAAMlM,WC6BpBsP,I,mNAjCb3P,MAAQ,G,EAER4P,cAAgB,SAACzM,GACf,EAAKiC,MAAM0F,QAAQC,KAAK,iBACxB7H,EAAOC,I,EAGT0M,WAAa,SAAC1M,GACZ6B,EAAe7B,GACf,EAAKiC,MAAM0F,QAAQC,KAAK,6B,EAG1B+E,YAAc,SAAC3M,GACb6B,EAAe7B,GACf,EAAKiC,MAAM0F,QAAQC,KAAK,iB,uDAGhB,IAAD,SACwB/I,KAAKoD,MAA5BjC,EADD,EACCA,IAAcF,GADf,EACM6H,QADN,EACe7H,MACtB,OACE,6BACE,kBAAC,SAAD,CAAQP,MAAK,UAAKO,EAAL,cAAuBhD,UAAU,aAC5C,kBAAC,aAAD,KACE,kBAAC,IAAD,CAAMmL,QAAS,kBAAM,EAAK0E,YAAY3M,KAAtC,aACA,kBAAC,IAAD,CAAMiI,QAAS,kBAAM,EAAKyE,WAAW1M,KAArC,iBACA,kBAAC,IAAD,CAAMiI,QAAS,kBAAM,EAAKwE,cAAczM,KAAxC,kB,GA1BgB9C,c,oBCqEb0P,G,kDAlEX,WAAY3K,GAAQ,IAAD,8BACf,cAAMA,IAIVpF,MAAQ,CACJ6E,eAAgB,CACZ8F,SAAU,IAEdwC,SAAU,GACVe,KAAM,CAAC,IAAO,KACdpJ,eAAgB,CACZ6F,SAAU,GACVqF,WAAY,GACZC,SAAU,IAEdjD,UAAU,GAdV,EAAK5H,MAAM0F,QAAQC,KAAK,6BAFT,E,gEAqBf+B,GAAY9K,MADK,K,+BAIX,IAAD,SACkBA,KAAKoD,MAArB0F,EADF,EACEA,QAAS3H,EADX,EACWA,IACVQ,EAAU3B,KAAKhC,MAAM6E,eACrBnB,EAAS1B,KAAKhC,MAAM8E,eAC1B,OACI,6BACI,kBAAC,GAAD,CAAegG,QAASA,EAAS3H,IAAKA,EAAKF,KAAMU,EAAQgH,WACzD,yBAAK1K,UAAU,SACX,yBAAKA,UAAW,UAAhB,QACA,yBAAKA,UAAU,cACX,kBAAC,KAAD,KACI,yBAAKA,UAAU,eACX,uCAAa0D,EAAQgH,WAEzB,kBAAC,KAAD,CACIwC,SAAUnL,KAAKhC,MAAMmN,SACrBe,KAAMlM,KAAKhC,MAAMkO,KACjBsB,SAAU,SAAClM,GACPoK,GAAYpK,EAAS,GACrByK,GAAezK,EAAS,QAMxC,yBAAKrD,UAAU,SACX,kBAAC,KAAD,KACI,uBAAGA,UAAU,WAAb,eACA,yBAAKA,UAAU,eACX,yBAAKgC,IAAK4K,KAAY1K,IAAKuB,EAAOiH,SAAU1K,UAAW,gBACvD,kCAAQyD,EAAOiH,UACf,2BAAIjH,EAAOsM,YACX,2BAAItM,EAAOuM,mB,GAzDb1D,IAAMlM,W,aCerB6P,OAnBf,SAAkB9K,GAAQ,IAChBnC,EAAiBmC,EAAjBnC,KAAMkN,EAAW/K,EAAX+K,OAEd,OACE,6BACE,kBAAC1O,EAAA,EAAD,KACE,6BACE,6BAEA,6BACA,wBAAIxB,UAAU,YAAd,WAAkCgD,GAClC,wBAAIhD,UAAU,SACd,uCAAakQ,OCsPRC,G,kDA7PX,WAAYhL,GAAQ,IAAD,8BACf,cAAMA,IACDpF,MAAO,CACRqQ,SAAU,GACVC,QAAS,GACTjP,MAAO,GACPmD,QAAS,GACT+L,WAAW,GAEf,EAAKC,iBAAmB,EAAKA,iBAAiB5E,KAAtB,gBACxB,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKI,qBAAuB,EAAKA,qBAAqBJ,KAA1B,gBAC5B,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBAZR,E,iEVqGI,IAACzI,IUpFRnB,KVuFhBnB,MAFY,aAGPC,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,OAEX,MAAM,IAAIqD,SAGjBvD,MAAK,SAACE,GACU,OAATA,QAA0BuF,IAATvF,EACjBmC,EAAIjC,SAAS,CAACmP,SAAUrP,IAGxBmC,EAAIjC,SAAS,CACTG,MAAO,qDAIlBD,OAAM,SAAC6J,GACJ9H,EAAIjC,SAAS,CAACG,MAAO,uD,+BUvGnB,IAAD,OAECoP,EAAezO,KAAKhC,MAAMqQ,SAASK,KAAI,SAACxC,GAAD,MACzC,CAACjL,KAAM,2BAAOZ,KAAK,OAAOW,MAAOkL,EAAKvD,SAAU9D,SAAU,EAAK2J,mBAC/DG,GAAIzC,EAAK0C,IACThG,SAAU,2BAAOvI,KAAK,OAAOwE,SAAU,EAAKgF,uBAC5CrG,SAAU,2BAAOnD,KAAK,OAAOW,MAAOkL,EAAK1I,SAAUqB,SAAU,EAAKmF,uBAClEP,IAAK,2BAAOpJ,KAAK,OAAOW,MAAOkL,EAAKzC,IAAK5E,SAAU,EAAKiF,kBACxD+E,KAAM,4BAAQzF,QAAS,kBVoGN,SAACjI,EAAKQ,GAC/B,IAAMlD,EAAU,IAAIC,QAAJ,iCAAsCiD,EAAQiN,KAAO,CACjEjQ,OAAQ,MACR4C,KAAMK,KAAKC,UAAU,CAACF,QAASA,IAC/B/C,QAAS,CACLkD,OAAQ,oCACR,eAAgB,sBAIxBxC,QAAQC,IAAIqC,KAAKC,UAAUF,IAC3BrC,QAAQC,IAAIoC,EAAQiN,KAEpB/P,MAAMJ,GACDK,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OAMJ,MAAM,IAAII,MALVlB,EAAIjC,SAAS,CACTG,MAAO,GACPmD,QAAQ,gBAAD,OAAkBb,EAAQiN,IAA1B,+BAMlBxP,OAAM,SAAC6J,GACJ9H,EAAIjC,SAAS,CACTG,MAAO,yCACPmD,QAAS,QU/HesM,CAAc,EAAM5C,KAA1C,YAgHV,OACI,6BACI,wBAAIjO,UAAU,SAAS+B,KAAKhC,MAAMqB,OAClC,wBAAIpB,UAAU,WAAW+B,KAAKhC,MAAMwE,SACpC,kBAAC,QAAD,CACA0K,UAAQ,EACR6B,OAAQ,EACRjC,KAAM2B,GAGF,kBAAC,cAAD,CACAxN,KAAK,KACL+N,OAAQ,SAACC,EAAGC,EAAGC,GAAP,OAAkBA,EAAQF,EAAIC,GAAGE,MAAM,QAAQ,GAAGC,eAAeF,EAAQD,EAAID,GAAGG,MAAM,QAAQ,KACtGE,QAAQ,uBAHR,WAQA,kBAAC,cAAD,CACArO,KAAK,OACL+N,OAAQ,SAACC,EAAGC,EAAGC,GAAP,OAAkBA,EAAQF,EAAIC,GAAGE,MAAM,QAAQ,GAAGC,eAAeF,EAAQD,EAAID,GAAGG,MAAM,QAAQ,KACtGE,QAAQ,yBAHR,QAQA,kBAAC,cAAD,CACArO,KAAK,WAELqO,QAAQ,mCAHR,gBAQA,kBAAC,cAAD,CACArO,KAAK,WAELqO,QAAQ,6BAHR,YAQA,kBAAC,cAAD,CACArO,KAAK,MAELqO,QAAQ,wBAHR,OAQA,kBAAC,cAAD,CACArO,KAAK,OAELqO,QAAQ,0DAHR,Y,uCAYChM,GAGb,IAFA,IAAMiM,EAAYjM,EAAMC,OAAOiM,cAAcA,cAAcC,kBAAkBhC,UACvEiC,EAAW1P,KAAKhC,MAAMqQ,SAASsB,QAC5BvE,EAAI,EAAGA,EAAIsE,EAAUvQ,OAAQiM,IAClC,GAAIsE,EAAUtE,GAAGwD,MAAQW,EAAY,CACjCG,EAAUtE,GAAGzC,SAAWrF,EAAMC,OAAOvC,MACrC,MAGRhB,KAAKd,SAAS,CAAC0Q,OAAQF,M,2CAGNpM,GACjBhE,QAAQC,IAAI+D,EAAMC,OAAOiM,cAAcA,cAAcC,kBAAkBhC,WAGvE,IAFA,IAAM8B,EAAYjM,EAAMC,OAAOiM,cAAcA,cAAcC,kBAAkBhC,UACvEiC,EAAW1P,KAAKhC,MAAMqQ,SAASsB,QAC5BvE,EAAI,EAAGA,EAAIsE,EAAUvQ,OAAQiM,IAClC,GAAIsE,EAAUtE,GAAGwD,MAAQW,EAAY,CACjCG,EAAUtE,GAAGxC,SAAWtF,EAAMC,OAAOvC,MACrC,MAGRhB,KAAKd,SAAS,CAAC2Q,MAAOH,M,2CAGLpM,GAGjB,IAFA,IAAMiM,EAAYjM,EAAMC,OAAOiM,cAAcA,cAAcC,kBAAkBhC,UACvEiC,EAAW1P,KAAKhC,MAAMqQ,SAASsB,QAC5BvE,EAAI,EAAGA,EAAIsE,EAAUvQ,OAAQiM,IAClC,GAAIsE,EAAUtE,GAAGwD,MAAQW,EAAY,CACjCG,EAAUtE,GAAG5H,SAAWF,EAAMC,OAAOvC,MACrC,MAGRhB,KAAKd,SAAS,CAACmP,SAAUqB,M,sCAGbpM,GAGZ,IAFA,IAAMiM,EAAYjM,EAAMC,OAAOiM,cAAcA,cAAcC,kBAAkBhC,UACvEiC,EAAW1P,KAAKhC,MAAMqQ,SAASsB,QAC5BvE,EAAI,EAAGA,EAAIsE,EAAUvQ,OAAQiM,IAClC,GAAIsE,EAAUtE,GAAGwD,MAAQW,EAAY,CACjCG,EAAUtE,GAAG3B,IAAMnG,EAAMC,OAAOvC,MAChC,MAGRhB,KAAKd,SAAS,CAACmP,SAAUqB,Q,GA1PNnF,IAAMlM,WCoJlByR,G,kDAlJX,WAAY1M,GAAQ,IAAD,8BACf,cAAMA,IACDpF,MAAO,CACRsQ,QAAS,GACTjP,MAAO,GACPmD,QAAS,GACTuN,UAAW,GAEf,EAAKvB,iBAAmB,EAAKA,iBAAiB5E,KAAtB,gBACxB,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKoG,qBAAuB,EAAKA,qBAAqBpG,KAA1B,gBAC5B,EAAKqG,uBAAyB,EAAKA,uBAAuBrG,KAA5B,gBAXf,E,iEXyEG,IAACzI,IWzDRnB,KX4DfnB,MAFY,YAGPC,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,OAEX,MAAM,IAAIqD,SAGjBvD,MAAK,SAACE,GACU,OAATA,QAA0BuF,IAATvF,GACjBM,QAAQC,IAAI,sBACZD,QAAQC,IAAI4B,EAAInD,OAChBmD,EAAIjC,SAAS,CAACoP,QAAStP,IACvBM,QAAQC,IAAI,qBACZD,QAAQC,IAAI4B,EAAInD,QAEhBmD,EAAIjC,SAAS,CAACG,MAAO,oDAG5BD,OAAM,SAAC6J,GACJ9H,EAAIjC,SAAS,CAACG,MAAO,sD,+BW7EnB,IAAD,OAEC6Q,EAAclQ,KAAKhC,MAAMsQ,QAAQI,KAAI,SAACxC,GAAD,MACvC,CAACjL,KAAM,2BAAOZ,KAAK,OAAOW,MAAOkL,EAAKvD,SAAU9D,SAAU,EAAK2J,mBAC/DG,GAAIzC,EAAK0C,IACThG,SAAU,2BAAOvI,KAAK,OAAOwE,SAAU,EAAKgF,uBAC5CoE,SAAU,2BAAO5N,KAAK,OAAOW,MAAOkL,EAAK+B,SAAUpJ,SAAU,EAAKmL,uBAClEhC,WAAY,2BAAO3N,KAAK,OAAOW,MAAOkL,EAAK8B,WAAYnJ,SAAU,EAAKoL,yBACtEpB,KAAM,4BAAQzF,QAAS,kBXsIP,SAACjI,EAAKO,GAC9B,IAAMjD,EAAU,IAAIC,QAAJ,gCAAqCgD,EAAOkN,KAAO,CAC/DjQ,OAAQ,MACR4C,KAAMK,KAAKC,UAAU,CAACH,OAAQA,IAC9B9C,QAAS,CACLkD,OAAQ,oCACR,eAAgB,sBAIxBxC,QAAQC,IAAImC,GAEZ7C,MAAMJ,GACDK,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OAMJ,MAAM,IAAII,MALVlB,EAAIjC,SAAS,CACTG,MAAO,GACPmD,QAAQ,eAAD,OAAiBd,EAAOkN,IAAxB,+BAMlBxP,OAAM,SAAC6J,GACJ9H,EAAIjC,SAAS,CACTG,MAAO,yCACPmD,QAAS,QWhKe2N,CAAa,EAAMjE,KAAzC,YAKV,OACI,6BACI,wBAAIjO,UAAU,SAAS+B,KAAKhC,MAAMqB,OAClC,wBAAIpB,UAAU,WAAW+B,KAAKhC,MAAMwE,SACpC,kBAAC,QAAD,CACA0K,UAAQ,EACR6B,OAAQ,EACRjC,KAAMoD,GAGF,kBAAC,cAAD,CACAjP,KAAK,KACL+N,OAAQ,SAACC,EAAGC,EAAGC,GAAP,OAAkBA,EAAQF,EAAIC,GAAGE,MAAM,QAAQ,GAAGC,eAAeF,EAAQD,EAAID,GAAGG,MAAM,QAAQ,KACtGE,QAAQ,uBAHR,WAQA,kBAAC,cAAD,CACArO,KAAK,OACL+N,OAAQ,SAACC,EAAGC,EAAGC,GAAP,OAAkBA,EAAQF,EAAIC,GAAGE,MAAM,QAAQ,GAAGC,eAAeF,EAAQD,EAAID,GAAGG,MAAM,QAAQ,KACtGE,QAAQ,yBAHR,QAQA,kBAAC,cAAD,CACArO,KAAK,WAELqO,QAAQ,mCAHR,gBAQA,kBAAC,cAAD,CACArO,KAAK,WAELqO,QAAQ,6BAHR,YAQA,kBAAC,cAAD,CACArO,KAAK,aAELqO,QAAQ,kCAHR,eAQA,kBAAC,cAAD,CACArO,KAAK,OAELqO,QAAQ,0DAHR,Y,uCAYChM,GACb,IAAMiM,EAAYjM,EAAMC,OAAOiM,cAAcA,cAAcC,kBAAkBhC,UACvEiC,EAAW1P,KAAKhC,MAAMsQ,QAAQqB,QACpCrQ,QAAQC,IAAImQ,EAAU,GAAGd,KACzB,IAAK,IAAIxD,EAAI,EAAGA,EAAIsE,EAAUvQ,OAAQiM,IAClC,GAAIsE,EAAUtE,GAAGwD,MAAQW,EAAY,CACjCG,EAAUtE,GAAGzC,SAAWrF,EAAMC,OAAOvC,MACrC,MAGRhB,KAAKd,SAAS,CAACoP,QAASoB,M,2CAGPpM,GACjBhE,QAAQC,IAAI+D,EAAMC,OAAOiM,cAAcA,cAAcC,kBAAkBhC,WAGvE,IAFA,IAAM8B,EAAYjM,EAAMC,OAAOiM,cAAcA,cAAcC,kBAAkBhC,UACvEiC,EAAW1P,KAAKhC,MAAMsQ,QAAQqB,QAC3BvE,EAAI,EAAGA,EAAIsE,EAAUvQ,OAAQiM,IAClC,GAAIsE,EAAUtE,GAAGwD,MAAQW,EAAY,CACjCG,EAAUtE,GAAGxC,SAAWtF,EAAMC,OAAOvC,MACrC,MAGRhB,KAAKd,SAAS,CAACoP,QAASoB,M,2CAGPpM,GAGjB,IAFA,IAAMiM,EAAYjM,EAAMC,OAAOiM,cAAcA,cAAcC,kBAAkBhC,UACvEiC,EAAW1P,KAAKhC,MAAMsQ,QAAQqB,QAC3BvE,EAAI,EAAGA,EAAIsE,EAAUvQ,OAAQiM,IAClC,GAAIsE,EAAUtE,GAAGwD,MAAQW,EAAY,CACjCG,EAAUtE,GAAG6C,SAAW3K,EAAMC,OAAOvC,MACrC,MAGRhB,KAAKd,SAAS,CAACoP,QAASoB,M,6CAGLpM,GAGnB,IAFA,IAAMiM,EAAYjM,EAAMC,OAAOiM,cAAcA,cAAcC,kBAAkBhC,UACvEiC,EAAW1P,KAAKhC,MAAMsQ,QAAQqB,QAC3BvE,EAAI,EAAGA,EAAIsE,EAAUvQ,OAAQiM,IAClC,GAAIsE,EAAUtE,GAAGwD,MAAQW,EAAY,CACjCG,EAAUtE,GAAG4C,WAAa1K,EAAMC,OAAOvC,MACvC,MAGRhB,KAAKd,SAAS,CAACoP,QAASoB,Q,GA/INnF,IAAMlM,WC6BjBoC,G,4MA/Bb2P,YAAc,SAACjP,GACb,EAAKiC,MAAM0F,QAAQC,KAAK,eACxB7H,GAAOC,I,uDAEC,IAAD,OACCA,EAAQnB,KAAKoD,MAAbjC,IACR,OACE,yBAAKlD,UAAU,oBACb,kBAAC,SAAD,KACE,kBAAC,SAAD,CACEA,UAAU,YACVyC,MACE,kBAAC,IAAD,CAAMzC,UAAU,OAAO0C,GAAG,KAA1B,WAIFC,QAAM,GAEN,kBAAC,aAAD,KACE,kBAAC,IAAD,CAAMD,GAAG,KAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,0BACA,kBAAC,IAAD,CAAMA,GAAG,gBAAT,eACA,kBAAC,IAAD,CAAMyI,QAAS,kBAAM,EAAKgH,YAAYjP,KAAtC,mB,GAvBO9C,aCHRgS,GAAa,WACxB,IAEM5R,EAAU,IAAIC,QAFR,eAEqB,CAC/BC,OAAQ,WAGVE,MAAMJ,GACDK,MAAK,SAACsC,GAAD,OAASA,EAAIpC,UAClBF,MAAK,SAACsC,GAAD,OAAS9B,QAAQC,IAAI6B,MAC1BhC,OAAM,SAAC6J,GACN3J,QAAQC,IAAI0J,OAIPqH,GAAW,SAACC,GACvB,IAEM/R,EAAQ+R,EAAKvS,MAAMwS,SACnB/R,EAAU,IAAIC,QAHR,QAGqB,CAC/BC,OAAQ,OAER4C,KAAMK,KAAKC,UAAUrD,GACrBI,QAAS,CACPkD,OAAQ,oCACR,eAAgB,sBAIpBjD,MAAMJ,GAASW,OAAM,SAAC6J,GACpB3J,QAAQC,IAAI0J,OC6dDwH,G,kDAvbb,WAAYrN,GAAQ,IAAD,8BAEjB,cAAMA,IA3DRpF,MAAQ,CACNsD,QAAS,CAAEjB,KAAM,GAAIkB,KAAM,IAC3BoH,SAAU,EAAKvF,MAAMjC,IAAInD,MAAMsL,aAAaX,SAC5CT,GAAI,EAAK9E,MAAMjC,IAAInD,MAAMsL,aAAasF,IACtCmB,UAAW,EAEXS,SAAU,CACRE,GAAI,EACJhL,IAAK,2CACLC,IAAK,2CACLC,IAAK,2CACLC,KAAM,2CACNC,KAAM,2CACNC,KAAM,2CACNC,KAAM,2CACNC,KAAM,2CACNC,KAAM,2CACNK,IAAK,2CACLC,IAAK,2CACLC,IAAK,2CACLC,KAAM,2CACNC,KAAM,2CACNC,KAAM,2CACNC,KAAM,2CACNC,KAAM,2CACNC,KAAM,2CACNE,GAAI,2CACJC,GAAI,2CACJC,GAAI,2CACJC,IAAK,2CACLC,IAAK,2CACLC,IAAK,2CACLC,IAAK,2CACLC,IAAK,2CACLC,IAAK,4CAEPkJ,UAAW,CACTD,GAAI,EACJ/M,GAAI,EACJD,GAAI,EACJE,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJK,GAAI,EACJJ,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJ7F,MAAO,EACPmG,MAAO,EACPC,WAAY,IAIG,EAMnBgM,iBAAmB,SAACtN,GAClB,IAAIuN,EAAO,EAAK7S,MAAMwS,SAChBtI,EAAK5E,EAAMC,OAAO2E,GACb,QAAPA,EACF2I,EAAKnL,IAAMpC,EAAMC,OAAOvC,MACR,QAAPkH,EACT2I,EAAKlL,IAAMrC,EAAMC,OAAOvC,MACR,QAAPkH,EACT2I,EAAKjL,IAAMtC,EAAMC,OAAOvC,MACR,SAAPkH,EACT2I,EAAKhL,KAAOvC,EAAMC,OAAOvC,MACT,SAAPkH,EACT2I,EAAK/K,KAAOxC,EAAMC,OAAOvC,MACT,SAAPkH,EACT2I,EAAK9K,KAAOzC,EAAMC,OAAOvC,MACT,SAAPkH,EACT2I,EAAK7K,KAAO1C,EAAMC,OAAOvC,MACT,SAAPkH,EACT2I,EAAK5K,KAAO3C,EAAMC,OAAOvC,MACT,SAAPkH,EACT2I,EAAK3K,KAAO5C,EAAMC,OAAOvC,MACT,QAAPkH,EACT2I,EAAKtK,IAAMjD,EAAMC,OAAOvC,MACR,QAAPkH,EACT2I,EAAKrK,IAAMlD,EAAMC,OAAOvC,MACR,QAAPkH,EACT2I,EAAKpK,IAAMnD,EAAMC,OAAOvC,MACR,SAAPkH,EACT2I,EAAKnK,KAAOpD,EAAMC,OAAOvC,MACT,SAAPkH,EACT2I,EAAKlK,KAAOrD,EAAMC,OAAOvC,MACT,SAAPkH,EACT2I,EAAKjK,KAAOtD,EAAMC,OAAOvC,MACT,SAAPkH,EACT2I,EAAKhK,KAAOvD,EAAMC,OAAOvC,MACT,SAAPkH,EACT2I,EAAK/J,KAAOxD,EAAMC,OAAOvC,MACT,SAAPkH,EACT2I,EAAK9J,KAAOzD,EAAMC,OAAOvC,MACT,OAAPkH,EACT2I,EAAK5J,GAAK3D,EAAMC,OAAOvC,MACP,OAAPkH,EACT2I,EAAK3J,GAAK5D,EAAMC,OAAOvC,MACP,OAAPkH,EACT2I,EAAK1J,GAAK7D,EAAMC,OAAOvC,MACP,QAAPkH,EACT2I,EAAKzJ,IAAM9D,EAAMC,OAAOvC,MACR,QAAPkH,EACT2I,EAAKxJ,IAAM/D,EAAMC,OAAOvC,MACR,QAAPkH,EACT2I,EAAKvJ,IAAMhE,EAAMC,OAAOvC,MACR,QAAPkH,EACT2I,EAAKtJ,IAAMjE,EAAMC,OAAOvC,MACR,QAAPkH,EACT2I,EAAKrJ,IAAMlE,EAAMC,OAAOvC,MACR,QAAPkH,IACT2I,EAAKpJ,IAAMnE,EAAMC,OAAOvC,OAG1B,EAAK9B,SAAS,CACZsR,SAAUK,KAlEK,EAsEnBC,kBAAoB,SAACxN,GACnB,IAAIuN,EAAO,EAAK7S,MAAM2S,UAChBzI,EAAK5E,EAAMC,OAAO2E,GACb,OAAPA,EACF2I,EAAKlN,GAAKoN,SAASzN,EAAMC,OAAOvC,MAAO,IACvB,OAAPkH,EACT2I,EAAKnN,GAAKqN,SAASzN,EAAMC,OAAOvC,MAAO,IACvB,OAAPkH,EACT2I,EAAKjN,GAAKmN,SAASzN,EAAMC,OAAOvC,MAAO,IACvB,OAAPkH,EACT2I,EAAKhN,GAAKkN,SAASzN,EAAMC,OAAOvC,MAAO,IACvB,OAAPkH,EACT2I,EAAK/M,GAAKiN,SAASzN,EAAMC,OAAOvC,MAAO,IACvB,OAAPkH,EACT2I,EAAK9M,GAAKgN,SAASzN,EAAMC,OAAOvC,MAAO,IACvB,OAAPkH,EACT2I,EAAK7M,GAAK+M,SAASzN,EAAMC,OAAOvC,MAAO,IACvB,OAAPkH,EACT2I,EAAK5M,GAAK8M,SAASzN,EAAMC,OAAOvC,MAAO,IACvB,OAAPkH,EACT2I,EAAKvM,GAAKyM,SAASzN,EAAMC,OAAOvC,MAAO,IACvB,OAAPkH,EACT2I,EAAK3M,GAAK6M,SAASzN,EAAMC,OAAOvC,MAAO,IACvB,OAAPkH,EACT2I,EAAK1M,GAAK4M,SAASzN,EAAMC,OAAOvC,MAAO,IACvB,OAAPkH,EACT2I,EAAKzM,GAAK2M,SAASzN,EAAMC,OAAOvC,MAAO,IACvB,OAAPkH,EACT2I,EAAKxM,GAAK0M,SAASzN,EAAMC,OAAOvC,MAAO,IACvB,UAAPkH,EACT2I,EAAKrS,MAAQuS,SAASzN,EAAMC,OAAOvC,MAAO,IAC1B,UAAPkH,EACT2I,EAAKlM,MAAQoM,SAASzN,EAAMC,OAAOvC,MAAO,IAC1B,eAAPkH,IACT2I,EAAKjM,WAAamM,SAASzN,EAAMC,OAAOvC,MAAO,KAEjD,EAAK9B,SAAS,CACZyR,UAAWE,KAxGb,EAAKzN,MAAM0F,QAAQC,KAAK,cAHP,E,8DA+GA,IAAD,OAChB,OAA6B,IAAzB/I,KAAKhC,MAAM+R,UACN,kBAAC,GAAD,MAC2B,IAAzB/P,KAAKhC,MAAM+R,UACb,kBAAC,GAAD,MAC2B,IAAzB/P,KAAKhC,MAAM+R,UAElB,6BACE,yBAAKiB,MAAM,sBAAsB5I,KAAK,SAAtC,+RAOA,2CACA,yCATF,UAUU,IACR,2BAAOnK,UAAU,QAAQ4G,SAAU7E,KAAK4Q,iBAAkB1I,GAAG,QAX/D,UAYU,IACR,2BAAOjK,UAAU,QAAQ4G,SAAU7E,KAAK4Q,iBAAkB1I,GAAG,QAb/D,UAcU,IACR,2BAAOjK,UAAU,QAAQ4G,SAAU7E,KAAK4Q,iBAAkB1I,GAAG,QAC7D,6BACA,0CAjBF,UAkBU,IACR,2BAAOjK,UAAU,QAAQ4G,SAAU7E,KAAK4Q,iBAAkB1I,GAAG,SAnB/D,UAoBU,IACR,2BAAOjK,UAAU,QAAQ4G,SAAU7E,KAAK4Q,iBAAkB1I,GAAG,SArB/D,UAsBU,IACR,2BAAOjK,UAAU,QAAQ4G,SAAU7E,KAAK4Q,iBAAkB1I,GAAG,SAC7D,6BACA,2CAzBF,WA0BW,IACT,2BAAOjK,UAAU,QAAQ4G,SAAU7E,KAAK4Q,iBAAkB1I,GAAG,SA3B/D,WA4BW,IACT,2BAAOjK,UAAU,QAAQ4G,SAAU7E,KAAK4Q,iBAAkB1I,GAAG,SA7B/D,WA8BW,IACT,2BAAOjK,UAAU,QAAQ4G,SAAU7E,KAAK4Q,iBAAkB1I,GAAG,SAC7D,6BACA,6BACA,iEACA,2BAAIlI,KAAKhC,MAAMwS,SAAS9K,KACxB,2BAAI1F,KAAKhC,MAAMwS,SAAS7K,KACxB,2BAAI3F,KAAKhC,MAAMwS,SAAS5K,KACxB,2BAAI5F,KAAKhC,MAAMwS,SAASxK,MACxB,2BAAIhG,KAAKhC,MAAMwS,SAASvK,MACxB,2BAAIjG,KAAKhC,MAAMwS,SAAStK,MACxB,2BAAIlG,KAAKhC,MAAMwS,SAAS3K,MACxB,2BAAI7F,KAAKhC,MAAMwS,SAAS1K,MACxB,2BAAI9F,KAAKhC,MAAMwS,SAASzK,MACxB,6BACA,6BACA,4BACE1F,KAAK,SACL2Q,MAAM,kBACN5H,QAAS,kBAAMiH,OAHjB,eAOA,4BACEhQ,KAAK,SACL2Q,MAAM,qCACN5H,QAAS,kBAAMkH,GAAS,KAH1B,gBAS8B,IAAzBtQ,KAAKhC,MAAM+R,UAElB,6BACE,yBAAKiB,MAAM,sBAAsB5I,KAAK,SAAtC,+RAOA,wCACA,yCATF,UAWE,8BACEnK,UAAU,QACV4G,SAAU7E,KAAK4Q,iBACf1I,GAAG,QAdP,UAiBE,8BACEjK,UAAU,QACV4G,SAAU7E,KAAK4Q,iBACf1I,GAAG,QApBP,UAuBE,8BACEjK,UAAU,QACV4G,SAAU7E,KAAK4Q,iBACf1I,GAAG,QAEL,6BACA,0CA7BF,UA8BU,IACR,8BACEjK,UAAU,QACV4G,SAAU7E,KAAK4Q,iBACf1I,GAAG,SAlCP,UAoCU,IACR,8BACEjK,UAAU,QACV4G,SAAU7E,KAAK4Q,iBACf1I,GAAG,SAxCP,UA0CU,IACR,8BACEjK,UAAU,QACV4G,SAAU7E,KAAK4Q,iBACf1I,GAAG,SAEL,6BACA,2CAjDF,WAkDW,IACT,8BACEjK,UAAU,QACV4G,SAAU7E,KAAK4Q,iBACf1I,GAAG,SAtDP,WAwDW,IACT,8BACEjK,UAAU,QACV4G,SAAU7E,KAAK4Q,iBACf1I,GAAG,SA5DP,WA8DW,IACT,8BACEjK,UAAU,QACV4G,SAAU7E,KAAK4Q,iBACf1I,GAAG,SAEL,6BACA,6BACA,iEACA,2BAAIlI,KAAKhC,MAAMwS,SAASjK,KACxB,2BAAIvG,KAAKhC,MAAMwS,SAAShK,KACxB,2BAAIxG,KAAKhC,MAAMwS,SAAS/J,KACxB,2BAAIzG,KAAKhC,MAAMwS,SAAS3J,MACxB,2BAAI7G,KAAKhC,MAAMwS,SAAS1J,MACxB,2BAAI9G,KAAKhC,MAAMwS,SAASzJ,MACxB,2BAAI/G,KAAKhC,MAAMwS,SAASS,MACxB,2BAAIjR,KAAKhC,MAAMwS,SAASU,MACxB,2BAAIlR,KAAKhC,MAAMwS,SAASW,MACxB,6BACA,6BACA,4BACE9Q,KAAK,SACL2Q,MAAM,kBACN5H,QAAS,kBAAMiH,OAHjB,eAOA,4BACEhQ,KAAK,SACL2Q,MAAM,qCACN5H,QAAS,kBAAMkH,GAAS,KAH1B,gBAS8B,IAAzBtQ,KAAKhC,MAAM+R,UAElB,6BACE,yBAAKiB,MAAM,sBAAsB5I,KAAK,SAAtC,+RAOA,0CACA,yCATF,UAWE,2BAAOnK,UAAU,QAAQ4G,SAAU7E,KAAK4Q,iBAAkB1I,GAAG,OAX/D,UAaE,2BAAOjK,UAAU,QAAQ4G,SAAU7E,KAAK4Q,iBAAkB1I,GAAG,OAb/D,UAeE,2BAAOjK,UAAU,QAAQ4G,SAAU7E,KAAK4Q,iBAAkB1I,GAAG,OAC7D,6BACA,0CAjBF,UAkBU,IACR,2BAAOjK,UAAU,QAAQ4G,SAAU7E,KAAK4Q,iBAAkB1I,GAAG,QAnB/D,UAoBU,IACR,2BAAOjK,UAAU,QAAQ4G,SAAU7E,KAAK4Q,iBAAkB1I,GAAG,QArB/D,UAsBU,IACR,2BAAOjK,UAAU,QAAQ4G,SAAU7E,KAAK4Q,iBAAkB1I,GAAG,QAC7D,6BACA,2CAzBF,WA0BW,IACT,2BAAOjK,UAAU,QAAQ4G,SAAU7E,KAAK4Q,iBAAkB1I,GAAG,QA3B/D,WA4BW,IACT,2BAAOjK,UAAU,QAAQ4G,SAAU7E,KAAK4Q,iBAAkB1I,GAAG,QA7B/D,WA8BW,IACT,2BAAOjK,UAAU,QAAQ4G,SAAU7E,KAAK4Q,iBAAkB1I,GAAG,QAC7D,6BACA,6BACA,oEACA,2BAAIlI,KAAKhC,MAAMwS,SAASvJ,IACxB,2BAAIjH,KAAKhC,MAAMwS,SAAStJ,IACxB,2BAAIlH,KAAKhC,MAAMwS,SAASrJ,IACxB,2BAAInH,KAAKhC,MAAMwS,SAASjJ,KACxB,2BAAIvH,KAAKhC,MAAMwS,SAAShJ,KACxB,2BAAIxH,KAAKhC,MAAMwS,SAAS/I,KACxB,2BAAIzH,KAAKhC,MAAMwS,SAASY,KACxB,2BAAIpR,KAAKhC,MAAMwS,SAASa,KACxB,2BAAIrR,KAAKhC,MAAMwS,SAASc,KACxB,6BACA,6BACA,4BACEjR,KAAK,SACL2Q,MAAM,kBACN5H,QAAS,kBAAMiH,OAHjB,eAOA,4BACEhQ,KAAK,SACL2Q,MAAM,qCACN5H,QAAS,kBAAMkH,GAAS,KAH1B,gBAS8B,IAAzBtQ,KAAKhC,MAAM+R,UAElB,6BACE,yBAAKiB,MAAM,sBAAsB5I,KAAK,SAAtC,+RAOA,2EARF,OASM,kBAAC,YAAD,CAAWvD,SAAU7E,KAAK8Q,kBAAmB5I,GAAG,OATtD,OAUM,kBAAC,YAAD,CAAWrD,SAAU7E,KAAK8Q,kBAAmB5I,GAAG,OAVtD,OAWM,kBAAC,YAAD,CAAWrD,SAAU7E,KAAK8Q,kBAAmB5I,GAAG,OACpD,6BAZF,OAaM,kBAAC,YAAD,CAAWrD,SAAU7E,KAAK8Q,kBAAmB5I,GAAG,OAbtD,OAcM,kBAAC,YAAD,CAAWrD,SAAU7E,KAAK8Q,kBAAmB5I,GAAG,OAdtD,OAeM,kBAAC,YAAD,CAAWrD,SAAU7E,KAAK8Q,kBAAmB5I,GAAG,OACpD,6BAhBF,OAiBM,kBAAC,YAAD,CAAWrD,SAAU7E,KAAK8Q,kBAAmB5I,GAAG,OAjBtD,OAkBM,kBAAC,YAAD,CAAWrD,SAAU7E,KAAK8Q,kBAAmB5I,GAAG,OAlBtD,OAmBM,kBAAC,YAAD,CAAWrD,SAAU7E,KAAK8Q,kBAAmB5I,GAAG,OACpD,6BApBF,OAqBM,kBAAC,YAAD,CAAWrD,SAAU7E,KAAK8Q,kBAAmB5I,GAAG,OArBtD,OAsBM,kBAAC,YAAD,CAAWrD,SAAU7E,KAAK8Q,kBAAmB5I,GAAG,OAtBtD,OAuBM,kBAAC,YAAD,CAAWrD,SAAU7E,KAAK8Q,kBAAmB5I,GAAG,OACpD,6BAxBF,OAyBM,kBAAC,YAAD,CAAWrD,SAAU7E,KAAK8Q,kBAAmB5I,GAAG,OACpD,6BA1BF,UA2BS,kBAAC,YAAD,CAAWrD,SAAU7E,KAAK8Q,kBAAmB5I,GAAG,UA3BzD,UA4BS,kBAAC,YAAD,CAAWrD,SAAU7E,KAAK8Q,kBAAmB5I,GAAG,UA5BzD,cA6Bc,IACZ,kBAAC,YAAD,CAAWrD,SAAU7E,KAAK8Q,kBAAmB5I,GAAG,eAChD,6BACA,4BACE7H,KAAK,SACL2Q,MAAM,kBACN5H,QAAS,kBCjcM,WACzB,IAEM3K,EAAU,IAAIC,QAFR,gBAEqB,CAC/BC,OAAQ,WAGVE,MAAMJ,GACDK,MAAK,SAACsC,GAAD,OAASA,EAAIpC,UAClBF,MAAK,SAACsC,GAAD,OAAS9B,QAAQC,IAAI6B,MAC1BhC,OAAM,SAAC6J,GACN3J,QAAQC,IAAI0J,MDsbOsI,KAHjB,gBAMU,IACV,4BACElR,KAAK,SACL2Q,MAAM,qCACN5H,QAAS,kBCxbI,SAACmH,GACxB,IAEM9K,EAAO8K,EAAKvS,MAAM2S,UAClBlS,EAAU,IAAIC,QAHR,SAGqB,CAC/BC,OAAQ,OACR4C,KAAMK,KAAKC,UAAU4D,GACrB7G,QAAS,CACPkD,OAAQ,oCACR,eAAgB,sBAIpBjD,MAAMJ,GAASW,OAAM,SAAC6J,GACpB3J,QAAQC,IAAI0J,MD0aWuI,CAAU,KAH3B,sBAzCC,I,+BAqDC,IAAD,SACkBxR,KAAKoD,MAAtB0F,EADD,EACCA,QAAS3H,EADV,EACUA,IACjB,OACE,yBAAKlD,UAAU,SACb,kBAAC,GAAD,CAAQ6K,QAASA,EAAS3H,IAAKA,IAC/B,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,kBAAC1B,EAAA,EAAD,KACE,yBAAKxB,UAAU,8BACb,kBAAC,GAAD,CACEA,UAAU,WACVgD,KAAMjB,KAAKhC,MAAM2K,SACjBwF,OAAQnO,KAAKhC,MAAMkK,KAClB,IACH,6BACA,wBAAIjK,UAAU,SAAS+B,KAAKX,OAC5B,6BACE,kBAAC,OAAD,CACE0Q,UAAW/P,KAAKhC,MAAM+R,UACtBlL,SAAU,SAAC+C,GAAD,OAAW,EAAK1I,SAAS,CAAE6Q,UAAWnI,KAChDC,QAAM,GAEN,kBAAC,MAAD,qBACA,kBAAC,MAAD,oBACA,kBAAC,MAAD,oBACA,kBAAC,MAAD,gBACA,kBAAC,MAAD,mBACA,kBAAC,MAAD,eAEF,6BAAS5J,UAAU,cAAc+B,KAAKyR,2B,GAxevBpT,a,oBEoGdqT,I,yDApGb,WAAYtO,GAAQ,IAAD,8BACjB,cAAMA,IACDpF,MAAQ,CACX2D,QAAS,EAAKyB,MAAMzB,QACpBgQ,SAAS,GAJM,E,6DASjBrS,QAAQC,IAAIS,KAAKhC,MAAM2D,QAAQ+H,eADhB,MAEU1J,KAAKoD,MAAtBjC,EAFO,EAEPA,IAAK2H,EAFE,EAEFA,QACb,GAAI9I,KAAKhC,MAAM2D,QAAQ+H,cAAcvK,QAAU,EAAG,CAChD,IAAMyS,EAAS5R,KAAKhC,MAAM2D,QAAQ+H,cAAcgF,KAAI,SAClDmD,EACAC,GAEA,GAAIA,EAAQ,EACV,OACE,wBAAIC,IAAK5F,aAAI0F,IACX,mCACOA,EAAMlJ,SADb,KACyBkJ,EAAM7D,WAD/B,KAGA,kBAACgE,GAAA,EAAD,CACE9J,GAAI2J,EAAMlJ,SACVS,QAAS,SAAC9F,GAAD,OACPkI,GAAmBqG,EAAMlJ,SAAUxH,EAAK2H,KAH5C,YAYR,OAAO,wBAAI7K,UAAU,SAAS2T,GAE9B,OAAO,6D,4C7BgI0B,SAACzQ,GAEpC,IAAMQ,EAAUR,EAAInD,MAAM2D,QAC1BrC,QAAQC,IAAI,YACZD,QAAQC,IAAIoC,GACZ,IAAMyL,EAAG,+CAA2CzL,EAAQuG,IAE5DrJ,MAAMuO,GACLtO,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,OAEX,MAAM,IAAIqD,SAGjBvD,MAAK,SAACE,GACU,OAATA,QAA0BuF,IAATvF,IACjBmC,EAAIjC,SAAS,CAACyC,QAAS3C,EAAM2S,SAAS,IACtCrS,QAAQC,IAAI,sBAGnBH,OAAM,SAAC6J,GACJ3J,QAAQC,IAAI0J,M6BjJhBgJ,CAAwBjS,Q,+BAKxB,OAAIA,KAAKhC,MAAM2T,QAEX,6BACE,kBAAClS,EAAA,EAAD,KACE,kBAAC,OAAD,KACE,kBAAC,OAAD,CAAMG,IAAK,IACT,yBAAK3B,UAAU,aACb,6BACA,6BACA,6BACA,wBAAIA,UAAU,WAAd,qCAGJ,kBAAC,OAAD,CAAM2B,IAAK,GACT,kBAAC,GAAD,UAQR,6BACE,kBAACH,EAAA,EAAD,KACE,kBAAC,OAAD,KACE,kBAAC,OAAD,CAAMG,IAAK,IACT,yBAAK3B,UAAU,aACb,6BACA,6BAIA,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAOuG,EAAGxE,KAAKhC,MAAMwF,YAEvB,6BACA,+BAGJ,kBAAC,OAAD,CAAM5D,IAAK,GACT,yBAAK3B,UAAU,iBACb,6BACA,wBAAIA,UAAU,iBAAd,kBACC+B,KAAKkS,0B,GA1FG3H,IAAMlM,YCqElB8T,IAjEL,IAAIC,KAMI,IAAIA,KAAK,c,kDAQzB,WAAYhP,GAAQ,IAAD,8BAGjB,cAAMA,IAGRpF,MAAQ,CACN2K,SAAU,EAAKvF,MAAMjC,IAAInD,MAAM6E,eAAe8F,SAC9CT,GAAI,EAAK9E,MAAMjC,IAAInD,MAAM6E,eAAe+L,IACxCpL,SAAU,EAAKJ,MAAMjC,IAAInD,MAAM6E,eAAeW,SAC9CkG,cAAe,EAAKtG,MAAMjC,IAAInD,MAAM6E,eAAe6G,eANnD,EAAKtG,MAAM0F,QAAQC,KAAK,gBAJP,E,qDAcjBzJ,QAAQC,IAAIS,KAAKhC,OACjBsB,QAAQC,IAAIS,KAAKoD,MAAMjC,IAAInD,MAAM6E,eAAe+L,KAFzC,MAGkB5O,KAAKoD,MAAtB0F,EAHD,EAGCA,QAAS3H,EAHV,EAGUA,IACjB,OACE,yBAAKlD,UAAU,SACb,kBAAC,GAAD,CAAe6K,QAASA,EAAS3H,IAAKA,EAAKF,KAAMjB,KAAKhC,MAAM2K,WAC5D,kBAAClJ,EAAA,EAAD,KACE,kBAAC,OAAD,KACE,kBAAC,OAAD,CAAMG,IAAK,GACT,6BACA,yBAAKK,IAAKoS,KAAMlS,IAAI,QAAQlC,UAAU,YAExC,kBAAC,OAAD,CAAM2B,IAAK,GACT,kBAAC,GAAD,CAAUqB,KAAMjB,KAAKhC,MAAM2K,SAAUwF,OAAQnO,KAAKhC,MAAMkK,OAG5D,kBAAC,GAAD,CAAcY,QAASA,EAAS3H,IAAKA,EAAKQ,QAAS3B,KAAKhC,QACxD,6BACA,8BAGF,kBAAC,OAAD,KACE,kBAAC,OAAD,CAAM4B,IAAK,IACX,kBAAC,OAAD,CAAMA,IAAK,IACT,6BACA,6BACA,6CACA,6BACA,kBAAC,GAAD,OAEF,kBAAC,OAAD,CAAMA,IAAK,U,GA9CUvB,cCkLhBiU,I,gEAhMb,WAAYlP,GAAQ,IAAD,8BACjB,cAAMA,IAaRC,aAAe,SAACC,GACd,EAAKpE,SAAS,CACZqT,QAASjP,EAAMC,OAAOvC,SAdxB,EAAKhD,MAAQ,CACXuU,QAAS,GACTC,MAAO,GACPnE,SAAU,GACV9L,UAAW,KACXb,OAAQ0B,EAAMjC,IAAInD,MAAMqD,cACxBhC,MAAO,GACPmD,QAAS,IAEX,EAAKiQ,kBAAoB,EAAKA,kBAAkB7I,KAAvB,gBAXR,E,uDAoBR8I,GACT,OACE,6BACE,6BADF,IACY,6BACV,kBAAC,YAAD,CAAWzU,UAAU,SAAS8Q,OAAQ,EAAGjC,KAAM4F,GAC7C,kBAAC,cAAD,CAAazR,KAAK,KAAKqO,QAAQ,sBAA/B,MAGA,kBAAC,cAAD,CAAarO,KAAK,OAAOqO,QAAQ,wBAAjC,QAGA,kBAAC,cAAD,CAAarO,KAAK,WAAWqO,QAAQ,8BAArC,YAGA,kBAAC,cAAD,CAAarO,KAAK,MAAMqO,QAAQ,yBAAhC,OAGA,kBAAC,cAAD,CAAarO,KAAK,WAAWqO,QAAQ,4BAArC,UAGA,kBAAC,cAAD,CAAarO,KAAK,OAAlB,W,oCAWMsB,GAAY,IAAD,OAGvB,OAFAjD,QAAQC,IAAI,8BACZD,QAAQC,IAAIgD,GACPA,EAEMA,EAAUpD,OAAS,EACrB,qEAEAoD,EAAUmM,KAAI,SAAC/M,GAAD,OACnB,yBAAK1D,UAAU,WACb,yCAAe0D,EAAQgH,UACvB,uCAAahH,EAAQiN,KACrB,wCAAcjN,EAAQ6B,UACtB,kBAAC,SAAD,CACE2F,QAAM,EACNgB,SAAO,EACPtC,QAAM,EACNuB,QAAS,SAAC9F,IhCkFoB,SAACnC,EAAKQ,GAC9C,IAEMD,EAASP,EAAInD,MAAM0D,OAEnBjD,EAAU,IAAIC,QAJR,qBAIqB,CAC/BC,OAAQ,MACR4C,KAAMK,KAAKC,UAAU,CACnBF,QAASA,EACTD,OAAQA,IAEV9C,QAAS,CACPkD,OAAQ,oCACR,eAAgB,sBAGpBjD,MAAMJ,GACDK,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,OAEX,MAAM,IAAIqD,SAGjBvD,MAAK,SAACE,GACU,OAATA,QAA0BuF,IAATvF,IACjBM,QAAQC,IAAIP,GACZmC,EAAIjC,SAAS,CAACqD,UAAWvD,EAAKuD,gBAGrCnD,OAAM,SAACC,GACJC,QAAQC,IAAIF,MgChHRsT,CAA2B,EAAMhR,KALrC,YASU,IACV,6BAdF,IAcY,iCAnBP,mD,0ChCyMc,IAACR,IgC9KZnB,KhCiLdnB,MAFY,aAGPC,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,OAEX,MAAM,IAAIqD,SAGjBvD,MAAK,SAACE,GACU,OAATA,QAA0BuF,IAATvF,GACjBM,QAAQC,IAAIP,GACZmC,EAAIjC,SAAS,CAACmP,SAAUrP,KAGxBmC,EAAIjC,SAAS,CACTG,MAAO,qDAIlBD,OAAM,SAAC6J,GACJ3J,QAAQC,IAAI,gBACZ4B,EAAIjC,SAAS,CAACG,MAAO,uD,4CAKH,SAAC8B,EAAK+G,GAChC,IAAMkF,EAAG,oCAAgClF,GACzC5I,QAAQC,IAAI2I,GAEZrJ,MAAMuO,GACDtO,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OAEJ,OADA3C,QAAQC,IAAI,kBACL6B,EAAIpC,OAEX,MAAM,IAAIqD,SAGjBvD,MAAK,SAACE,GACH,GAAa,OAATA,QAA0BuF,IAATvF,EAIjB,MAAM,IAAIqD,MAHV/C,QAAQC,IAAIP,GACZmC,EAAIjC,SAAS,CAACqD,UAAWvD,EAAKuD,eAKrCnD,OAAM,SAAC6J,GACJ3J,QAAQC,IAAI0J,MgC7NlB2J,CAAa5S,KAAMA,KAAKoD,MAAMjC,IAAInD,MAAMqD,cAAcuN,O,+BAG9C,IAAD,OACCzN,EAAQnB,KAAKoD,MAAbjC,IAEJuR,EAAiB,GA4DrB,OA1DEA,EADE1S,KAAKhC,MAAMuU,QAAQpT,OAAS,EACba,KAAKhC,MAAMqQ,SAASK,KAAI,SAACxC,GACxC,MAAO,CACLjL,KAAK,GAAD,OAAKiL,EAAKvD,UACdgG,GAAG,GAAD,OAAKzC,EAAK0C,KACZpL,SAAS,GAAD,OAAK0I,EAAK1I,UAClBiG,IAAI,GAAD,OAAKyC,EAAKzC,KACboJ,IACE,kBAAC,SAAD,CACE1J,QAAM,EACNgB,SAAO,EACPtC,QAAM,EACNuB,QAAS,SAAC9F,GAAD,OACPnB,EACE,EACAmB,EAAMC,OACNpC,EAAInD,MAAMqD,cACV6K,KATN,YAmBNwG,EAAiB1S,KAAKhC,MAAMqQ,SAAS7B,QACnC,SAAC7K,GAAD,OACEA,EAAQiN,IAAIkE,SAAS,EAAK9U,MAAMuU,UAChC5Q,EAAQgH,SAASmK,SAAS,EAAK9U,MAAMuU,aAET7D,KAAI,SAACxC,GACnC,MAAO,CACLjL,KAAK,GAAD,OAAKiL,EAAKvD,UACdgG,GAAG,GAAD,OAAKzC,EAAK0C,KACZpL,SAAS,GAAD,OAAK0I,EAAK1I,UAClBiG,IAAI,GAAD,OAAKyC,EAAKzC,KACboJ,IACE,kBAAC,SAAD,CACE1J,QAAM,EACNgB,SAAO,EACPtC,QAAM,EACNuB,QAAS,SAAC9F,GAAD,OACPnB,EACE,EACAmB,EAAMC,OACNpC,EAAInD,MAAMqD,cACV6K,KATN,WAmBR5M,QAAQC,IAAR,WAAwBS,KAAKhC,MAAMuE,WAEjC,kBAAC9C,EAAA,EAAD,KACE,kBAAC,OAAD,KACE,kBAAC,OAAD,CAAMG,IAAK,GACT,yBAAK3B,UAAU,aACb,iDAEE,2BACEA,UAAU,QACVoC,KAAK,OACL0S,YAAY,+BACZ/R,MAAOhB,KAAKhC,MAAMuU,QAClB1N,SAAU7E,KAAKqD,eAEjB,kBAAC,SAAD,CACE8F,QAAM,EACNgB,SAAO,EACPtC,QAAM,EACN5J,UAAU,SACVmL,QAAS,kBAAM,EAAKqJ,sBALtB,UASCzS,KAAKgT,WAAWN,KAGrB,wBAAIzU,UAAU,SAAS+B,KAAKhC,MAAMqB,OAClC,wBAAIpB,UAAU,WAAW+B,KAAKhC,MAAMwE,UAEtC,kBAAC,OAAD,CAAM5C,IAAK,IACX,kBAAC,OAAD,CAAMA,IAAK,GACT,0CACCI,KAAKiT,cAAcjT,KAAKhC,MAAMuE,kB,GAzLnBgI,IAAMlM,YCoCf6U,G,kDArCb,WAAY9P,GAAQ,IAAD,8BAEjB,cAAMA,IAGRpF,MAAQ,CACNuE,UAAW,EAAKa,MAAMjC,IAAInD,MAAMqD,cAAckB,UAC9CoG,SAAU,EAAKvF,MAAMjC,IAAInD,MAAMqD,cAAcsH,SAC7CqF,WAAY,EAAK5K,MAAMjC,IAAInD,MAAMqD,cAAc2M,WAC/CC,SAAU,EAAK7K,MAAMjC,IAAInD,MAAMqD,cAAc4M,SAC7C/F,GAAI,EAAK9E,MAAMjC,IAAInD,MAAMqD,cAAcuN,IACvCtN,QAAS,CAAEjB,KAAM,GAAIkB,KAAM,KAR3B,EAAK6B,MAAM0F,QAAQC,KAAK,eAHP,E,qDAaT,IAAD,EACkB/I,KAAKoD,MAAtB0F,EADD,EACCA,QAAS3H,EADV,EACUA,IACjB,OACE,yBAAKlD,UAAU,SACb,kBAAC,GAAD,CAAa6K,QAASA,EAAS3H,IAAKA,EAAKF,KAAMjB,KAAKhC,MAAM2K,WAC1D,kBAAClJ,EAAA,EAAD,KACE,kBAAC,OAAD,KACE,kBAAC,OAAD,CAAMG,IAAK,GACT,6BACA,yBAAKK,IAAKoS,KAAMlS,IAAI,QAAQlC,UAAU,YAExC,kBAAC,OAAD,CAAM2B,IAAK,GACT,kBAAC,GAAD,CAAUqB,KAAMjB,KAAKhC,MAAM2K,SAAUwF,OAAQnO,KAAKhC,MAAMkK,OAG5D,kBAAC,GAAD,CAAW/G,IAAKA,KAElB,6BACA,kC,GAhCsB9C,aCLjB2P,I,OAAa,CAAC,mBAAoB,eAAgB,gBAAiB,kBAAmB,eAAgB,mBAC/G,qBAAsB,eAAgB,+BAAgC,8BAA+B,eACrG,cAAe,eAAgB,aAAc,kBAAmB,mBAAoB,eACpF,sBAAuB,eAAgB,gBAAiB,cAAe,YC6G5DmF,G,kDAtGX,WAAY/P,GAAQ,IAAD,8BACf,cAAMA,IAIVpF,MAAQ,CACJ6E,eAAgB,CACZ8F,SAAU,IAEdyK,WAAY,IATG,EAYnBC,cAAgB,SAACC,GAEb,IADA,IAAIC,EAAS,GACJnI,EAAI,EAAGA,EAAIkI,EAAInU,OAAQiM,IAC5BmI,EAAOxK,KAAK,4BAAQ/H,MAAK,UAAKsS,EAAIlI,KAAOkI,EAAIlI,KAEjD,OAAOmI,GAfP,EAAKnQ,MAAM0F,QAAQC,KAAK,4BAFT,E,gEnCiFG,IAACyK,EmC5DnBxQ,EAAehD,KAAKoD,MAAMjC,KAC1ByB,EAAkB5C,MnC2DCwT,EmC1DRxT,KnC4DjBnB,MADY,YAEPC,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,UAGlBF,MAAK,SAACE,GACHwU,EAAItU,SAAS,CACTkU,WAAYpU,OAGnBI,OAAM,SAACC,GACJC,QAAQC,IAAIF,Q,+BmCrER,IAAD,SACkBW,KAAKoD,MAArB0F,EADF,EACEA,QAAS3H,EADX,EACWA,IACVF,EAAOjB,KAAKhC,MAAM6E,eAAe8F,SACjC+D,EAAU,CACZ,CACItM,OAAQ,cACR8H,GAAI,aACJyE,YAAY,EACZC,SAAU,WACVC,aAAc,SAACL,EAAQM,GAAT,OACVC,aAAYD,EAAMN,EAAOxL,MAAO,CAACgM,KAAM,CAAC,iBAC5CC,WAAW,GAEf,CACI7M,OAAQ,cACRuM,YAAY,EACZC,SAAU,aACVC,aAAc,SAACL,EAAQtC,GACnB,MAAqB,QAAjBsC,EAAOxL,OAGJkJ,EAAIsC,EAAOtE,MAAQsE,EAAOxL,OAErCyS,OAAQ,gBAAEjH,EAAF,EAAEA,OAAQ3H,EAAV,EAAUA,SAAV,OACJ,4BACIA,SAAU,SAAAvB,GAAK,OAAIuB,EAASvB,EAAMC,OAAOvC,QACzC0S,MAAO,CAACC,MAAO,QACf3S,MAAOwL,EAASA,EAAOxL,MAAQ,OAE/B,4BAAQA,MAAM,OAAd,OACC,EAAKqS,cAAcrF,OAGhC,CACI5N,OAAQ,WACR8H,GAAI,WACJyE,YAAY,EACZC,SAAU,WACVC,aAAc,SAACL,EAAQM,GAAT,OACVC,aAAYD,EAAMN,EAAOxL,MAAO,CAACgM,KAAM,CAAC,eAC5CC,WAAW,GAEf,CACI7M,OAAQ,mBACR8M,UAAU,EACVN,SAAU,WACVO,KAAM,SAAC/J,GAAD,OACF,4BAAQnF,UAAW,YAAaiK,GAAI9E,EAAMpC,MAAOoI,QAAS,SAAA9F,GACtDkI,GAAmBlI,EAAMC,OAAO2E,GAAI/G,EAAK2H,KAD7C,mBASZ,OACI,yBAAK7K,UAAW,gBACZ,kBAAC,GAAD,CAAe6K,QAASA,EAAS3H,IAAKA,EAAKF,KAAMA,IACjD,yBAAKhD,UAAW,YACZ,uBAAGA,UAAU,eAAb,gBAEJ,kBAAC,KAAD,KACI,kBAAC,KAAD,CACIA,UAAS,aACTyO,QAASA,EACTjJ,KAAMzD,KAAKhC,MAAMoV,WACjB9F,WAAU,0B,GA/FL/C,IAAMlM,W,SC+HpBuV,G,kDAjHb,WAAYxQ,GAAQ,IAAD,EpCNoBjC,EoCMpB,4BACjB,cAAMiC,IAQRpF,MAAQ,CACN6E,eAAgB,KAChBxB,cAAe,KACfiI,aAAc,KACdxG,eAAgB,KAChBtB,gBAAiB,MpCpBoBL,EoCQZ,epCN3BtC,MADY,4BAEPC,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,UAGlBF,MAAK,SAACE,GACCA,GAAQA,EAAK8D,gBACb3B,EAAIjC,SAAS,CAAC4D,eAAgB9D,EAAK8D,oBAG1C1D,OAAM,SAACC,GACJC,QAAQC,IAAIF,MCdmB,SAAC8B,GAEtCtC,MADY,6BAEPC,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,UAGlBF,MAAK,SAACE,GACCA,GAAQA,EAAKwC,iBACbL,EAAIjC,SAAS,CAACsC,gBAAiBxC,EAAKwC,qBAG3CpC,OAAM,SAACC,GACJC,QAAQC,IAAIF,MmCLpBwU,CAA0B,gBAC1BjR,EAAkB,gBpC7BU,SAACzB,GAE/BtC,MADY,0BAEPC,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,UAGlBF,MAAK,SAACE,GACCA,GAAQA,EAAKqC,eACbF,EAAIjC,SAAS,CAACmC,cAAerC,EAAKqC,mBAGzCjC,OAAM,SAACC,GACJC,QAAQC,IAAIF,MoCgBlByU,CAAiB,gBtB9BU,SAAC3S,GAG5BtC,MAFY,yBAGPC,MAAK,SAACsC,GACH,GAAmB,MAAfA,EAAIa,OACJ,OAAOb,EAAIpC,UAGlBF,MAAK,SAACE,GACCA,GAAQA,EAAKsK,cACbnI,EAAIjC,SAAS,CAACoK,aAActK,EAAKsK,kBAGxClK,OAAM,SAACC,GACJC,QAAQC,IAAIF,MsBgBpB0U,CAAgB,gBANC,E,qDAiBT,IAAD,OAGP,OAFAzU,QAAQC,IAAI,kBAAmBS,KAAKhC,MAAM8E,gBAC1CxD,QAAQC,IAAI,kBAAmBS,KAAKhC,MAAM6E,gBAExC,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOmR,OAAK,EAACC,KAAK,IAAIC,UAAWjR,IAEjC,kBAAC,KAAD,CACEgR,KAAM,CAAC,gBAAiB,eAAgB,6BACxCE,OAAQ,gBAAGrL,EAAH,EAAGA,QAAH,OACN,6BACI,EAAK9K,MAAM6E,eAER,EAAK7E,MAAM8E,eAGd,kBAAC,GAAD,CAAiBgG,QAASA,EAAS3H,IAAK,IAFxC,kBAAC,GAAD,CAAO2H,QAASA,EAAS3H,IAAK,IAF9B,kBAACiT,GAAD,CAActL,QAASA,EAAS3H,IAAK,QAU7C,kBAAC,KAAD,CACE8S,KAAM,CAAC,eAAgB,cAAe,4BACtCE,OAAQ,gBAAGrL,EAAH,EAAGA,QAAH,OACN,6BACI,EAAK9K,MAAMqD,cAER,EAAKrD,MAAMwD,gBAGd,kBAAC,GAAD,CAAgBsH,QAASA,EAAS3H,IAAK,IAFvC,kBAAC,GAAD,CAAO2H,QAASA,EAAS3H,IAAK,IAF9B,kBAAC,GAAD,CAAQ2H,QAASA,EAAS3H,IAAK,QAUvC,kBAAC,KAAD,CACE8S,KAAM,CAAC,cAAe,cACtBE,OAAQ,gBAAGrL,EAAH,EAAGA,QAAH,OACN,6BACI,EAAK9K,MAAMsL,aAGX,kBAAC,GAAD,CAASR,QAASA,EAAS3H,IAAK,IAFhC,kBAAC,GAAD,CAAQ2H,QAASA,EAAS3H,IAAK,QAQvC,kBAAC,KAAD,CACE8S,KAAM,2BACNE,OAAQ,gBAAGrL,EAAH,EAAGA,QAAH,OACN,6BACI,EAAK9K,MAAM6E,eAGX,kBAAC,GAAD,CAAgBiG,QAASA,EAAS3H,IAAK,IAFvC,kBAACiT,GAAD,CAActL,QAASA,EAAS3H,IAAK,QAQ7C,kBAAC,KAAD,CACE8S,KAAM,0BACNE,OAAQ,gBAAGrL,EAAH,EAAGA,QAAH,OACN,6BACI,EAAK9K,MAAMqD,cAGX,kBAAC,GAAD,CAAeyH,QAASA,EAAS3H,IAAK,IAFtC,kBAAC,GAAD,CAAQ2H,QAASA,EAAS3H,IAAK,QAQvC,kBAAC,KAAD,CAAO8S,KAAK,YAAYC,UAAWjR,IACnC,kBAAC,KAAD,CAAOgR,KAAK,SAASC,UAAWG,KAChC,kBAAC,KAAD,CAAOJ,KAAK,eAAeC,UAAWxM,KACtC,kBAAC,KAAD,CAAOuM,KAAK,eAAeC,UAAW5L,KAEtC,kBAAC,KAAD,CAAO2L,KAAK,eAAeC,UAAWI,KACtC,kBAAC,KAAD,CAAOL,KAAK,cAAcC,UAAWK,KACrC,kBAAC,KAAD,CACEN,KAAK,gBACLE,OAAQ,gBAAGrL,EAAH,EAAGA,QAAH,OACN,6BACI,kBAAC,GAAD,CAAcA,QAASA,EAAS3H,IAAK,a,GAzGlC9C,aCdJmW,OARf,WACE,OACE,6BACE,kBAAC,GAAD,QCMcC,QACW,cAA7BC,OAAOzG,SAAS0G,UAEe,UAA7BD,OAAOzG,SAAS0G,UAEhBD,OAAOzG,SAAS0G,SAASvF,MACvB,2D,qBCRNwF,IAAST,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEFU,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnW,MAAK,SAAAoW,GACJA,EAAaC,gBAEd/V,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMiC,a,wCEzI5B8T,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,uGCA3CD,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.6e470b14.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../css/homepage.css\";\nclass end extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"endtext\">\n        <h1>WE ARE HERE TO HELP!</h1>\n\n        <hr />\n\n        <p>Follow Us On Social Media To Get More Info</p>\n\n        <div className=\"end\">\n          <a href=\"https://www.utoronto.ca/\" rel=\"link\">\n            <i\n              className=\"fa fa-facebook-official fa-5x \"\n              aria-hidden=\"true\"\n            ></i>\n          </a>\n\n          <a href=\"https://www.utoronto.ca/\" rel=\"link\">\n            <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n          </a>\n          <a href=\"https://www.utoronto.ca/\" rel=\"link\">\n            <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n          </a>\n          <a href=\"https://www.utoronto.ca/\" rel=\"link\">\n            <i className=\"fa fa-youtube-square \" aria-hidden=\"true\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default end;\n","import React, { Component } from \"react\";\nimport \"../css/homepage.css\";\nimport { Container, UncontrolledAlert, Row, Col } from \"reactstrap\";\nimport { Grid, Cell } from \"react-mdl\";\nimport Bact from \"../img/b1.gif\";\nclass introduce extends Component {\n  state = { num: 1, cases: 1 };\n  componentWillMount() {\n    const request = new Request(\"/patients\", {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    fetch(request)\n      .then((response) => response.json())\n      .then((datas) => {\n        this.setState({ num: datas.length });\n      })\n      .catch((error) => console.log(error));\n\n    const request2 = new Request(\"/cases/find\", {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    fetch(request2)\n      .then((response) => response.json())\n      .then((datas) => {\n        this.setState({ cases: datas.cases.cases });\n      })\n      .catch((error) => console.log(error));\n  }\n  render() {\n    return (\n      <div>\n        <Container>\n          <UncontrolledAlert className=\"alert-with-icon\" color=\"primary\">\n            <span>\n              <b>Join Us! -</b>\n              To protect yourself and your family!\n            </span>\n          </UncontrolledAlert>\n        </Container>\n        <br></br>\n        <br></br>\n        <br></br>\n        <Container>\n          <Grid>\n            <Cell col={10}>\n              <Row>\n                <Col md=\"12\">\n                  <div className=\"numinfo\">\n                    <h1>\n                      <span>{this.state.cases}</span>\n                      Worldwide Cofirmed\n                    </h1>\n                  </div>\n                  <br></br> <br></br>\n                  <div className=\"numinfo\">\n                    <h1>\n                      <span>{this.state.num}</span>\n                      are using our webapp\n                    </h1>\n                  </div>\n                </Col>\n              </Row>\n            </Cell>\n            <Cell col={2}>\n              <img src={Bact} alt=\"bact\" className=\"bact-img\" />\n            </Cell>\n          </Grid>\n        </Container>\n        <br></br> <br></br> <br></br> <br></br> <br></br> <br></br> <br></br>{\" \"}\n        <br></br> <br></br> <br></br>\n        <Container>\n          <br></br>\n          <p className=\"f35a\">What do we offer?</p>\n\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Row>\n            <Col md=\"12\">\n              <div className=\"ofinfo\">\n                <span>Professional doctors</span>\n                <h1 className=\"lightgreentext\">\n                  To answer all kinds of questions\n                </h1>\n              </div>\n              <br></br>\n              <br></br>\n              <div className=\"ofinfo\">\n                <span>Online chat</span>\n                <h1 className=\"lightbluetext\">24 hours a day 7 days a week</h1>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n        <br></br>\n        <br></br>\n        <Grid>\n          <Cell col={2}></Cell>\n          <Cell col={8}>\n            <div className=\"media\">\n              <i className=\"fa fa-check-square-o fa-5x\" aria-hidden=\"true\">\n                {\" \"}\n              </i>\n              <div className=\"media-body\">\n                <br></br>\n                <p className=\"f35b\">\n                  Sign up today to meet your personal doctor\n                </p>\n              </div>\n              <i className=\"fa fa-user-md fa-5x\" aria-hidden=\"true\"></i>\n            </div>\n            <br></br>\n          </Cell>\n          <Cell col={2}></Cell>\n          <Cell col={2}></Cell>\n          <Cell col={8}>\n            <div className=\"media\">\n              <i className=\"fa fa-check-square-o fa-5x\" aria-hidden=\"true\">\n                {\" \"}\n              </i>\n              <div className=\"media-body\">\n                <br></br>\n                <p className=\"f35b\">\n                  Chat today to get the freshest information\n                </p>\n              </div>\n              <i className=\"fa fa-comments fa-5x\" aria-hidden=\"true\"></i>\n            </div>\n          </Cell>\n          <Cell col={2}></Cell>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default introduce;\n","import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport \"../css/header.css\";\nclass Header extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"headermain\">\n        <div className=\"circle circle1\" />\n        <div className=\"circle circle3\" />\n        <div className=\"circle circle4\" />\n        <div className=\"circle circle5\" />\n        <div className=\"circle circle6\" />\n        <div className=\"circle circle7\" />\n        <div className=\"circle circle8\" />\n        <Container>\n          <div>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <h1 className=\"title\">How To Protect Yourself From CoronaVirus?</h1>\n            <hr className=\"my-4\"></hr>\n            <div className=\"btn-group\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary dropdown-toggle\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                Login here\n              </button>\n              <div className=\"dropdown-menu\">\n                <a className=\"dropdown-item\" href=\"/patientLogin\">\n                  Login\n                </a>\n                <a className=\"dropdown-item\" href=\"/registration\">\n                  Sign up\n                </a>\n                <a className=\"dropdown-item\" href=\"/doctorLogin\">\n                  Doctor Login\n                </a>\n                <div className=\"dropdown-divider\"></div>\n                <a className=\"dropdown-item\" href=\"/AdminLogin\">\n                  Administrator Only\n                </a>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Layout, Header, Navigation } from \"react-mdl\";\nclass Navbar extends Component {\n  render() {\n    return (\n      <div className=\"demo-big-content\">\n        <Layout>\n          <Header\n            className=\"header-color\"\n            title={\n              <Link className=\"Link\" to=\"/\">\n                COVID19\n              </Link>\n            }\n            scroll\n          >\n            <Navigation>\n              <Link to=\"/\">Homepage</Link>\n              <Link to=\"/covid\">Coronavirus (COVID-19)</Link>\n              <Link to=\"/preventions\">Preventions</Link>\n            </Navigation>\n          </Header>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","//get doctor session cookie with doctor information back in order to keep doctor logged in\nexport const readDoctorCookie = (app) => {\n  const url = \"/doctors/check-session\";\n  fetch(url)\n      .then((res) => {\n          if (res.status === 200) {\n              return res.json();\n          }\n      })\n      .then((json) => {\n          if (json && json.currentDoctor) {\n              app.setState({currentDoctor: json.currentDoctor});\n          }\n      })\n      .catch((error) => {\n          console.log(error);\n      });\n};\n\n//Read cookies to get selected Doctor\nexport const readSelectedDoctorCookie = (app) => {\n  const url = \"/doctors/contact-session\";\n  fetch(url)\n      .then((res) => {\n          if (res.status === 200) {\n              return res.json();\n          }\n      })\n      .then((json) => {\n          if (json && json.selectedDoctor) {\n              app.setState({selectedDoctor: json.selectedDoctor});\n          }\n      })\n      .catch((error) => {\n          console.log(error);\n      });\n};\n\n// used to set state for the login process for doctor's end\nexport const updateLoginForm = (loginComp, field) => {\n  const value = field.value;\n  const name = field.name;\n\n  loginComp.setState({\n    [name]: value,\n  });\n};\n\n//doctor login\nexport const login = (loginComp, app) => {\n  const request = new Request(\"/doctors/login\", {\n    method: \"post\",\n    body: JSON.stringify(loginComp.state),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  fetch(request)\n      .then((res) => {\n          if (res.status === 200) {\n              return res.json();\n          }\n      })\n      .then((json) => {\n          console.log(json);\n          if (json.currentDoctor !== undefined) {\n              app.setState({currentDoctor: json.currentDoctor});\n          }\n      })\n      .catch((error) => {\n          console.log(error);\n          loginComp.setState({wrong: true});\n      });\n};\n\n//doctor logout\nexport const logout = (app) => {\n  const url = \"/logout\";\n\n  fetch(url)\n      .then((res) => {\n          app.setState({\n              currentDoctor: null,\n              message: {type: \"\", body: \"\"},\n              selectedPatient: null\n          });\n      })\n      .catch((error) => {\n          console.log(error);\n      });\n};\n\n//Get all doctors\nexport const getDoctors = (ppc) => {\n  const url = \"/doctors\";\n  fetch(url)\n      .then((res) => {\n          if (res.status === 200) {\n              return res.json();\n          }\n      })\n      .then((json) => {\n          ppc.setState({\n              doctorInfo: json,\n          });\n      })\n      .catch((error) => {\n          console.log(error);\n      });\n};\n\n//Update patient into doctor watchlist\nconst updateWatchlist = (doctor, patient) => {\n  const url = \"/doctors\";\n  const request = new Request(url, {\n    method: \"put\",\n    body: JSON.stringify({\n      patient: patient,\n      doctor: doctor,\n    }),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  return new Promise((resolve) => {\n    fetch(request)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            resolve(json);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n  });\n};\n\n//Add patient to list button event listener(DoctorChatPage)\nexport const addPatientToWatchlist = (button, doctor, patient, app) => {\n  updateWatchlist(doctor, patient).then((res) => {\n    if (res) {\n      app.state.currentDoctor.watchlist = res.watchlist;\n      button.innerText = \"Added!\";\n      setTimeout(function () {\n        button.innerText = \"Add to List\";\n      }, 1000);\n    } else {\n      button.innerText = \"Failed!\";\n      setTimeout(function () {\n        button.innerText = \"Add to List\";\n      }, 1000);\n    }\n  });\n};\n\n//remove patients from doctor's watchlist\nexport const removePatientFromWatchlist = (app, patient) => {\n  const url = \"/doctors/delfwlist\";\n\n  const doctor = app.state.doctor;\n\n  const request = new Request(url, {\n    method: \"put\",\n    body: JSON.stringify({\n      patient: patient,\n      doctor: doctor,\n    }),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  fetch(request)\n      .then((res) => {\n          if (res.status === 200) {\n              return res.json();\n          } else {\n              throw new Error();\n          }\n      })\n      .then((json) => {\n          if (json !== null && json !== undefined) {\n              console.log(json);\n              app.setState({watchlist: json.watchlist});\n          }\n      })\n      .catch((error) => {\n          console.log(error);\n      });\n};\n\n//Update selectedPatient cookie to null\nexport const updateSelectedPatient = () => {\n  const url = \"/patients/contact-session\";\n  const request = new Request(url, {\n    method: \"put\",\n    body: JSON.stringify({\n      selectedPatient: null,\n    }),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-type\": \"application/json\",\n    },\n  });\n  return new Promise((resolve) => {\n    fetch(request)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            resolve(json);\n        });\n  }).catch((error) => {\n    console.log(error);\n  });\n};\n\n//Add patient to doctor watchlist button event listener(Doctor Dashboard)\nexport const AddToWatchlist = (app, button, doctor, patient) => {\n  updateWatchlist(doctor, patient)\n      .then((json) => {\n          if (json) {\n              button.setDisabled = true;\n              app.setState({\n                  watchlist: json.watchlist,\n                  success: \"Patient added to watchlist!\",\n                  error: \"\",\n              });\n          } else {\n              throw new Error();\n          }\n      })\n      .catch((error) => {\n          button.disabled = true;\n          app.setState({\n              error: \"Failed to add patient to watchlist\",\n              success: \"\",\n          });\n          setTimeout(function () {\n              button.disabled = false;\n          }, 1000);\n      });\n};\n\n//Set main.state.selectedDoctor by read selectedPatient cookie\nexport const endDoctorChat = (app) => {\n  updateSelectedPatient()\n      .then((json) => {\n          if (json) {\n              app.setState({\n                  selectedPatient: json.selectedPatient,\n              });\n          }\n      })\n      .catch((error) => {\n          console.log(error);\n      });\n};\n\n// get all the patients from database, used to search for patient in doctor dashboard\nexport const getPatients = (app) => {\n  const url = \"/patients\";\n\n  fetch(url)\n      .then((res) => {\n          if (res.status === 200) {\n              return res.json();\n          } else {\n              throw new Error();\n          }\n      })\n      .then((json) => {\n          if (json !== null && json !== undefined) {\n              console.log(json);\n              app.setState({patients: json});\n              // app.setState({error: \"success\"})\n          } else {\n              app.setState({\n                  error: \"Cannot retrieve patient accounts information!\",\n              });\n          }\n      })\n      .catch((e) => {\n          console.log(\"error caught\");\n          app.setState({error: \"Cannot retrieve patient accounts information!\"});\n      });\n};\n\n// get all the patients from this doctor's watchlist, used for doctor dashboard's watchlist component\nexport const getWatchlist = (app, id) => {\n  const url = `/doctors/get-doctor-by-id/${id}`;\n  console.log(id);\n\n  fetch(url)\n      .then((res) => {\n          if (res.status === 200) {\n              console.log(\"returning json\");\n              return res.json();\n          } else {\n              throw new Error();\n          }\n      })\n      .then((json) => {\n          if (json !== null && json !== undefined) {\n              console.log(json);\n              app.setState({watchlist: json.watchlist});\n          } else {\n              throw new Error();\n          }\n      })\n      .catch((e) => {\n          console.log(e);\n      });\n};\n","// used to verify the account that is login in, and set the current patient to the patient that's login in.\nexport const readPatientCookie = (app) => {\n    const url = \"/patients/check-session\";\n    fetch(url)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            if (json && json.currentPatient) {\n                app.setState({currentPatient: json.currentPatient});\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n};\n\n//read cookie to get selected patient\nexport const readSelectedPatientCookie = (app) => {\n    const url = \"/patients/contact-session\";\n    fetch(url)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            if (json && json.selectedPatient) {\n                app.setState({selectedPatient: json.selectedPatient});\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n};\n\n// used to set state for the login process for patient's end\nexport const updateLoginForm = (loginComp, field) => {\n    const value = field.value;\n    const name = field.name;\n\n    loginComp.setState({\n        [name]: value,\n    });\n};\n\n\nexport const login = (loginComp, app) => {\n    const request = new Request(\"/patients/login\", {\n        method: \"post\",\n        body: JSON.stringify(loginComp.state),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\",\n        },\n    });\n\n    fetch(request)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            console.log(json);\n            console.log(json.currentPatient);\n            if (json.currentPatient !== null && json.currentPatient.username !== undefined) {\n                console.log(\"entered\")\n                app.setState({currentPatient: json.currentPatient});\n                console.log(app.state)\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n            loginComp.setState({wrong: true})\n        })\n\n\n};\n\n// used to send register request to server end\nexport const register = (registerComp, app, history) => {\n    const url = \"/patients\";\n\n    const patient = registerComp.state;\n\n    const request = new Request(url, {\n        method: \"post\",\n        body: JSON.stringify(patient),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-type\": \"application/json\",\n        },\n    });\n    fetch(request)\n        .then(function (res) {\n            if (res.status === 200) {\n                return res.json()\n            } else {\n                throw new Error()\n            }\n        })\n        .then((json) => {\n            if (!app.state.currentPatient && app.state.currentPatient !== undefined) {\n                // app.setState({currentPatient: json})\n                history.push(\"/PatientLogin\")\n            }\n        })\n        .catch((e) => {\n            registerComp.error = \"Patient account cannot be created at the moment!\"\n            registerComp.setState(registerComp.state)\n        })\n};\n\n// Log out from the current user on patient end.\nexport const logout = (app) => {\n    const url = \"/logout\";\n    fetch(url)\n        .then((res) => {\n            app.setState({\n                currentPatient: null,\n                message: {type: \"\", body: \"\"},\n                selectedDoctor: null\n            });\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n};\n\n//Update selectedDoctor cookie to null\nexport const updateSelectedDoctor = () => {\n    const url = \"/doctors/contact-session\";\n    const request = new Request(url, {\n        method: \"put\",\n        body: JSON.stringify({\n            selectedDoctor: null\n        }),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-type\": \"application/json\",\n        },\n    });\n    return new Promise(resolve => {\n        fetch(request).then(res => {\n            if (res.status === 200) {\n                return res.json()\n            }\n        }).then(json => {\n            resolve(json)\n        })\n    }).catch(error => {\n        console.log(error)\n    })\n};\n\n//Set main.state.selectedDoctor by read selectedDoctor cookie\nexport const endPatientChat = (app) => {\n\n    updateSelectedDoctor().then(json => {\n        if (json) {\n            app.setState(\n                {\n                    selectedDoctor: json.selectedDoctor\n                })\n        }\n    })\n        .catch(error => {\n        console.log(error);\n    });\n};\n\n// used to send request to get all patient objects, used in PatientTable component in admin dashboard to get all patients\nexport const readPatientVisitHistory = (app) => {\n\n    const patient = app.state.patient\n    console.log(\"patient:\")\n    console.log(patient)\n    const url = `/patients/read-patient-visit-history/${patient.id}`\n\n    fetch(url)\n    .then((res) => {\n        if (res.status === 200) {\n            return res.json()\n        } else {\n            throw new Error()\n        }\n    })\n    .then((json) => {\n        if (json !== null && json !== undefined) {\n            app.setState({patient: json, loading: false})\n            console.log(\"state resetted\")\n        }\n    })\n    .catch((e) => {\n        console.log(e)\n    })\n}\n\n","import React, {Component} from \"react\";\nimport \"./css/homepage.css\";\nimport {Grid, Cell} from \"react-mdl\";\nimport End from \"./sub-com/end\";\nimport Introduce from \"./sub-com/homepage-introduce\";\nimport Header from \"./sub-com/header\";\nimport Navbar from \"./Navbar\";\nimport {updateSelectedPatient} from \"../../actions/doctor\";\nimport {updateSelectedDoctor} from \"../../actions/patients\";\n\n\nclass homepage extends Component {\n    state = {};\n\n    componentDidMount() {\n        updateSelectedDoctor().then(r => {\n            if (r) {\n                console.log(\"Selected Doctor Removed\")\n            }\n        }).catch(error => {\n            console.log(error)\n        });\n\n        updateSelectedPatient().then(r => {\n            if (r) {\n                console.log(\"Selected Patient Removed\")\n            }\n        }).catch(error => {\n            console.log(error)\n        })\n    };\n\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Grid className=\"headerbg\">\n                    <Cell col={12}>\n                        <Header/>\n                        <Introduce/>\n                    </Cell>\n                    <Cell col={12}></Cell>\n                    <Cell col={12}></Cell>\n                    <Cell col={12}></Cell>\n                    <Cell col={12}></Cell>\n                    <Cell col={12}></Cell>\n                    <Cell col={12}></Cell>\n                    <Cell col={12}></Cell>\n                    <Cell col={12}>\n                        <End/>\n                    </Cell>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default homepage;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport \"./css/covid.css\";\n\nimport \"./css/header.css\";\n\nclass Cases extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: undefined,\n      province: this.props.p,\n      cases:undefined,\n      deaths: undefined,\n      recorvered:undefined,\n    };\n  }\n  componentWillMount() {\n    const request = new Request(\"/cases/find\", {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    fetch(request)\n        .then(response => response.json())\n        .then(datas => {\n          this.setState({data: datas.cases})\n          this.setState({cases: datas.cases.cases})\n          this.setState({deaths: datas.cases.death})\n          this.setState({recorvered:datas.cases.revorvered})\n\n        })\n        .catch(error => console.log(error));\n\n  };\n  handleChange = (event) => {\n    const { value } = event.target;\n    if (value === \"BC\") {\n      this.setState({ province: this.state.data.BC });\n    } else if (value === \"AB\") {\n      this.setState({ province: this.state.data.AB });\n    } else if (value === \"MB\") {\n      this.setState({ province: this.state.data.MB });\n    } else if (value === \"NB\") {\n      this.setState({ province: this.state.data.NB });\n    } else if (value === \"NL\") {\n      this.setState({ province: this.state.data.NL });\n    } else if (value === \"NT\") {\n      this.setState({ province: this.state.data.NT });\n    } else if (value === \"NS\") {\n      this.setState({ province: this.state.data.NS });\n    } else if (value === \"NU\") {\n      this.setState({ province: this.state.data.NU });\n    } else if (value === \"PE\") {\n      this.setState({ province: this.state.data.PE });\n    } else if (value === \"QC\") {\n      this.setState({ province: this.state.data.QC });\n    } else if (value === \"SK\") {\n      this.setState({ province: this.state.data.SK });\n    } else if (value === \"YT\") {\n      this.setState({ province: this.state.data.YT });\n    } else {\n      this.setState({ province: this.state.data.ON });\n    }\n  };\n  render() {\n    return (\n      <div className=\"re\">\n        <h1 className=\"w\"> CASES IN CANADA:</h1>\n        <form>\n          <label className=\"w\">Province:</label>\n          <select onChange={this.handleChange}>\n            <option value=\"NULL\">Please select the province</option>\n            <option value=\"AB\">Alberta</option>\n            <option value=\"BC\">British Columbia</option>\n            <option value=\"MB\">Manitoba</option>\n            <option value=\"NB\">New Brunswick</option>\n            <option value=\"NL\">Newfoundland and Labrador</option>\n            <option value=\"NT\">Northwest Territories</option>\n            <option value=\"NS\">Nova Scotia</option>\n            <option value=\"NU\">Nunavut</option>\n            <option value=\"ON\">Ontario</option>\n            <option value=\"PE\">Prince Edward Island</option>\n            <option value=\"QC\">Quebec</option>\n            <option value=\"SK\">Saskatchewan</option>\n            <option value=\"YT\">Yukon</option>\n          </select>\n        </form>\n        <hr />\n        <h1 className=\"w\">\n          Your province's Coronavirus Cases: {this.state.province}\n        </h1>\n        <br></br>\n        <br></br>\n        <br></br>\n        <Container>\n          <Row>\n            <Col md=\"12\">\n              <div className=\"w\">\n                <h1>World COVID19 situation:</h1>\n              </div>\n              <Container>\n                <div className=\"w\">\n                  <h2>Coronavirus Cases:</h2>\n                  <h1 className=\"y\">{this.state.cases}</h1>\n                </div>\n                <div className=\"w\">\n                  <h2>Deaths:</h2>\n                  <h1 className=\"y\">{this.state.deaths}</h1>\n                </div>\n                <div className=\"w\">\n                  <h2>Recorvered:</h2>\n                  <h1 className=\"y\">{this.state.recorvered}</h1>\n                </div>\n              </Container>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Cases;\n","import React, { Component } from \"react\";\nclass CHeader extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"re\">\n        <div>\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <h1 className=\"title\">Get the Facts About Coronavirus</h1>\n          <hr className=\"my-4\"></hr>\n          <h3 className=\"w\">\n            Take steps to care for yourself and help protect others in your home\n            and community.\n          </h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CHeader;\n","import React, {Component} from \"react\";\nimport c1 from \"../img/ca1.jpg\";\nimport c2 from \"../img/ca2.jpg\";\nimport c3 from \"../img/ca3.jpg\";\n\n\nclass newsCA extends Component {\n    state = {\n        info1: undefined,\n        info2: undefined,\n        info3: undefined,\n        l1: undefined,\n        l2: undefined,\n        l3: undefined,\n        t1: undefined,\n        t2: undefined,\n        t3: undefined,\n    };\n\n\n    componentWillMount() {\n        const request = new Request(\"/news/find\", {\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n\n        fetch(request)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({info1: data.news.ca1})\n                this.setState({info2: data.news.ca2})\n                this.setState({info3: data.news.ca3})\n                this.setState({l1: data.news.lca1})\n                this.setState({l2: data.news.lca2})\n                this.setState({l3: data.news.lca3})\n                this.setState({t1: data.news.tca1})\n                this.setState({t2: data.news.tca2})\n                this.setState({t3: data.news.tca3})\n\n            })\n            .catch(error => console.log(error));\n\n    };\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"media\">\n                    <img src={c1} className=\"newsimgs \" alt=\"...\"/>\n                    <div className=\"b\">\n                        <h2>{this.state.t1}</h2>\n                        <p>{this.state.info1}</p>\n                        <p className=\"mb-0\">{this.state.l1}</p>\n                    </div>\n                </div>\n                <br></br> <br></br>\n                <br></br>\n                <div className=\"media\">\n                    <img src={c2} className=\"newsimgs \" alt=\"...\"/>\n                    <div className=\"b\">\n                        <h2>{this.state.t2}</h2>\n                        <p>{this.state.info2}</p>\n                        <p className=\"mb-0\">{this.state.l2}</p>\n                    </div>\n                </div>\n                <br></br> <br></br>\n                <br></br>\n                <div className=\"media\">\n                    <img src={c3} className=\"newsimgs \" alt=\"...\"/>\n                    <div className=\"b\">\n                        <h2>{this.state.t3}</h2>\n                        <p>{this.state.info3}</p>\n                        <p className=\"mb-0\">{this.state.l3}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default newsCA;\n","import React, { Component } from \"react\";\nimport c1 from \"../img/us1.jpg\";\nimport c2 from \"../img/us2.jpg\";\nimport c3 from \"../img/us3.jpg\";\nclass newsUS extends Component {\n    state = {\n        info1: undefined,\n        info2: undefined,\n        info3: undefined,\n        l1: undefined,\n        l2: undefined,\n        l3: undefined,\n        t1: undefined,\n        t2: undefined,\n        t3: undefined,\n    };\n\n    componentWillMount() {\n        const request = new Request(\"/news/find\", {\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n\n        fetch(request)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({info1: data.news.us1})\n                this.setState({info2: data.news.us2})\n                this.setState({info3: data.news.us3})\n                this.setState({l1: data.news.lus1})\n                this.setState({l2: data.news.lus2})\n                this.setState({l3: data.news.lus3})\n                this.setState({t1: data.news.tus1})\n                this.setState({t2: data.news.tus2})\n                this.setState({t3: data.news.tus3})\n\n            })\n            .catch(error => console.log(error));\n\n    };\n\n\n  render() {\n    return (\n      <div>\n        <div className=\"media\">\n          <img src={c1} className=\"newsimgs \" alt=\"...\" />\n          <div className=\"b\">\n            <h2>{this.state.t1}</h2>\n            <p>{this.state.info1}</p>\n            <p className=\"mb-0\">{this.state.l1}</p>\n          </div>\n        </div>\n        <br></br> <br></br>\n        <br></br>\n        <div className=\"media\">\n          <img src={c2} className=\"newsimgs \" alt=\"...\" />\n          <div className=\"b\">\n            <h2>{this.state.t2}</h2>\n            <p>{this.state.info2}</p>\n            <p className=\"mb-0\">{this.state.l2}</p>\n          </div>\n        </div>\n        <br></br> <br></br>\n        <br></br>\n        <div className=\"media\">\n          <img src={c3} className=\"newsimgs \" alt=\"...\" />\n          <div className=\"b\">\n            <h2>{this.state.t3}</h2>\n            <p>{this.state.info3}</p>\n            <p className=\"mb-0\">{this.state.l3}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default newsUS;\n","import React, {Component} from \"react\";\nimport c1 from \"../img/w1.jpeg\";\nimport c2 from \"../img/w2.jpg\";\nimport c3 from \"../img/w3.jpg\";\n\nclass newsW extends Component {\n    state = {\n        info1: undefined,\n        info2: undefined,\n        info3: undefined,\n        l1: undefined,\n        l2: undefined,\n        l3: undefined,\n        t1: undefined,\n        t2: undefined,\n        t3: undefined,\n    };\n\n    componentWillMount() {\n        const request = new Request(\"/news/find\", {\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n\n        fetch(request)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({info1: data.news.w1})\n                this.setState({info2: data.news.w2})\n                this.setState({info3: data.news.w3})\n                this.setState({l1: data.news.lw1})\n                this.setState({l2: data.news.lw2})\n                this.setState({l3: data.news.lw3})\n                this.setState({t1: data.news.tw1})\n                this.setState({t2: data.news.tw2})\n                this.setState({t3: data.news.tw3})\n\n            })\n            .catch(error => console.log(error));\n\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"media\">\n                    <img src={c1} className=\"newsimgs \" alt=\"...\"/>\n                    <div className=\"b\">\n                        <h2>{this.state.t1}</h2>\n                        <p>{this.state.info1}</p>\n                        <p className=\"mb-0\">{this.state.l1}</p>\n                    </div>\n                </div>\n                <br></br> <br></br>\n                <br></br>\n                <div className=\"media\">\n                    <img src={c2} className=\"newsimgs \" alt=\"...\"/>\n                    <div className=\"b\">\n                        <h2>{this.state.t2}</h2>\n                        <p>{this.state.info2}</p>\n                        <p className=\"mb-0\">{this.state.l2}</p>\n                    </div>\n                </div>\n                <br></br> <br></br>\n                <br></br>\n                <div className=\"media\">\n                    <img src={c3} className=\"newsimgs \" alt=\"...\"/>\n                    <div className=\"b\">\n                        <h2>{this.state.t3}</h2>\n                        <p>{this.state.info3}</p>\n                        <p className=\"mb-0\">{this.state.l3}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default newsW;\n","import React, { Component } from \"react\";\nimport CA from \"./sub-com/newsCA\";\nimport US from \"./sub-com/newsUS\";\nimport W from \"./sub-com/newsW\";\nimport \"./css/header.css\";\nimport { Tabs, Tab } from \"react-mdl\";\nclass currentnews extends Component {\n  state = { tabNum: 0 };\n  changeTab() {\n    if (this.state.tabNum === 0) {\n      return <CA></CA>;\n    } else if (this.state.tabNum === 1) {\n      return <US></US>;\n    } else {\n      return <W></W>;\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Tabs onChange={(tabId) => this.setState({ tabNum: tabId })} ripple>\n          <Tab>Canada</Tab>\n          <Tab>US</Tab>\n          <Tab>World</Tab>\n        </Tabs>\n        <section>\n          <div className=\"content\">{this.changeTab()}</div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default currentnews;\n","import React, { Component } from \"react\";\nimport { Grid, Cell } from \"react-mdl\";\nimport Cimg from \"./img/covid.png\";\n\nimport \"./css/covid.css\";\nimport End from \"./sub-com/end\";\nimport \"./css/header.css\";\nimport { Container } from \"reactstrap\";\nimport Navbar from \"./Navbar\";\nimport Cases from \"./Cases\";\nimport Header from \"./sub-com/covidHeader\";\nimport News from \"./currentnews\";\nclass Covid extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div className=\"headerbg\">\n        <Navbar />\n        <Grid>\n          <Cell col={8}>\n            <Container>\n              <Header></Header>\n              <br></br>\n              <br></br>\n              <br></br>\n              <br></br>\n              <br></br>\n              <Cases></Cases>\n              <br></br>\n              <br></br> <br></br>\n              <br></br>\n              <h1 className=\"w\"> Current News</h1>\n            </Container>\n          </Cell>\n          <Cell col={4}>\n            <div>\n              <br></br>\n              <br></br>\n              <br></br>\n              <img src={Cimg} alt=\"Covid Pic\" />\n            </div>\n          </Cell>\n          <Cell col={12}>\n            <News></News>\n          </Cell>\n        </Grid>\n        <br></br>\n        <br></br>\n        <br></br> <br></br>\n        <br></br>\n        <br></br>\n        <End></End>\n      </div>\n    );\n  }\n}\n\nexport default Covid;\n","import React, { Component } from \"react\";\nclass Carousel extends Component {\n  state = {};\n  render() {\n    return (\n      <div\n        id=\"carouselExampleControls\"\n        className=\"carousel slide\"\n        data-ride=\"carousel\"\n      >\n        <div className=\"carousel-inner\">\n          <div className=\"carousel-item active\">\n            <img src={this.props.c1} className=\"d-block w-100\" alt=\"...\" />\n          </div>\n          <div className=\"carousel-item\">\n            <img src={this.props.c2} className=\"d-block w-100\" alt=\"...\" />\n          </div>\n          <div className=\"carousel-item\">\n            <img src={this.props.c3} className=\"d-block w-100\" alt=\"...\" />\n          </div>\n        </div>\n        <a\n          className=\"carousel-control-prev\"\n          href=\"#carouselExampleControls\"\n          role=\"button\"\n          data-slide=\"prev\"\n        >\n          <span\n            className=\"carousel-control-prev-icon\"\n            aria-hidden=\"true\"\n          ></span>\n          <span className=\"sr-only\">Previous</span>\n        </a>\n        <a\n          className=\"carousel-control-next\"\n          href=\"#carouselExampleControls\"\n          role=\"button\"\n          data-slide=\"next\"\n        >\n          <span\n            className=\"carousel-control-next-icon\"\n            aria-hidden=\"true\"\n          ></span>\n          <span className=\"sr-only\">Next</span>\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { Grid, Cell, List, ListItem } from \"react-mdl\";\nimport End from \"./sub-com/end\";\nimport \"./css/Preventions.css\";\nimport Carousel from \"./sub-com/carousel\";\nimport Cone from \"./img/pr1.png\";\nimport Ctwo from \"./img/pr2.png\";\nimport Cthree from \"./img/pr3.png\";\nimport \"./css/header.css\";\nimport Navbar from \"./Navbar\";\nimport { Tabs, Tab } from \"react-mdl\";\nclass preventions extends Component {\n  state = { tabNum: 0 };\n\n  changeTab() {\n    if (this.state.tabNum === 0) {\n      return (\n        <h4>\n          You can reduce your chances of being infected or spreading COVID-19 by\n          taking some simple precautions: Regularly and thoroughly clean your\n          hands with an alcohol-based hand rub or wash them with soap and water.\n          Why? Washing your hands with soap and water or using alcohol-based\n          hand rub kills viruses that may be on your hands. Maintain at least 1\n          metre (3 feet) distance between yourself and others. Why? When someone\n          coughs, sneezes, or speaks they spray small liquid droplets from their\n          nose or mouth which may contain virus. If you are too close, you can\n          breathe in the droplets, including the COVID-19 virus if the person\n          has the disease. Avoid going to crowded places. Why? Where people come\n          together in crowds, you are more likely to come into close contact\n          with someone that has COIVD-19 and it is more difficult to maintain\n          physical distance of 1 metre (3 feet). Avoid touching eyes, nose and\n          mouth. Why? Hands touch many surfaces and can pick up viruses. Once\n          contaminated, hands can transfer the virus to your eyes, nose or\n          mouth. From there, the virus can enter your body and infect you. Make\n          sure you, and the people around you, follow good respiratory hygiene.\n          This means covering your mouth and nose with your bent elbow or tissue\n          when you cough or sneeze. Then dispose of the used tissue immediately\n          and wash your hands. Why? Droplets spread virus. By following good\n          respiratory hygiene, you protect the people around you from viruses\n          such as cold, flu and COVID-19. Stay home and self-isolate even with\n          minor symptoms such as cough, headache, mild fever, until you recover.\n          Have someone bring you supplies. If you need to leave your house, wear\n          a mask to avoid infecting others. Why? Avoiding contact with others\n          will protect them from possible COVID-19 and other viruses. If you\n          have a fever, cough and difficulty breathing, seek medical attention,\n          but call by telephone in advance if possible and follow the directions\n          of your local health authority. Why? National and local authorities\n          will have the most up to date information on the situation in your\n          area. Calling in advance will allow your health care provider to\n          quickly direct you to the right health facility. This will also\n          protect you and help prevent spread of viruses and other infections.\n          Keep up to date on the latest information from trusted sources, such\n          as WHO or your local and national health authorities. Why? Local and\n          national authorities are best placed to advise on what people in your\n          area should be doing to protect themselves.\n        </h4>\n      );\n    } else if (this.state.tabNum === 1) {\n      return (\n        <div className=\"infolist\">\n          <List>\n            <ListItem>\n              Wash your hands often\n              <i className=\"fa fa-check-square-o\" aria-hidden=\"true\"></i>\n            </ListItem>\n\n            <ListItem>\n              Avoid close contact\n              <i className=\"fa fa-check-square-o\" aria-hidden=\"true\"></i>\n            </ListItem>\n\n            <ListItem>\n              Cover your mouth and nose with a cloth face cover when around\n              others\n              <i className=\"fa fa-check-square-o\" aria-hidden=\"true\"></i>\n            </ListItem>\n\n            <ListItem>\n              Cover coughs and sneezes\n              <i className=\"fa fa-check-square-o\" aria-hidden=\"true\"></i>\n            </ListItem>\n            <ListItem>\n              Clean and disinfect\n              <i className=\"fa fa-check-square-o\" aria-hidden=\"true\"></i>\n            </ListItem>\n          </List>\n        </div>\n      );\n    } else if (this.state.tabNum === 2) {\n      return (\n        <div className=\"infolist\">\n          <List>\n            <ListItem>\n              have not been diagnosed with COVID-19\n              <i className=\"fa fa-thumbs-up\" aria-hidden=\"true\"></i>\n            </ListItem>\n\n            <ListItem>\n              do not have symptoms of COVID-19\n              <i className=\"fa fa-thumbs-up\" aria-hidden=\"true\"></i>\n            </ListItem>\n\n            <ListItem>\n              have not travelled outside of Canada in the past 14 days\n              <i className=\"fa fa-thumbs-up\" aria-hidden=\"true\"></i>\n            </ListItem>\n\n            <ListItem>\n              are not in quarantine (self-isolating)\n              <i className=\"fa fa-thumbs-up\" aria-hidden=\"true\"></i>\n            </ListItem>\n            <ListItem>\n              are not isolating\n              <i className=\"fa fa-thumbs-up\" aria-hidden=\"true\"></i>\n            </ListItem>\n          </List>\n        </div>\n      );\n    } else if (this.state.tabNum === 3) {\n      return (\n        <div className=\"infolist\">\n          <List>\n            <ListItem>\n              toilets\n              <i className=\"fa fa-shower\" aria-hidden=\"true\"></i>\n            </ListItem>\n\n            <ListItem>\n              phones\n              <i className=\"fa fa-shower\" aria-hidden=\"true\"></i>\n            </ListItem>\n\n            <ListItem>\n              electronics\n              <i className=\"fa fa-shower\" aria-hidden=\"true\"></i>\n            </ListItem>\n\n            <ListItem>\n              door handles\n              <i className=\"fa fa-shower\" aria-hidden=\"true\"></i>\n            </ListItem>\n\n            <ListItem>\n              bedside tables\n              <i className=\"fa fa-shower\" aria-hidden=\"true\"></i>\n            </ListItem>\n\n            <ListItem>\n              television remotes\n              <i className=\"fa fa-shower\" aria-hidden=\"true\"></i>\n            </ListItem>\n          </List>\n        </div>\n      );\n    }\n  }\n  render() {\n    return (\n      <div className=\"headerbg\">\n        <Navbar />\n        <Grid>\n          <Cell col={12}>\n            <Container>\n              <div>\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n                <h1 className=\"title\">\n                  Coronavirus disease (COVID-19) advice for the public\n                </h1>\n                <p className=\"w\">\n                  Information comes from World Health Organization.\n                </p>\n                <hr />\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n              </div>\n            </Container>\n          </Cell>\n          <Cell col={6}>\n            <Carousel c1={Cone} c2={Ctwo} c3={Cthree} />\n          </Cell>\n          <Cell col={6}>\n            <div className=\"infogrid\">\n              <Tabs\n                onChange={(tabId) => this.setState({ tabNum: tabId })}\n                ripple\n              >\n                <Tab>Protect yourself</Tab>\n                <Tab>You should</Tab>\n                <Tab>Go for a walk if</Tab>\n                <Tab>Cleaning</Tab>\n              </Tabs>\n              <section>\n                <div className=\"content\">{this.changeTab()}</div>\n              </section>\n            </div>\n          </Cell>\n          <Cell col={12}>\n            {\" \"}\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <End />\n          </Cell>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default preventions;\n","import React, { Component } from \"react\";\nimport { Textfield, Button } from \"react-mdl\";\nimport { Container } from \"reactstrap\";\nimport \"./login.css\";\nimport Navbar from \"../HomePage/Navbar\";\nimport { updateLoginForm, login } from \"../../actions/patients\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.props.history.push(\"/Patientlogin\");\n  }\n  state = { username: \"\", password: \"\", wrong: false };\n\n  render() {\n    const { app } = this.props;\n    return (\n      <div className=\"entire_background\">\n        <Navbar />\n        <Container className=\"content\">\n          <h1 className=\"logintitle\">Patient Login</h1>\n          <hr />\n          <div className=\"Login\">\n            Username:{\" \"}\n            <Textfield\n              name=\"username\"\n              margin=\"normal\"\n              onChange={(e) => updateLoginForm(this, e.target)}\n              label=\"Please enter your username\"\n            />{\" \"}\n            <br />\n            Password:{\" \"}\n            <Textfield\n              name=\"password\"\n              margin=\"normal\"\n              onChange={(e) => updateLoginForm(this, e.target)}\n              label=\"Please enter your password\"\n            />{\" \"}\n            <br />\n            {this.state.wrong ? (\n              <div className=\"alert alert-warning\" role=\"alert\">\n                Your username or password is wrong! Please try again.\n              </div>\n            ) : (\n              <div />\n            )}\n            <Button raised color onClick={() => login(this, app)}>\n              Log In\n            </Button>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Textfield, Button } from \"react-mdl\";\nimport { Container } from \"reactstrap\";\nimport \"./login.css\";\nimport Navbar from \"../HomePage/Navbar\";\nimport { updateLoginForm, login } from \"../../actions/doctor\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.props.history.push(\"/doctorLogin\");\n  }\n  state = { username: \"\", password: \"\", wrong: false };\n\n  render() {\n    const { app } = this.props;\n    return (\n      <div className=\"entire_background\">\n        <Navbar />\n        <Container className=\"content\">\n          <h1 className=\"logintitle\">Doctor Login</h1>\n          <hr />\n          <div className=\"Login\">\n            Username:{\" \"}\n            <Textfield\n              name=\"username\"\n              margin=\"normal\"\n              onChange={(e) => updateLoginForm(this, e.target)}\n              label=\"Please enter your username\"\n            />{\" \"}\n            <br />\n            Password:{\" \"}\n            <Textfield\n              name=\"password\"\n              margin=\"normal\"\n              onChange={(e) => updateLoginForm(this, e.target)}\n              label=\"Please enter your password\"\n            />{\" \"}\n            <br />\n            {this.state.wrong ? (\n              <div className=\"alert alert-warning\" role=\"alert\">\n                Your username or password is wrong! Please try again.\n              </div>\n            ) : (\n              <div />\n            )}\n            <Button raised color onClick={() => login(this, app)}>\n              Log In\n            </Button>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\nexport default Login;\n","//get admin session cookie with admin information back in order to keep admin logged in\nexport const readAdminCookie = (app) => {\n    const url = \"/admins/check-session\";\n\n    fetch(url)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            if (json && json.currentAdmin) {\n                app.setState({currentAdmin: json.currentAdmin});\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n};\n\n// used to set state for the login process for admin's end\nexport const updateLoginForm = (loginComp, field) => {\n    const value = field.value;\n    const name = field.name;\n\n    loginComp.setState({\n        [name]: value,\n    });\n};\n\n//admin login\nexport const login = (loginComp, app) => {\n    const request = new Request(\"/admins/login\", {\n        method: \"post\",\n        body: JSON.stringify(loginComp.state),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\",\n        },\n    });\n\n    fetch(request)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            } else {\n                console.log(res.status);\n                throw new Error();\n            }\n        })\n        .then((json) => {\n            console.log(json);\n            if (\n                json.currentAdmin !== null &&\n                json.currentAdmin.username !== undefined\n            ) {\n                app.setState({currentAdmin: json.currentAdmin});\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n            loginComp.setState({wrong: true});\n        });\n};\n\n//admin logout\nexport const logout = (app) => {\n    const url = \"/logout\";\n\n    fetch(url)\n        .then((res) => {\n            app.setState({\n                currentAdmin: null,\n                message: {type: \"\", body: \"\"},\n            });\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n};\n\n// Get all the doctor objects for Doctor table component in admin dashboard\nexport const getDoctors = (app) => {\n    const url = \"/doctors\";\n\n    fetch(url)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            } else {\n                throw new Error();\n            }\n        })\n        .then((json) => {\n            if (json !== null && json !== undefined) {\n                console.log(\"getDoctor before: \");\n                console.log(app.state);\n                app.setState({doctors: json});\n                console.log(\"getDoctor after: \");\n                console.log(app.state);\n            } else {\n                app.setState({error: \"Cannot retrieve Doctor accounts information!\"});\n            }\n        })\n        .catch((e) => {\n            app.setState({error: \"Cannot retrieve Doctor accounts information!\"});\n        });\n};\n\n// Get all the patient objects for Doctor table component in admin dashboard\nexport const getPatients = (app) => {\n    const url = \"/patients\";\n\n    fetch(url)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            } else {\n                throw new Error();\n            }\n        })\n        .then((json) => {\n            if (json !== null && json !== undefined) {\n                app.setState({patients: json});\n                // app.setState({error: \"success\"})\n            } else {\n                app.setState({\n                    error: \"Cannot retrieve patient accounts information!\",\n                });\n            }\n        })\n        .catch((e) => {\n            app.setState({error: \"Cannot retrieve patient accounts information!\"});\n        });\n};\n\n// used to send update request to patient object after admin end changes its info.\nexport const updatePatient = (app, patient) => {\n    const request = new Request(`/admins/patient-update/${patient._id}`, {\n        method: \"put\",\n        body: JSON.stringify({patient: patient}),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\",\n        },\n    });\n\n    console.log(JSON.stringify(patient));\n    console.log(patient._id);\n\n    fetch(request)\n        .then((res) => {\n            if (res.status === 200) {\n                app.setState({\n                    error: \"\",\n                    success: `Patient (id: ${patient._id}) updated sucessfully!`,\n                });\n            } else {\n                throw new Error();\n            }\n        })\n        .catch((e) => {\n            app.setState({\n                error: \"Update Failed, please try again later!\",\n                success: \"\",\n            });\n        });\n};\n\n// used to send update request to doctor object after admin end changes its info.\nexport const updateDoctor = (app, doctor) => {\n    const request = new Request(`/admins/doctor-update/${doctor._id}`, {\n        method: \"put\",\n        body: JSON.stringify({doctor: doctor}),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\",\n        },\n    });\n\n    console.log(doctor);\n\n    fetch(request)\n        .then((res) => {\n            if (res.status === 200) {\n                app.setState({\n                    error: \"\",\n                    success: `Doctor (id: ${doctor._id}) updated sucessfully!`,\n                });\n            } else {\n                throw new Error();\n            }\n        })\n        .catch((e) => {\n            app.setState({\n                error: \"Update Failed, please try again later!\",\n                success: \"\",\n            });\n        });\n};\n","import React, { Component } from \"react\";\nimport { Textfield, Button } from \"react-mdl\";\nimport { Container } from \"reactstrap\";\nimport \"./login.css\";\nimport Navbar from \"../HomePage/Navbar\";\nimport { updateLoginForm, login } from \"../../actions/admin\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.props.history.push(\"/AdminLogin\");\n  }\n  state = { username: \"\", password: \"\", wrong: false };\n\n  render() {\n    const { app } = this.props;\n    return (\n      <div className=\"entire_background\">\n        <Navbar />\n        <Container className=\"content\">\n          <h1 className=\"logintitle\">Admin Login</h1>\n          <hr />\n          <div className=\"Login\">\n            Username:{\" \"}\n            <Textfield\n              name=\"username\"\n              margin=\"normal\"\n              onChange={(e) => updateLoginForm(this, e.target)}\n              label=\"Please enter your username\"\n            />{\" \"}\n            <br />\n            Password:{\" \"}\n            <Textfield\n              name=\"password\"\n              margin=\"normal\"\n              onChange={(e) => updateLoginForm(this, e.target)}\n              label=\"Please enter your password\"\n            />{\" \"}\n            <br />\n            {this.state.wrong ? (\n              <div className=\"alert alert-warning\" role=\"alert\">\n                Your username or password is wrong! Please try again.\n              </div>\n            ) : (\n              <div />\n            )}\n            <Button raised color onClick={() => login(this, app)}>\n              Log In\n            </Button>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\nexport default Login;\n","import React from \"react\";\nimport { Textfield, RadioGroup, Radio, Button } from \"react-mdl\";\nimport \"./registration.css\";\nimport { Container } from \"reactstrap\";\nimport Navbar from \"../HomePage/Navbar\";\nimport {register} from \"../../actions/patients\"\n\n\nclass Registration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.homepage = props.app\n    this.props.history.push(\"/Registration\")\n    this.error = \"\"\n    this.state = {\n      username: \"\",\n      password: \"\",\n      gender: \"male\",\n      age: \"\",\n      province: \"ON\",\n      visit_history: []\n    };\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleAgeChange = this.handleAgeChange.bind(this);\n    this.handleGenderChange = this.handleGenderChange.bind(this);\n    this.handleProvinceChange = this.handleProvinceChange.bind(this);\n  }\n\n  render() {\n    const {app, history} = this.props;\n    return (\n    <div>\n      <Navbar />\n      <div className=\"Registration\">\n        <Container>\n          <div>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n\n            <h1 className=\"Registration_loginTitle\">Registration</h1>\n            <hr />\n            <div className=\"Registration_div\">\n              Username:{\" \"}\n              <Textfield onChange={this.handleUsernameChange} label=\"JackMa\" /> <br />\n              Password:{\" \"}\n              <Textfield onChange={this.handlePasswordChange} label=\"1234\" /> <br />\n              Gender:{\" \"}\n              <RadioGroup name=\"gender\" value=\"male\">\n                <Radio value=\"male\" onClick={this.handleGenderChange} ripple>\n                  Male\n                </Radio>\n                <Radio value=\"female\" onClick={this.handleGenderChange} ripple>\n                  Female\n                </Radio>\n              </RadioGroup>{\" \"}\n              <br />\n              Age:{\" \"}\n              <Textfield\n                onChange={this.handleAgeChange}\n                label=\"21\"\n                pattern=\"0?[1-9][0-9]{0,2}\"\n                error=\"Please enter a valid age!\"\n              />{\" \"}\n              <br />\n              Province:\n              <RadioGroup\n                row={false}\n                name=\"province\"\n                value=\"ON\"\n              >\n                <Radio onClick={this.handleProvinceChange} value=\"BC\" ripple>\n                  British Columbia\n                </Radio>\n                <br/>\n                <Radio onClick={this.handleProvinceChange} value=\"AB\" ripple>\n                  Alberta\n                </Radio>\n                <br/>\n                <Radio onClick={this.handleProvinceChange} value=\"MB\" ripple>\n                  Manitoba\n                </Radio>\n                <br/>\n                <Radio onClick={this.handleProvinceChange} value=\"NB\" ripple>\n                  New Brunswick\n                </Radio>\n                <br/>\n                <Radio onClick={this.handleProvinceChange} value=\"NL\" ripple>\n                  Newfoundland and Labrador\n                </Radio>\n                <br/>\n                <Radio onClick={this.handleProvinceChange} value=\"NS\" ripple>\n                  Nova Scotia\n                </Radio>\n                <br/>\n                <Radio onClick={this.handleProvinceChange} value=\"ON\" ripple>\n                  Ontario\n                </Radio>\n                <br/>\n                <Radio onClick={this.handleProvinceChange} value=\"PEI\" ripple>\n                  Prince Edward Island\n                </Radio>\n                <br/>\n                <Radio onClick={this.handleProvinceChange} value=\"QC\" ripple>\n                  Quebec\n                </Radio>\n                <br/>\n                <Radio onClick={this.handleProvinceChange} value=\"SK\" ripple>\n                  Saskatchewan\n                </Radio>\n              </RadioGroup>\n              <br />\n              <Button raised colored onClick={() => register(this, this.homepage, history)}>\n                Submit\n              </Button>\n              <h3 className=\"error\">{this.error}</h3>\n            </div>\n          </div>\n        </Container>\n      </div>\n    </div>\n      \n    );\n  }\n\n  handleUsernameChange(event) {\n    this.setState({ username: event.target.value });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  handleGenderChange(event) {\n    this.setState({ gender: event.currentTarget.value });\n  }\n\n  handleAgeChange(event) {\n    this.setState({ age: event.currentTarget.value });\n  }\n\n  handleProvinceChange(event) {\n    this.setState({ province: event.target.value });\n  }\n}\n\n\nexport default Registration;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Header, Navigation } from \"react-mdl\";\nimport { endDoctorChat, logout } from \"../../../actions/doctor\";\n\nclass LoginHeader extends Component {\n  state = {};\n  logoutDoctor = (app) => {\n    this.props.history.push(\"/doctorLogin\");\n    logout(app);\n  };\n\n  chatWithPatients = (app) => {\n    endDoctorChat(app);\n    this.props.history.push(\"/ChatPage/PreDoctorChat\");\n  };\n\n  doctorHome = (app) => {\n    endDoctorChat(app);\n    this.props.history.push(\"/DoctorHome\");\n  };\n\n  render() {\n    const { app, history, name } = this.props;\n    return (\n      <div>\n        <Header\n          title={\n            <Link className=\"Link\" to=\"/DoctorHome\">\n              {`${name}'s profile`}\n            </Link>\n          }\n          className=\"do-header\"\n        >\n          <Navigation>\n            <Link onClick={() => this.doctorHome(app)}>Dashboard</Link>\n            <Link onClick={() => this.chatWithPatients(app)}>\n              Chat With Patients\n            </Link>\n            <Link onClick={() => this.logoutDoctor(app)}> Logout</Link>\n          </Navigation>\n        </Header>\n      </div>\n    );\n  }\n}\n\nexport default LoginHeader;\n// function LoginHeader(props) {\n//   logoutDoctor = (app) => {\n//     this.props.history.push(\"/doctorLogin\");\n//     logout(app);\n//   };\n//   return (\n//     <div>\n//       <Header\n//         title={\n//           <Link className=\"Link\" to=\"/DoctorHome\">\n//             {props.name + \"'s profile\"}\n//           </Link>\n//         }\n//         className=\"header-color\"\n//       >\n//         <Navigation>\n//           <Link to={\"/\"}>Homepage</Link>\n//           <Link to={\"/ChatPage/PreDoctorChat\"}>Chat With Patients</Link>\n//           <Link onClick={() => this.logoutDoctor(app)}> Logout</Link>\n//         </Navigation>\n//       </Header>\n//     </div>\n//   );\n// }\n\n// export default LoginHeader;\n","const patientIcon = \"https://img.icons8.com/ios/50/000000/consultation.png\";\nconst doctorIcon = \"https://img.icons8.com/wired/64/000000/medical-doctor.png\";\n\n\n//Get all messages between current user and selected user\nexport const getMessages = (chatPage, isDoctor) => {\n    const url = isDoctor ? \"/doctors/check-session\" : \"/patients/check-session\";\n    fetch(url)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            if (json && (json.currentPatient || json.currentDoctor)) {\n                if (!isDoctor) {\n                    chatPage.setState({currentPatient: json.currentPatient})\n                } else {\n                    chatPage.setState({currentDoctor: json.currentDoctor})\n                }\n            }\n            const url1 = isDoctor ? \"/patients/contact-session\" : \"/doctors/contact-session\";\n            fetch(url1)\n                .then((res) => {\n                    if (res.status === 200) {\n                        return res.json();\n                    }\n                })\n                .then((json) => {\n                    if (json && (json.selectedDoctor || json.selectedPatient)) {\n                        if (!isDoctor) {\n                            chatPage.setState({selectedDoctor: json.selectedDoctor});\n                        } else {\n                            chatPage.setState({selectedPatient: json.selectedPatient})\n                        }\n                    }\n                    const p = isDoctor ? chatPage.state.selectedPatient.username : chatPage.state.currentPatient.username;\n                    const d = isDoctor ? chatPage.state.currentDoctor.username : chatPage.state.selectedDoctor.username;\n                    const url2 = `/messages/${p}/${d}`;\n                    fetch(url2)\n                        .then((res) => {\n                            if (res.status === 200) {\n                                return res.json();\n                            }\n                        })\n                        .then((json) => {\n                            const messages = [];\n                            for (let i = 0; i < json.length; i++) {\n                                messages.push({\n                                    \"text\": json[i].text,\n                                    \"id\": (i + 1).toString(),\n                                    \"sender\": {\n                                        \"name\": json[i].sender,\n                                        \"uid\": json[i].sender === p ? \"2\" : \"1\",\n                                        \"avatar\": json[i].sender === p ? patientIcon : doctorIcon\n                                    }\n                                })\n                            }\n                            chatPage.setState({\n                                messages: messages\n                            })\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        })\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n};\n\n//Send message event listener(prePatientChat page)\n//Update selected doctor by click related doctor send message button\n//Go to PatientChatPage\nexport const setPatientChatPage = (doctor, app, history) => {\n    const url1 = `/doctors/${doctor}`;\n    fetch(url1).then((res) => {\n        if (res.status === 200) {\n            return res.json()\n        }\n    }).then((json) => {\n        app.setState({\n            selectedDoctor: json[0]\n        });\n        const url = \"/patients\";\n        const data = {\n            patient: app.state.currentPatient,\n            doctor: json[0]\n        };\n        const request = new Request(url, {\n            method: \"put\",\n            body: JSON.stringify(data),\n            headers: {\n                Accept: \"application/json, text/plain, */*\",\n                \"Content-Type\": \"application/json\",\n            },\n        });\n        fetch(request).then((res) => {\n            history.push(\"/ChatPage/PatientChatPage\")\n        }).catch((error) => {\n            console.log(error)\n        });\n    }).catch((error) => {\n        console.log(error);\n    });\n};\n\n//Get patient message by current doctor as receiver and set page state\nexport const getPatientMessage = (pdc) => {\n    const url = \"/doctors/check-session\";\n    fetch(url)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            if (json && json.currentDoctor) {\n                pdc.setState({currentDoctor: json.currentDoctor});\n            }\n            const url1 = `/messages/${pdc.state.currentDoctor.username}`;\n            fetch(url1)\n                .then((res) => {\n                    if (res.status === 200) {\n                        return res.json();\n                    }\n                })\n                .then((json) => {\n                    const patientMessages = [];\n                    while (json.length > 0) {\n                        let message = json.pop();\n                        json = json.filter(m => m.sender !== message.sender);\n                        patientMessages.push(message)\n                    }\n                    pdc.setState({\n                        patientMessages: patientMessages\n                    })\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n};\n//Send message event listener(preDoctorChat page)\n//Update selected patient by click related patient send message button\n//Go to DoctorChatPage\nexport const setDoctorChatPage = (patient, app, history) => {\n    const url = `/patients/${patient}`;\n    fetch(url).then((res) => {\n        if (res.status === 200) {\n            return res.json()\n        }\n    }).then((json) => {\n        app.setState({\n            selectedPatient: json[0]\n        });\n        history.push(\"/ChatPage/DoctorChatPage\")\n    }).catch(error => {\n        console.log(error)\n    })\n};\n\n//Set all previous non-replied messages to replied\nconst messageReplied = (receiver, sender) => {\n    const request = new Request(\"/messages/replied\", {\n        method: \"post\",\n        body: JSON.stringify({\n            sender: sender,\n            receiver: receiver\n        }),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\",\n        },\n    });\n    fetch(request).catch(error => {\n        console.log(error)\n    })\n};\n\n//Chat box message send  event listener\n//Send message to database\nexport const sendMessage = (message, cp) => {\n    const sender = cp.state.isDoctor ? cp.state.currentDoctor.username : cp.state.currentPatient.username;\n    const receiver = cp.state.isDoctor ? cp.state.selectedPatient.username : cp.state.selectedDoctor.username;\n    messageReplied(sender, receiver);\n    const data = {\n        sender: sender,\n        receiver: receiver,\n        text: message,\n        isReplied: false\n    };\n    const request = new Request(\"/messages\", {\n        method: \"post\",\n        body: JSON.stringify(data),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\",\n        },\n    });\n    fetch(request).then(res => {\n        if (res.status === 200) {\n            console.log(\"success\")\n        } else {\n            console.log(\"failed\")\n        }\n    }).catch(error => {\n        console.log(error)\n    })\n};\n\n//Chat box message send event listener\n//Change ChatPage state to display message\nexport const displayMessage = (message, chatPage) => {\n    const avatar = chatPage.state.isDoctor ? doctorIcon : patientIcon;\n    const newMessage = {\n        \"text\": message,\n        \"id\": chatPage.state.messages.length + 1,\n        \"sender\": {\n            \"name\": chatPage.state.name,\n            \"uid\": chatPage.state.user.uid,\n            \"avatar\": avatar,\n        },\n    };\n    chatPage.state.messages.push(newMessage);\n};\n","import React from \"react\";\nimport LoginHeader from \"../../DoctorDashboard/LoginHeader/LoginHeader\";\nimport ReactTable from 'react-table-v6';\nimport \"react-table-v6/react-table.css\";\nimport matchSorter from \"match-sorter\";\nimport {getPatientMessage, setDoctorChatPage} from \"../../../actions/message\";\nimport {Container} from \"@material-ui/core\";\n\nclass PreDoctorChat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.history.push(\"/ChatPage/PreDoctorChat\");\n        this.state = {\n            currentDoctor: {\n                username: ''\n            },\n            patientMessages: []\n        };\n    };\n\n    componentDidMount() {\n        getPatientMessage(this)\n    }\n\n    render() {\n        const {history, app} = this.props;\n        const columns = [\n            {\n                Header: 'Patient Name',\n                id: 'patientName',\n                filterable: true,\n                accessor: 'sender',\n                filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, {keys: ['patientName']}),\n                filterAll: true\n            },\n            {\n                Header: 'Message',\n                id: 'message',\n                sortable: false,\n                filterable: true,\n                accessor: 'text',\n                filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, {keys: ['message']}),\n                filterAll: true\n            },\n            {\n                Header: 'Chat With Patient',\n                sortable: false,\n                accessor: 'sender',\n                Cell: (props) => (\n                    <button className={\"message-b\"} id={props.value} onClick={event => {\n                        setDoctorChatPage(event.target.id, app, history)\n                    }}>\n                        Send Message\n                    </button>)\n            },\n        ];\n        return (\n            <div className=\"pcp-main-div\">\n                <LoginHeader history={history} app={app} name={this.state.currentDoctor.username}/>\n                <div className=\"list-div\">\n                    <p className=\"list-header\">\n                        patient messages:\n                    </p>\n                </div>\n                <Container>\n                    <ReactTable\n                        className={`-highlight`}\n                        columns={columns}\n                        data={this.state.patientMessages}\n                        noDataText={`No Patient Message Found`}\n                    >\n                    </ReactTable>\n                </Container>\n            </div>\n\n        );\n    }\n}\n\nexport default PreDoctorChat;\n\n","import React from \"react\";\nimport {ChatBox} from \"react-chatbox-component\";\nimport LoginHeader from \"../DoctorDashboard/LoginHeader/LoginHeader\";\nimport \"react-chatbox-component/dist/style.css\";\nimport \"./styles.css\";\nimport {displayMessage, getMessages, sendMessage} from \"../../actions/message\";\nimport {Container} from \"@material-ui/core\";\nimport patientIcon from \"./Picture/patient.jpg\"\nimport {addPatientToWatchlist} from \"../../actions/doctor\";\n\n\nclass DoctorChatPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        currentDoctor: {\n            username: ''\n        },\n        messages: [],\n        user: {\"uid\": '1'},\n        selectedPatient: {\n            username: '',\n            gender: '',\n            age: '',\n            province: ''\n        },\n        isDoctor: true\n    };\n\n    componentDidMount() {\n        const isDoctor = true;\n        getMessages(this, isDoctor)\n    }\n\n    render() {\n        const {history, app} = this.props;\n        const doctor = this.state.currentDoctor;\n        const patient = this.state.selectedPatient;\n        return (\n            <div>\n                <LoginHeader history={history} app={app} name={doctor.username}/>\n                <div className=\"dmain\">\n                    <div className={\"dempty\"}>&nbsp;</div>\n                    <div className=\"dcontainer\">\n                        <Container>\n                            <div className=\"chat-header\">\n                                <h5>Welcome Dr.{doctor.username}</h5>\n                            </div>\n                            <ChatBox\n                                messages={this.state.messages}\n                                user={this.state.user}\n                                onSubmit={(message) => {\n                                    sendMessage(message, this);\n                                    displayMessage(message, this)\n                                }\n                                }\n                            />\n                        </Container>\n                    </div>\n                    <div className=\"dinfo\">\n                        <Container>\n                            <p className=\"dinfo-p\">Patient info</p>\n                            <div className=\"profile-div\">\n                                <img src={patientIcon} alt={patient.username} className={\"profile-img\"}/>\n                                <h1>{patient.username}</h1>\n                                <p>{patient.gender}</p>\n                                <p>{patient.age}</p>\n                                <p>{patient.province}</p>\n                                <p>\n                                    <button className={'add-button'} onClick={event => {\n                                        addPatientToWatchlist(event.target, doctor, patient, app)\n                                    }}>Add To List\n                                    </button>\n                                </p>\n                            </div>\n                        </Container>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DoctorChatPage;\n","import React, { Component } from \"react\";\nimport \"../../PatientLogin.css\";\nimport { Header, Navigation } from \"react-mdl\";\nimport { Link } from \"react-router-dom\";\nimport { endPatientChat, logout } from \"../../../../actions/patients\";\n\nclass PatientHeader extends Component {\n  state = {};\n\n  logoutPatient = (app) => {\n    this.props.history.push(\"/PatientLogin\");\n    logout(app);\n  };\n\n  askADoctor = (app) => {\n    endPatientChat(app);\n    this.props.history.push(\"/ChatPage/PrePatientChat\");\n  };\n\n  patientHome = (app) => {\n    endPatientChat(app);\n    this.props.history.push(\"/PatientHome\");\n  };\n\n  render() {\n    const { app, history, name } = this.props;\n    return (\n      <div>\n        <Header title={`${name}'s profile`} className=\"pa-header\">\n          <Navigation>\n            <Link onClick={() => this.patientHome(app)}>Dashboard</Link>\n            <Link onClick={() => this.askADoctor(app)}> Ask a doctor</Link>\n            <Link onClick={() => this.logoutPatient(app)}> Logout</Link>\n          </Navigation>\n        </Header>\n      </div>\n    );\n  }\n}\n\nexport default PatientHeader;\n// function PatientHeader(props) {\n//   return (\n//     <div>\n//       <Header title={props.name + \"'s profile\"} className=\"header-color\">\n//         <Navigation>\n//           <Link to=\"/PatientHome\">Homepage</Link>\n//           <Link to=\"/SymptomChecklist\">Symptom Checklist</Link>\n//           <Link to=\"/ChatPage/PrePatientChat\"> Ask a doctor</Link>\n//           <Link to=\"/PatientLogin\">Logout</Link>\n//         </Navigation>\n//       </Header>\n//     </div>\n//   );\n// }\n\n// export default PatientHeader;\n","import React from \"react\";\nimport {ChatBox} from 'react-chatbox-component';\nimport 'react-chatbox-component/dist/style.css';\nimport PatientHeader from \"../PatientDashboard/components/PatientHeader/PatientHeader\";\nimport {displayMessage, getMessages, sendMessage} from \"../../actions/message\";\nimport {Container} from \"@material-ui/core\";\nimport doctorIcon from \"./Picture/doctor.jpg\";\n\nclass PatientChatPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.history.push(\"/ChatPage/PatientChatPage\");\n    }\n\n    state = {\n        currentPatient: {\n            username: ''\n        },\n        messages: [],\n        user: {\"uid\": '2'},\n        selectedDoctor: {\n            username: '',\n            doctorType: '',\n            location: ''\n        },\n        isDoctor: false\n    };\n\n    componentDidMount() {\n        const isDoctor = false;\n        getMessages(this, isDoctor)\n    }\n\n    render() {\n        const {history, app} = this.props;\n        const patient = this.state.currentPatient;\n        const doctor = this.state.selectedDoctor;\n        return (\n            <div>\n                <PatientHeader history={history} app={app} name={patient.username}/>\n                <div className=\"dmain\">\n                    <div className={\"dempty\"}>&nbsp;</div>\n                    <div className=\"dcontainer\">\n                        <Container>\n                            <div className=\"chat-header\">\n                                <h5>Welcome {patient.username}</h5>\n                            </div>\n                            <ChatBox\n                                messages={this.state.messages}\n                                user={this.state.user}\n                                onSubmit={(message) => {\n                                    sendMessage(message, this);\n                                    displayMessage(message, this)\n                                }\n                                }\n                            />\n                        </Container>\n                    </div>\n                    <div className=\"dinfo\">\n                        <Container>\n                            <p className=\"dinfo-p\">Doctor info</p>\n                            <div className=\"profile-div\">\n                                <img src={doctorIcon} alt={doctor.username} className={\"profile-img\"}/>\n                                <h1>Dr.{doctor.username}</h1>\n                                <p>{doctor.doctorType}</p>\n                                <p>{doctor.location}</p>\n                            </div>\n                        </Container>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PatientChatPage;\n","import React from \"react\";\nimport \"./styles.css\";\nimport { Container } from \"reactstrap\";\n\nfunction Greeting(props) {\n  const { name, userId } = props;\n\n  return (\n    <div>\n      <Container>\n        <div>\n          <br></br>\n\n          <br></br>\n          <h1 className=\"doctitle\">Welcome {name}</h1>\n          <hr className=\"my-4\"></hr>\n          <p>user id: {userId}</p>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default Greeting;\n","import React from 'react'\nimport './styles.css'\nimport \"react-table-v6/react-table.css\";\nimport {getPatients} from \"../../actions/admin\"\nimport {Table, TableHeader} from \"react-mdl\"\nimport {updatePatient} from \"../../actions/admin\"\n\nclass PatientTable extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state= {\n            patients: [],\n            doctors: [],\n            error: \"\",\n            success: \"\",\n            searching: false\n        }\n        this.handleNameChange = this.handleNameChange.bind(this)\n        this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        this.handleProvinceChange = this.handleProvinceChange.bind(this)\n        this.handleAgeChange = this.handleAgeChange.bind(this)\n        \n    }\n\n    componentWillMount() {\n        getPatients(this)\n    }\n\n    render() {\n\n        const patient_list = this.state.patients.map((user)=>(\n            {name: <input type=\"text\" value={user.username} onChange={this.handleNameChange}/>, \n            Id: user._id, \n            password: <input type=\"text\" onChange={this.handlePasswordChange} />,\n            province: <input type=\"text\" value={user.province} onChange={this.handleProvinceChange} />,\n            age: <input type=\"text\" value={user.age} onChange={this.handleAgeChange} />,\n            edit: <button onClick={()=> updatePatient(this, user)} >Edit</button>\n            }\n          ))\n\n        // const patient_columns = [\n        //     {\n        //         Header: 'User ID',\n        //         accessor: '_id'\n        //     },\n        //     {\n        //         Header: 'Username',\n        //         accessor: 'username',\n        //         Cell: (props) => (\n        //             <input type=\"text\" value={props.value} onChange={this.handleNameChange}/>\n        //         )\n        //     },\n        //     {\n        //         Header: \"Password\",\n        //         accessor: \"password\",\n        //         Cell: (props) => (\n        //             <input type=\"text\" value={props.value} onChange={this.handlePasswordChange}/>\n        //         )\n        //     },\n        //     {\n        //         Header: \"Province\",\n        //         accessor: \"province\",\n        //         Cell: (props) => (\n        //             <input type=\"text\" value={props.value} onChange={this.handleProvinceChange}/>\n        //         )\n        //     },\n        //     {\n        //         Header: \"Age\",\n        //         accessor: \"age\",\n        //         Cell: (props) => (\n        //             <input type=\"text\" value={props.value} onChange={this.handleAgeChange}/>\n        //         )\n        //     },\n        //     {\n        //         Header: 'Update',\n        //         accessor: '_id',\n        //         Cell: (props) => (\n        //             <Button id={props.value} onClick={() => console.log(\"clicked!\")}>\n        //                 Update\n        //             </Button>)\n        //     }\n        // ];\n\n        // const doctor_columns = [\n        //     {\n        //         Header: 'User ID',\n        //         accessor: '_id'\n        //     },\n        //     {\n        //         Header: 'Username',\n        //         accessor: 'username',\n        //         Cell: (props) => (\n        //             <TextField\n        //             onChange={this.handleNameChange}\n        //             label={props.value} \n        //             style={{width: \"80%\"}}/>\n        //         )\n        //     },\n        //     {\n        //         Header: \"Password\",\n        //         accessor: \"password\",\n        //         Cell: (props) => (\n        //             <TextField\n        //             onChange={this.handlePasswordChange}\n        //             label=\"New Password...\" \n        //             style={{width: \"80%\"}}/>\n        //         )\n        //     },\n        //     {\n        //         Header: \"Province\",\n        //         accessor: \"location\",\n        //         Cell: (props) => (\n        //             <TextField\n        //             onChange={this.handleProvinceChange}\n        //             label={props.value} \n        //             style={{width: \"80%\"}}/>\n        //         )\n        //     },\n        //     {\n        //         Header: \"Doctor Type\",\n        //         accessor: \"doctorType\",\n        //         Cell: (props) => (\n        //                 <TextField\n        //                 onChange={() => console.log(\"typed\")}\n        //                 label={props.value} \n        //                 style={{width: \"80%\"}}/>\n        //             )\n        //     },\n        //     {\n        //         Header: 'Update',\n        //         accessor: '_id',\n        //         Cell: (props) => (\n        //             <Button id={props.value} onClick={() => console.log(\"clicked!\")}>\n        //                 Update\n        //             </Button>)\n        //     }\n        // ];\n        // return (\n        //         <ReactTable\n        //             className={`-highlight`}\n        //             columns={patient_columns}\n        //             data={this.state.patients}\n        //             noDataText={`No User currently`}\n        //         >\n        //         </ReactTable>\n        // );\n    \n\n        return (\n            <div>\n                <h3 className=\"error\">{this.state.error}</h3>\n                <h3 className=\"success\">{this.state.success}</h3>\n                <Table \n                sortable \n                shadow={1} \n                rows={patient_list}\n                >\n            \n                    <TableHeader\n                    name=\"Id\"\n                    sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                    tooltip=\"The id of the users\"\n                    >\n                    User Id\n                    </TableHeader>\n\n                    <TableHeader\n                    name=\"name\"\n                    sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                    tooltip=\"The name of the users\"\n                    >\n                    Name\n                    </TableHeader>\n                    \n                    <TableHeader\n                    name=\"password\"\n                    // sortFn={(a, b, isAsc) => (isAsc ? a.value : b.value).match(/(.*)/)[0].localeCompare((isAsc ? b.value : a.value).match(/(.*)/)[0])}\n                    tooltip=\"Enter new password for the user\"\n                    >\n                    New Password\n                    </TableHeader>\n\n                    <TableHeader\n                    name=\"province\"\n                    // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                    tooltip=\"The password of the users\"\n                    >\n                    Province\n                    </TableHeader>\n\n                    <TableHeader\n                    name=\"age\"\n                    // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                    tooltip=\"The age of the users\"\n                    >\n                    Age\n                    </TableHeader>\n\n                    <TableHeader\n                    name=\"edit\"\n                    // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                    tooltip=\"Click the edit button to update the user's information\"\n                    >\n                    Edit\n                    </TableHeader>\n                </Table>\n            </div>\n        )\n    }\n\n    handleNameChange(event) {\n        const changed_id= event.target.parentElement.parentElement.firstElementChild.innerText\n        const new_state= this.state.patients.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i]._id === changed_id) {\n                new_state[i].username = event.target.value\n                break\n            }\n        }\n        this.setState({patien: new_state})\n    }\n\n    handlePasswordChange(event) {\n        console.log(event.target.parentElement.parentElement.firstElementChild.innerText)\n        const changed_id= event.target.parentElement.parentElement.firstElementChild.innerText\n        const new_state= this.state.patients.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i]._id === changed_id) {\n                new_state[i].password = event.target.value\n                break\n            }\n        }\n        this.setState({users: new_state})\n    }\n\n    handleProvinceChange(event) {\n        const changed_id= event.target.parentElement.parentElement.firstElementChild.innerText\n        const new_state= this.state.patients.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i]._id === changed_id) {\n                new_state[i].province = event.target.value\n                break\n            }\n        }\n        this.setState({patients: new_state})\n    }\n\n    handleAgeChange(event) {\n        const changed_id= event.target.parentElement.parentElement.firstElementChild.innerText\n        const new_state= this.state.patients.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i]._id === changed_id) {\n                new_state[i].age = event.target.value\n                break\n            }\n        }\n        this.setState({patients: new_state})\n    }\n\n}\n\nexport default PatientTable","import React from 'react'\nimport './styles.css'\nimport \"react-table-v6/react-table.css\";\nimport {getDoctors} from \"../../actions/admin\"\nimport {Table, TableHeader} from \"react-mdl\"\nimport {updateDoctor} from \"../../actions/admin\"\n\nclass DoctorTable extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state= {\n            doctors: [],\n            error: \"\",\n            success: \"\",\n            activeTab: 0\n        }\n        this.handleNameChange = this.handleNameChange.bind(this)\n        this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        this.handleLocationChange = this.handleLocationChange.bind(this)\n        this.handleDoctorTypeChange = this.handleDoctorTypeChange.bind(this)\n        \n    }\n\n    componentWillMount() {\n        getDoctors(this)\n    }\n\n    render() {\n\n        const doctor_list = this.state.doctors.map((user)=>(\n            {name: <input type=\"text\" value={user.username} onChange={this.handleNameChange}/>, \n            Id: user._id, \n            password: <input type=\"text\" onChange={this.handlePasswordChange} />,\n            location: <input type=\"text\" value={user.location} onChange={this.handleLocationChange} />,\n            doctorType: <input type=\"text\" value={user.doctorType} onChange={this.handleDoctorTypeChange} />,\n            edit: <button onClick={()=> updateDoctor(this, user)} >Edit</button>\n            }\n          ))\n        \n\n        return (\n            <div>\n                <h3 className=\"error\">{this.state.error}</h3>\n                <h3 className=\"success\">{this.state.success}</h3>\n                <Table \n                sortable \n                shadow={1} \n                rows={doctor_list}\n                >\n            \n                    <TableHeader\n                    name=\"Id\"\n                    sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                    tooltip=\"The id of the users\"\n                    >\n                    User Id\n                    </TableHeader>\n\n                    <TableHeader\n                    name=\"name\"\n                    sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                    tooltip=\"The name of the users\"\n                    >\n                    Name\n                    </TableHeader>\n                    \n                    <TableHeader\n                    name=\"password\"\n                    // sortFn={(a, b, isAsc) => (isAsc ? a.value : b.value).match(/(.*)/)[0].localeCompare((isAsc ? b.value : a.value).match(/(.*)/)[0])}\n                    tooltip=\"Enter new password for the user\"\n                    >\n                    New Password\n                    </TableHeader>\n\n                    <TableHeader\n                    name=\"location\"\n                    // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                    tooltip=\"The province of the users\"\n                    >\n                    Province\n                    </TableHeader>\n\n                    <TableHeader\n                    name=\"doctorType\"\n                    // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                    tooltip=\"The field the user specializes\"\n                    >\n                    Doctor Type\n                    </TableHeader>\n\n                    <TableHeader\n                    name=\"edit\"\n                    // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                    tooltip=\"Click the edit button to update the user's information\"\n                    >\n                    Edit\n                    </TableHeader>\n                </Table>\n            </div>\n        )\n    }\n\n    handleNameChange(event) {\n        const changed_id= event.target.parentElement.parentElement.firstElementChild.innerText\n        const new_state= this.state.doctors.slice()\n        console.log(new_state[0]._id)\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i]._id === changed_id) {\n                new_state[i].username = event.target.value\n                break\n            }\n        }\n        this.setState({doctors: new_state})\n    }\n\n    handlePasswordChange(event) {\n        console.log(event.target.parentElement.parentElement.firstElementChild.innerText)\n        const changed_id= event.target.parentElement.parentElement.firstElementChild.innerText\n        const new_state= this.state.doctors.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i]._id === changed_id) {\n                new_state[i].password = event.target.value\n                break\n            }\n        }\n        this.setState({doctors: new_state})\n    }\n\n    handleLocationChange(event) {\n        const changed_id= event.target.parentElement.parentElement.firstElementChild.innerText\n        const new_state= this.state.doctors.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i]._id === changed_id) {\n                new_state[i].location = event.target.value\n                break\n            }\n        }\n        this.setState({doctors: new_state})\n    }\n\n    handleDoctorTypeChange(event) {\n        const changed_id= event.target.parentElement.parentElement.firstElementChild.innerText\n        const new_state= this.state.doctors.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i]._id === changed_id) {\n                new_state[i].doctorType = event.target.value\n                break\n            }\n        }\n        this.setState({doctors: new_state})\n    }\n\n}\n\nexport default DoctorTable","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Layout, Header, Navigation } from \"react-mdl\";\nimport { logout } from \"../../actions/admin\";\nclass Navbar extends Component {\n  logoutAdmin = (app) => {\n    this.props.history.push(\"/AdminLogin\");\n    logout(app);\n  };\n  render() {\n    const { app } = this.props;\n    return (\n      <div className=\"demo-big-content\">\n        <Layout>\n          <Header\n            className=\"pa-header\"\n            title={\n              <Link className=\"Link\" to=\"/\">\n                COVID19\n              </Link>\n            }\n            scroll\n          >\n            <Navigation>\n              <Link to=\"/\">Homepage</Link>\n              <Link to=\"/covid\">Coronavirus (COVID-19)</Link>\n              <Link to=\"/preventions\">Preventions</Link>\n              <Link onClick={() => this.logoutAdmin(app)}> Logout</Link>\n            </Navigation>\n          </Header>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","//delete news from databse\nexport const deletenews = () => {\n  const url = \"/news/delete\";\n\n  const request = new Request(url, {\n    method: \"delete\",\n  });\n\n  fetch(request)\n      .then((res) => res.json())\n      .then((res) => console.log(res))\n      .catch((e) => {\n        console.log(e);\n      });\n};\n//post news to database\nexport const postnews = (Comp) => {\n  const url = \"/news\";\n\n  const cases = Comp.state.new_news;\n  const request = new Request(url, {\n    method: \"post\",\n\n    body: JSON.stringify(cases),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-type\": \"application/json\",\n    },\n  });\n\n  fetch(request).catch((e) => {\n    console.log(e);\n  });\n};\n","import React, { Component } from \"react\";\nimport { Textfield, Tab, Tabs } from \"react-mdl\";\nimport \"./styles.css\";\nimport Greeting from \"../DoctorDashboard/Greeting/Greeting\";\nimport PatientTable from \"./PatientTable\";\nimport DoctorTable from \"./DoctorTable\";\nimport Navbar from \"./adminNav\";\nimport { Container } from \"reactstrap\";\nimport { deletecases, postcases } from \"../../actions/cases\";\nimport { deletenews, postnews } from \"../../actions/news\";\n\nclass AdminDashboard extends Component {\n  state = {\n    message: { type: \"\", body: \"\" },\n    username: this.props.app.state.currentAdmin.username,\n    id: this.props.app.state.currentAdmin._id,\n    activeTab: 0,\n\n    new_news: {\n      No: 1,\n      ca1: \"Nothing here (Admin will update it soon)\",\n      ca2: \"Nothing here (Admin will update it soon)\",\n      ca3: \"Nothing here (Admin will update it soon)\",\n      lca1: \"Nothing here (Admin will update it soon)\",\n      lca2: \"Nothing here (Admin will update it soon)\",\n      lca3: \"Nothing here (Admin will update it soon)\",\n      tca1: \"Nothing here (Admin will update it soon)\",\n      tca2: \"Nothing here (Admin will update it soon)\",\n      tca3: \"Nothing here (Admin will update it soon)\",\n      us1: \"Nothing here (Admin will update it soon)\",\n      us2: \"Nothing here (Admin will update it soon)\",\n      us3: \"Nothing here (Admin will update it soon)\",\n      lus1: \"Nothing here (Admin will update it soon)\",\n      lus2: \"Nothing here (Admin will update it soon)\",\n      lus3: \"Nothing here (Admin will update it soon)\",\n      tus1: \"Nothing here (Admin will update it soon)\",\n      tus2: \"Nothing here (Admin will update it soon)\",\n      tus3: \"Nothing here (Admin will update it soon)\",\n      w1: \"Nothing here (Admin will update it soon)\",\n      w2: \"Nothing here (Admin will update it soon)\",\n      w3: \"Nothing here (Admin will update it soon)\",\n      lw1: \"Nothing here (Admin will update it soon)\",\n      lw2: \"Nothing here (Admin will update it soon)\",\n      lw3: \"Nothing here (Admin will update it soon)\",\n      tw1: \"Nothing here (Admin will update it soon)\",\n      tw2: \"Nothing here (Admin will update it soon)\",\n      tw3: \"Nothing here (Admin will update it soon)\",\n    },\n    new_cases: {\n      No: 1,\n      AB: 0,\n      BC: 0,\n      MB: 0,\n      NB: 0,\n      NL: 0,\n      NT: 0,\n      NS: 0,\n      NU: 0,\n      ON: 0,\n      PE: 0,\n      QC: 0,\n      SK: 0,\n      YT: 0,\n      cases: 0,\n      death: 0,\n      revorvered: 0,\n    },\n  };\n\n  constructor(props) {\n    //\n    super(props);\n    this.props.history.push(\"/AdminHome\"); //\n  }\n\n  handleNewsChange = (event) => {\n    let curr = this.state.new_news;\n    const id = event.target.id;\n    if (id === \"ca1\") {\n      curr.ca1 = event.target.value;\n    } else if (id === \"ca2\") {\n      curr.ca2 = event.target.value;\n    } else if (id === \"ca3\") {\n      curr.ca3 = event.target.value;\n    } else if (id === \"lca1\") {\n      curr.lca1 = event.target.value;\n    } else if (id === \"lca2\") {\n      curr.lca2 = event.target.value;\n    } else if (id === \"lca3\") {\n      curr.lca3 = event.target.value;\n    } else if (id === \"tca1\") {\n      curr.tca1 = event.target.value;\n    } else if (id === \"tca2\") {\n      curr.tca2 = event.target.value;\n    } else if (id === \"tca3\") {\n      curr.tca3 = event.target.value;\n    } else if (id === \"us1\") {\n      curr.us1 = event.target.value;\n    } else if (id === \"us2\") {\n      curr.us2 = event.target.value;\n    } else if (id === \"us3\") {\n      curr.us3 = event.target.value;\n    } else if (id === \"lus1\") {\n      curr.lus1 = event.target.value;\n    } else if (id === \"lus2\") {\n      curr.lus2 = event.target.value;\n    } else if (id === \"lus3\") {\n      curr.lus3 = event.target.value;\n    } else if (id === \"tus1\") {\n      curr.tus1 = event.target.value;\n    } else if (id === \"tus2\") {\n      curr.tus2 = event.target.value;\n    } else if (id === \"tus3\") {\n      curr.tus3 = event.target.value;\n    } else if (id === \"w1\") {\n      curr.w1 = event.target.value;\n    } else if (id === \"w2\") {\n      curr.w2 = event.target.value;\n    } else if (id === \"w3\") {\n      curr.w3 = event.target.value;\n    } else if (id === \"lw1\") {\n      curr.lw1 = event.target.value;\n    } else if (id === \"lw2\") {\n      curr.lw2 = event.target.value;\n    } else if (id === \"lw3\") {\n      curr.lw3 = event.target.value;\n    } else if (id === \"tw1\") {\n      curr.tw1 = event.target.value;\n    } else if (id === \"tw2\") {\n      curr.tw2 = event.target.value;\n    } else if (id === \"tw3\") {\n      curr.tw3 = event.target.value;\n    }\n\n    this.setState({\n      new_news: curr,\n    });\n  };\n\n  handleCasesChange = (event) => {\n    let curr = this.state.new_cases;\n    const id = event.target.id;\n    if (id === \"AB\") {\n      curr.AB = parseInt(event.target.value, 10);\n    } else if (id === \"BC\") {\n      curr.BC = parseInt(event.target.value, 10);\n    } else if (id === \"MB\") {\n      curr.MB = parseInt(event.target.value, 10);\n    } else if (id === \"NB\") {\n      curr.NB = parseInt(event.target.value, 10);\n    } else if (id === \"NL\") {\n      curr.NL = parseInt(event.target.value, 10);\n    } else if (id === \"NT\") {\n      curr.NT = parseInt(event.target.value, 10);\n    } else if (id === \"NS\") {\n      curr.NS = parseInt(event.target.value, 10);\n    } else if (id === \"NU\") {\n      curr.NU = parseInt(event.target.value, 10);\n    } else if (id === \"ON\") {\n      curr.ON = parseInt(event.target.value, 10);\n    } else if (id === \"PE\") {\n      curr.PE = parseInt(event.target.value, 10);\n    } else if (id === \"QC\") {\n      curr.QC = parseInt(event.target.value, 10);\n    } else if (id === \"SK\") {\n      curr.SK = parseInt(event.target.value, 10);\n    } else if (id === \"YT\") {\n      curr.YT = parseInt(event.target.value, 10);\n    } else if (id === \"cases\") {\n      curr.cases = parseInt(event.target.value, 10);\n    } else if (id === \"death\") {\n      curr.death = parseInt(event.target.value, 10);\n    } else if (id === \"recorvered\") {\n      curr.revorvered = parseInt(event.target.value, 10);\n    }\n    this.setState({\n      new_cases: curr,\n    });\n  };\n\n  displayTabTable() {\n    if (this.state.activeTab === 0) {\n      return <PatientTable />;\n    } else if (this.state.activeTab === 1) {\n      return <DoctorTable />;\n    } else if (this.state.activeTab === 2) {\n      return (\n        <div>\n          <div class=\"alert alert-warning\" role=\"alert\">\n            Warning! If you click the DELETE button below, you NEED to update it\n            below. Otherwise some part of the app WON't work! Also if you want\n            to update, you NEED to delete the older version first! You can click\n            the delete button as many times as you want, but DO NOT post more\n            than 1 time.\n          </div>\n          <h3>Canada News</h3>\n          <p>News body:</p>\n          News 1:{\" \"}\n          <input className=\"sizez\" onChange={this.handleNewsChange} id=\"ca1\" />\n          News 2:{\" \"}\n          <input className=\"sizez\" onChange={this.handleNewsChange} id=\"ca2\" />\n          News 3:{\" \"}\n          <input className=\"sizez\" onChange={this.handleNewsChange} id=\"ca3\" />\n          <br />\n          <p>News links:</p>\n          Link 1:{\" \"}\n          <input className=\"sizez\" onChange={this.handleNewsChange} id=\"lca1\" />\n          Link 2:{\" \"}\n          <input className=\"sizez\" onChange={this.handleNewsChange} id=\"lca2\" />\n          Link 3:{\" \"}\n          <input className=\"sizez\" onChange={this.handleNewsChange} id=\"lca3\" />\n          <br />\n          <p>News titles:</p>\n          Title 1:{\" \"}\n          <input className=\"sizez\" onChange={this.handleNewsChange} id=\"tca1\" />\n          Title 2:{\" \"}\n          <input className=\"sizez\" onChange={this.handleNewsChange} id=\"tca2\" />\n          Title 3:{\" \"}\n          <input className=\"sizez\" onChange={this.handleNewsChange} id=\"tca3\" />\n          <br />\n          <br />\n          <p>current ca news (news-title-link):</p>\n          <p>{this.state.new_news.ca1}</p>\n          <p>{this.state.new_news.ca2}</p>\n          <p>{this.state.new_news.ca3}</p>\n          <p>{this.state.new_news.tca1}</p>\n          <p>{this.state.new_news.tca2}</p>\n          <p>{this.state.new_news.tca3}</p>\n          <p>{this.state.new_news.lca1}</p>\n          <p>{this.state.new_news.lca2}</p>\n          <p>{this.state.new_news.lca3}</p>\n          <br />\n          <br />\n          <button\n            type=\"button\"\n            class=\"btn btn-warning\"\n            onClick={() => deletenews()}\n          >\n            DELETE NEWS\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-warning update-news-button\"\n            onClick={() => postnews(this)}\n          >\n            UPDATE NEWS\n          </button>\n        </div>\n      );\n    } else if (this.state.activeTab === 3) {\n      return (\n        <div>\n          <div class=\"alert alert-warning\" role=\"alert\">\n            Warning! If you click the DELETE button below, you NEED to update it\n            below. Otherwise some part of the app WON't work! Also if you want\n            to update, you NEED to delete the older version first! You can click\n            the delete button as many times as you want, but DO NOT post more\n            than 1 time.\n          </div>\n          <h3>USA News</h3>\n          <p>News Body:</p>\n          News 1:\n          <textarea\n            className=\"sizez\"\n            onChange={this.handleNewsChange}\n            id=\"us1\"\n          />\n          News 2:\n          <textarea\n            className=\"sizez\"\n            onChange={this.handleNewsChange}\n            id=\"us2\"\n          />\n          News 3:\n          <textarea\n            className=\"sizez\"\n            onChange={this.handleNewsChange}\n            id=\"us3\"\n          />\n          <br />\n          <p>News Links:</p>\n          Link 1:{\" \"}\n          <textarea\n            className=\"sizez\"\n            onChange={this.handleNewsChange}\n            id=\"lus1\"\n          />\n          Link 2:{\" \"}\n          <textarea\n            className=\"sizez\"\n            onChange={this.handleNewsChange}\n            id=\"lus2\"\n          />\n          Link 3:{\" \"}\n          <textarea\n            className=\"sizez\"\n            onChange={this.handleNewsChange}\n            id=\"lus3\"\n          />\n          <br />\n          <p>News Titles:</p>\n          Title 1:{\" \"}\n          <textarea\n            className=\"sizez\"\n            onChange={this.handleNewsChange}\n            id=\"tus1\"\n          />\n          Title 2:{\" \"}\n          <textarea\n            className=\"sizez\"\n            onChange={this.handleNewsChange}\n            id=\"tus2\"\n          />\n          Title 3:{\" \"}\n          <textarea\n            className=\"sizez\"\n            onChange={this.handleNewsChange}\n            id=\"tus3\"\n          />\n          <br />\n          <br />\n          <p>current us news (news-title-link):</p>\n          <p>{this.state.new_news.us1}</p>\n          <p>{this.state.new_news.us2}</p>\n          <p>{this.state.new_news.us3}</p>\n          <p>{this.state.new_news.tus1}</p>\n          <p>{this.state.new_news.tus2}</p>\n          <p>{this.state.new_news.tus3}</p>\n          <p>{this.state.new_news.lus4}</p>\n          <p>{this.state.new_news.lus5}</p>\n          <p>{this.state.new_news.lus6}</p>\n          <br />\n          <br />\n          <button\n            type=\"button\"\n            class=\"btn btn-warning\"\n            onClick={() => deletenews()}\n          >\n            DELETE NEWS\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-warning update-news-button\"\n            onClick={() => postnews(this)}\n          >\n            UPDATE NEWS\n          </button>\n        </div>\n      );\n    } else if (this.state.activeTab === 4) {\n      return (\n        <div>\n          <div class=\"alert alert-warning\" role=\"alert\">\n            Warning! If you click the DELETE button below, you NEED to update it\n            below. Otherwise some part of the app WON't work! Also if you want\n            to update, you NEED to delete the older version first! You can click\n            the delete button as many times as you want, but DO NOT post more\n            than 1 time.\n          </div>\n          <h3>World News</h3>\n          <p>News Body:</p>\n          News 1:\n          <input className=\"sizez\" onChange={this.handleNewsChange} id=\"w1\" />\n          News 2:\n          <input className=\"sizez\" onChange={this.handleNewsChange} id=\"w2\" />\n          News 3:\n          <input className=\"sizez\" onChange={this.handleNewsChange} id=\"w3\" />\n          <br />\n          <p>News Links:</p>\n          Link 1:{\" \"}\n          <input className=\"sizez\" onChange={this.handleNewsChange} id=\"lw1\" />\n          Link 2:{\" \"}\n          <input className=\"sizez\" onChange={this.handleNewsChange} id=\"lw2\" />\n          Link 3:{\" \"}\n          <input className=\"sizez\" onChange={this.handleNewsChange} id=\"lw3\" />\n          <br />\n          <p>News Titles:</p>\n          Title 1:{\" \"}\n          <input className=\"sizez\" onChange={this.handleNewsChange} id=\"tw1\" />\n          Title 2:{\" \"}\n          <input className=\"sizez\" onChange={this.handleNewsChange} id=\"tw2\" />\n          Title 3:{\" \"}\n          <input className=\"sizez\" onChange={this.handleNewsChange} id=\"tw3\" />\n          <br />\n          <br />\n          <p>current world news (news-title-link):</p>\n          <p>{this.state.new_news.w1}</p>\n          <p>{this.state.new_news.w2}</p>\n          <p>{this.state.new_news.w3}</p>\n          <p>{this.state.new_news.tw1}</p>\n          <p>{this.state.new_news.tw2}</p>\n          <p>{this.state.new_news.tw3}</p>\n          <p>{this.state.new_news.lw4}</p>\n          <p>{this.state.new_news.lw5}</p>\n          <p>{this.state.new_news.lw6}</p>\n          <br />\n          <br />\n          <button\n            type=\"button\"\n            class=\"btn btn-warning\"\n            onClick={() => deletenews()}\n          >\n            DELETE NEWS\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-warning update-news-button\"\n            onClick={() => postnews(this)}\n          >\n            UPDATE NEWS\n          </button>\n        </div>\n      );\n    } else if (this.state.activeTab === 5) {\n      return (\n        <div>\n          <div class=\"alert alert-warning\" role=\"alert\">\n            Warning! If you click the DELETE button below, you NEED to update it\n            below. Otherwise some part of the app WON't work! Also if you want\n            to update, you NEED to delete the older version first! You can click\n            the delete button as many times as you want, but DO NOT post more\n            than 1 time.\n          </div>\n          <h3>Cases (Please enter numerical values only!)</h3>\n          AB: <Textfield onChange={this.handleCasesChange} id=\"AB\" />\n          BC: <Textfield onChange={this.handleCasesChange} id=\"BC\" />\n          MB: <Textfield onChange={this.handleCasesChange} id=\"MB\" />\n          <br />\n          NB: <Textfield onChange={this.handleCasesChange} id=\"NB\" />\n          NL: <Textfield onChange={this.handleCasesChange} id=\"NL\" />\n          NT: <Textfield onChange={this.handleCasesChange} id=\"NT\" />\n          <br />\n          NS: <Textfield onChange={this.handleCasesChange} id=\"NS\" />\n          NU: <Textfield onChange={this.handleCasesChange} id=\"NU\" />\n          ON: <Textfield onChange={this.handleCasesChange} id=\"ON\" />\n          <br />\n          PE: <Textfield onChange={this.handleCasesChange} id=\"PE\" />\n          QC: <Textfield onChange={this.handleCasesChange} id=\"QC\" />\n          SK: <Textfield onChange={this.handleCasesChange} id=\"SK\" />\n          <br />\n          YT: <Textfield onChange={this.handleCasesChange} id=\"YT\" />\n          <br />\n          cases: <Textfield onChange={this.handleCasesChange} id=\"cases\" />\n          death: <Textfield onChange={this.handleCasesChange} id=\"death\" />\n          recorvered:{\" \"}\n          <Textfield onChange={this.handleCasesChange} id=\"recorvered\" />\n          <br />\n          <button\n            type=\"button\"\n            class=\"btn btn-warning\"\n            onClick={() => deletecases()}\n          >\n            DELETE CASES\n          </button>{\" \"}\n          <button\n            type=\"button\"\n            class=\"btn btn-warning update-news-button\"\n            onClick={() => postcases(this)}\n          >\n            UPDATE CASES\n          </button>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const { history, app } = this.props;\n    return (\n      <div className=\"pa-bg\">\n        <Navbar history={history} app={app} />\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <Container>\n          <div className=\"admin_dashboard_background\">\n            <Greeting\n              className=\"greeting\"\n              name={this.state.username}\n              userId={this.state.id}\n            />{\" \"}\n            <br />\n            <h3 className=\"error\">{this.error}</h3>\n            <div>\n              <Tabs\n                activeTab={this.state.activeTab}\n                onChange={(tabId) => this.setState({ activeTab: tabId })}\n                ripple\n              >\n                <Tab>Patient Info</Tab>\n                <Tab>Doctor Info</Tab>\n                <Tab>Canada News</Tab>\n                <Tab>US News</Tab>\n                <Tab>World News</Tab>\n                <Tab>Cases</Tab>\n              </Tabs>\n              <section className=\"user_table\">{this.displayTabTable()}</section>\n            </div>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default AdminDashboard;\n","//delete the cases information in the database\nexport const deletecases = () => {\n  const url = \"/cases/delete\";\n\n  const request = new Request(url, {\n    method: \"delete\",\n  });\n\n  fetch(request)\n      .then((res) => res.json())\n      .then((res) => console.log(res))\n      .catch((e) => {\n        console.log(e);\n      });\n};\n\n//post the cases information in the database\nexport const postcases = (Comp) => {\n  const url = \"/cases\";\n\n  const news = Comp.state.new_cases;\n  const request = new Request(url, {\n    method: \"post\",\n    body: JSON.stringify(news),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-type\": \"application/json\",\n    },\n  });\n\n  fetch(request).catch((e) => {\n    console.log(e);\n  });\n};\n","import React from \"react\";\nimport { Container, Button } from \"reactstrap\";\nimport { Grid, Cell } from \"react-mdl\";\nimport { uid } from \"react-uid\";\nimport { setPatientChatPage } from \"../../../../actions/message\";\nimport CurrentNews from \"../../../HomePage/currentnews\";\nimport Cases from \"../../../HomePage/Cases\";\nimport { readPatientVisitHistory } from \"../../../../actions/patients\";\nimport \"./ProfileTable.css\";\n\nclass ProfileTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patient: this.props.patient,\n      loading: true,\n    };\n  }\n\n  displayHistory() {\n    console.log(this.state.patient.visit_history);\n    const { app, history } = this.props;\n    if (this.state.patient.visit_history.length >= 1) {\n      const visits = this.state.patient.visit_history.map(function (\n        visit,\n        index\n      ) {\n        if (index < 8) {\n          return (\n            <li key={uid(visit)}>\n              <h5>\n                Dr. {visit.username} ({visit.doctorType})\n              </h5>\n              <Button\n                id={visit.username}\n                onClick={(event) =>\n                  setPatientChatPage(visit.username, app, history)\n                }\n              >\n                chat\n              </Button>\n            </li>\n          );\n        }\n      });\n      return <ul className=\"visit\">{visits}</ul>;\n    } else {\n      return <h3>No visit history currently!</h3>;\n    }\n  }\n\n  componentWillMount() {\n    readPatientVisitHistory(this);\n    // this.visit_history = this.displayHistory()\n  }\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div>\n          <Container>\n            <Grid>\n              <Cell col={10}>\n                <div className=\"outer_box\">\n                  <br></br>\n                  <br></br>\n                  <br></br>\n                  <h1 className=\"loading\">Loading Dashboard, please wait!</h1>\n                </div>\n              </Cell>\n              <Cell col={2}>\n                <CurrentNews />\n              </Cell>\n            </Grid>\n          </Container>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Container>\n            <Grid>\n              <Cell col={10}>\n                <div className=\"outer_box\">\n                  <br></br>\n                  <br></br>\n                  {/* <div className=\"profilePic\">\n                                        <img alt=\"\"/>\n                                    </div> */}\n                  <div className=\"current_news\">\n                    <Cases p={this.state.province} />\n                  </div>\n                  <br></br>\n                  <br></br>\n                </div>\n              </Cell>\n              <Cell col={2}>\n                <div className=\"visit_history\">\n                  <br></br>\n                  <h3 className=\"historyHeader\">Visit History:</h3>\n                  {this.displayHistory()}\n                </div>\n              </Cell>\n            </Grid>\n          </Container>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ProfileTable;\n","import React, { Component } from \"react\";\nimport Greeting from \"../DoctorDashboard/Greeting/Greeting\";\nimport PatientHeader from \"./components/PatientHeader/PatientHeader\";\nimport ProfileTable from \"./components/ProfileTable/ProfileTable\";\nimport { Grid, Cell } from \"react-mdl\";\nimport { Container } from \"reactstrap\";\nimport CurrentNews from \"../HomePage/currentnews\";\nimport Pimg from \"../ChatPage/Picture/patient.jpg\";\n\nconst patient_sample = {\n  name: \"yyy\",\n  userId: \"123\",\n  checklist: {\n    list: [\"36.5C\", \"mild\", \"None\"],\n    date: new Date(),\n  },\n  province: \"ON\",\n  history: [\n    {\n      doctor: \"Amelia Brand\",\n      visit_date: new Date(\"2020-02-20\"),\n      guidance: \"Drink hot water!\",\n    },\n  ],\n};\n\nclass PatientDashboard extends Component {\n  //login ///\n  constructor(props) {\n    //\n\n    super(props);\n    this.props.history.push(\"/PatientHome\"); //\n  }\n  state = {\n    username: this.props.app.state.currentPatient.username,\n    id: this.props.app.state.currentPatient._id,\n    province: this.props.app.state.currentPatient.province,\n    visit_history: this.props.app.state.currentPatient.visit_history,\n  };\n\n  render() {\n    console.log(this.state);\n    console.log(this.props.app.state.currentPatient._id);\n    const { history, app } = this.props;\n    return (\n      <div className=\"pa-bg\">\n        <PatientHeader history={history} app={app} name={this.state.username} />\n        <Container>\n          <Grid>\n            <Cell col={4}>\n              <br></br>\n              <img src={Pimg} alt=\"paimg\" className=\"pa-img\" />\n            </Cell>\n            <Cell col={8}>\n              <Greeting name={this.state.username} userId={this.state.id} />\n            </Cell>\n          </Grid>\n          <ProfileTable history={history} app={app} patient={this.state} />\n          <br></br>\n          <br></br>\n        </Container>\n\n        <Grid>\n          <Cell col={1}></Cell>\n          <Cell col={10}>\n            <br></br>\n            <br></br>\n            <h1>Current News:</h1>\n            <br></br>\n            <CurrentNews />\n          </Cell>\n          <Cell col={1}></Cell>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default PatientDashboard;\n// function PatientDashboard() {\n//   // const patient_A = [\"A\",\"100\",null,\"BC\"]\n//   // const patient_B = [\"B\",\"101\",null,\"ON\"]\n//   // const patient_C = [\"C\",\"102\",null,\"AB\"]\n//   // const patients = [patient_A, patient_B, patient_C]\n//   const patient_sample = {\n//     name: \"yyy\",\n//     userId: \"123\",\n//     checklist: {\n//       list: [\"36.5C\", \"mild\", \"None\"],\n//       date: new Date(),\n//     },\n//     province: \"ON\",\n//     history: [\n//       {\n//         doctor: \"Amelia Brand\",\n//         visit_date: new Date(\"2020-02-20\"),\n//         guidance: \"Drink hot water!\",\n//       },\n//     ],\n//   };\n\n//   return (\n//     <div className=\"app\">\n//       <PatientHeader name={patient_sample.name} />\n//       <Greeting name={patient_sample.name} userId={patient_sample.userId} />\n//       <ProfileTable patient={patient_sample} />\n//     </div>\n//     // <ul>\n//     //   {patients.map(patient =>\n//     //     (<li>\n//     //       <Patient key={patient[1]} name={patient[0]} userId={patient[1]} checkList={patient[2]} province={patient[3]}/>\n//     //      </li>))}\n//     // </ul>\n//   );\n// }\n\n// export default PatientDashboard;\n","import React from \"react\";\nimport { Container } from \"reactstrap\";\nimport { DataTable, TableHeader, Button, Grid, Cell } from \"react-mdl\";\nimport {\n  getPatients,\n  AddToWatchlist,\n  getWatchlist,\n  removePatientFromWatchlist,\n} from \"../../../actions/doctor\";\nimport \"./styles.css\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keyword: \"\",\n      found: [],\n      patients: [],\n      watchlist: null,\n      doctor: props.app.state.currentDoctor,\n      error: \"\",\n      success: \"\",\n    };\n    this.handleSearchClick = this.handleSearchClick.bind(this);\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      keyword: event.target.value,\n    });\n  };\n\n  showSearch(found_patients) {\n    return (\n      <div>\n        <br></br> <br></br>\n        <DataTable className=\"dtable\" shadow={0} rows={found_patients}>\n          <TableHeader name=\"Id\" tooltip=\"The id of patients\">\n            Id\n          </TableHeader>\n          <TableHeader name=\"name\" tooltip=\"The name of patients\">\n            Name\n          </TableHeader>\n          <TableHeader name=\"province\" tooltip=\"The province of patient(s)\">\n            Province\n          </TableHeader>\n          <TableHeader name=\"age\" tooltip=\"The age of patient(s)\">\n            Age\n          </TableHeader>\n          <TableHeader name=\"province\" tooltip=\"The gender of patient(s)\">\n            Gender\n          </TableHeader>\n          <TableHeader name=\"add\">Add</TableHeader>\n        </DataTable>\n      </div>\n    );\n  }\n\n  // update = (new_list) => {\n  //   this.setState({watchlist: new_list});\n  //   console.log(new_list)\n  // };\n\n  showWatchlist(watchlist) {\n    console.log(\"watchlist in showWatchlist\");\n    console.log(watchlist);\n    if (!watchlist) {\n      return <p>Watchlist Loading!</p>;\n    } else if (watchlist.length < 1) {\n      return <p>No Patient on watchlist at the moment!</p>;\n    } else {\n      return watchlist.map((patient) => (\n        <div className=\"Patient\">\n          <h3>UserName :{patient.username}</h3>\n          <p>User Id :{patient._id}</p>\n          <p>Province :{patient.province}</p>\n          <Button\n            raised\n            colored\n            ripple\n            onClick={(event) => {\n              removePatientFromWatchlist(this, patient);\n            }}\n          >\n            KICK OUT\n          </Button>{\" \"}\n          <br></br> <br></br>\n        </div>\n      ));\n    }\n  }\n\n  handleSearchClick() {\n    // check if name or id matches\n    getPatients(this);\n  }\n\n  componentWillMount() {\n    getWatchlist(this, this.props.app.state.currentDoctor._id);\n  }\n\n  render() {\n    const { app } = this.props;\n\n    let found_patients = [];\n    if (this.state.keyword.length < 1) {\n      found_patients = this.state.patients.map((user) => {\n        return {\n          name: `${user.username}`,\n          Id: `${user._id}`,\n          province: `${user.province}`,\n          age: `${user.age}`,\n          add: (\n            <Button\n              raised\n              colored\n              ripple\n              onClick={(event) =>\n                AddToWatchlist(\n                  this,\n                  event.target,\n                  app.state.currentDoctor,\n                  user\n                )\n              }\n            >\n              Add\n            </Button>\n          ),\n        };\n      });\n    } else {\n      found_patients = this.state.patients.filter(\n        (patient) =>\n          patient._id.includes(this.state.keyword) ||\n          patient.username.includes(this.state.keyword)\n      );\n      found_patients = found_patients.map((user) => {\n        return {\n          name: `${user.username}`,\n          Id: `${user._id}`,\n          province: `${user.province}`,\n          age: `${user.age}`,\n          add: (\n            <Button\n              raised\n              colored\n              ripple\n              onClick={(event) =>\n                AddToWatchlist(\n                  this,\n                  event.target,\n                  app.state.currentDoctor,\n                  user\n                )\n              }\n            >\n              Add\n            </Button>\n          ),\n        };\n      });\n    }\n    console.log(`waitlist`, this.state.watchlist);\n    return (\n      <Container>\n        <Grid>\n          <Cell col={4}>\n            <div className=\"SearchBar\">\n              <label>\n                Search Patient:\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Search a patient by username\"\n                  value={this.state.keyword}\n                  onChange={this.handleChange}\n                />\n                <Button\n                  raised\n                  colored\n                  ripple\n                  className=\"button\"\n                  onClick={() => this.handleSearchClick()}\n                >\n                  Search\n                </Button>\n                {this.showSearch(found_patients)}\n              </label>\n            </div>\n            <h3 className=\"error\">{this.state.error}</h3>\n            <h3 className=\"success\">{this.state.success}</h3>\n          </Cell>\n          <Cell col={4}></Cell>\n          <Cell col={4}>\n            <h3>Watchlist:</h3>\n            {this.showWatchlist(this.state.watchlist)}\n          </Cell>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport \"./ddash.css\";\nimport Greeting from \"./Greeting/Greeting\";\nimport SearchBar from \"./SearchBar/SearchBar\";\nimport { Grid, Cell } from \"react-mdl\";\nimport { Container } from \"reactstrap\";\nimport LoginHeader from \"./LoginHeader/LoginHeader\";\nimport Pimg from \"../ChatPage/Picture/doctor.jpg\";\n\nclass DoctorDashBoard extends Component {\n  constructor(props) {\n    //\n    super(props);\n    this.props.history.push(\"/DoctorHome\"); //\n  }\n  state = {\n    watchlist: this.props.app.state.currentDoctor.watchlist,\n    username: this.props.app.state.currentDoctor.username,\n    doctorType: this.props.app.state.currentDoctor.doctorType,\n    location: this.props.app.state.currentDoctor.location,\n    id: this.props.app.state.currentDoctor._id,\n    message: { type: \"\", body: \"\" },\n  };\n  render() {\n    const { history, app } = this.props;\n    return (\n      <div className=\"do-bg\">\n        <LoginHeader history={history} app={app} name={this.state.username} />\n        <Container>\n          <Grid>\n            <Cell col={4}>\n              <br></br>\n              <img src={Pimg} alt=\"paimg\" className=\"pa-img\" />\n            </Cell>\n            <Cell col={8}>\n              <Greeting name={this.state.username} userId={this.state.id} />\n            </Cell>\n          </Grid>\n          <SearchBar app={app}/>\n        </Container>\n        <br></br>\n        <br></br>\n      </div>\n    );\n  }\n}\n\nexport default DoctorDashBoard;","export const gtaLocation = ['Ajax', 'Aurora', 'Brampton', 'Brock', 'Burlington', 'Caledon', 'Clarington',\n    'East Gwillimbury', 'Georgina', 'Halton Hills', 'King', 'Markham', 'Milton', 'Mississauga', 'Newmarket', 'Oakville',\n    'Oshawa', 'Pickering', 'Richmond Hill', 'Scugog', 'Toronto', 'Uxbridge', 'Vaughan', 'Whitby', 'Whitchurch-Stouffville'];\n\nexport const doctorType = ['Anesthesiologist', 'Cardiologist', 'Dermatologist', 'Endocrinologist', 'EP Physician', 'Family Physician',\n    'Gastroenterologist', 'Gynecologist', 'Infectious Disease Physician', 'Internal Medicine Physician', 'Nephrologist',\n    'Neurologist', 'Obstetrician', 'Oncologist', 'Ophthalmologist', 'Otolaryngologist', 'Pediatrician',\n    'Physician Executive', 'Psychiatrist', 'Pulmonologist', 'Radiologist', 'Surgeon'];\n\n","import React from \"react\";\nimport PatientHeader from \"../../PatientDashboard/components/PatientHeader/PatientHeader\";\nimport \"./styles.css\";\nimport {doctorType} from \"../../RegistrationInfo/infomation\";\nimport ReactTable from 'react-table-v6';\nimport \"react-table-v6/react-table.css\";\nimport matchSorter from 'match-sorter';\nimport {getDoctors} from '../../../actions/doctor';\nimport {setPatientChatPage} from \"../../../actions/message\";\nimport {endPatientChat, readPatientCookie} from \"../../../actions/patients\";\nimport {Container} from \"@material-ui/core\";\n\nclass PrePatientChat extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.props.history.push(\"/ChatPage/PrePatientChat\");\n    }\n\n    state = {\n        currentPatient: {\n            username: ''\n        },\n        doctorInfo: []\n    };\n\n    createOptions = (opt) => {\n        let select = [];\n        for (let i = 0; i < opt.length; i++) {\n            select.push(<option value={`${opt[i]}`}>{opt[i]}</option>)\n        }\n        return select\n    };\n\n    componentDidMount() {\n        endPatientChat(this.props.app);\n        readPatientCookie(this);\n        getDoctors(this);\n    }\n\n    render() {\n        const {history, app} = this.props;\n        const name = this.state.currentPatient.username;\n        const columns = [\n            {\n                Header: 'Doctor Name',\n                id: 'doctorName',\n                filterable: true,\n                accessor: 'username',\n                filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, {keys: ['doctorName']}),\n                filterAll: true\n            },\n            {\n                Header: 'Doctor Type',\n                filterable: true,\n                accessor: 'doctorType',\n                filterMethod: (filter, row) => {\n                    if (filter.value === \"All\") {\n                        return true;\n                    }\n                    return row[filter.id] === filter.value;\n                },\n                Filter: ({filter, onChange}) =>\n                    <select\n                        onChange={event => onChange(event.target.value)}\n                        style={{width: \"100%\"}}\n                        value={filter ? filter.value : \"All\"}\n                    >\n                        <option value='All'>All</option>\n                        {this.createOptions(doctorType)}\n                    </select>\n            },\n            {\n                Header: 'Location',\n                id: 'location',\n                filterable: true,\n                accessor: 'location',\n                filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, {keys: ['location']}),\n                filterAll: true\n            },\n            {\n                Header: 'Chat With Doctor',\n                sortable: false,\n                accessor: 'username',\n                Cell: (props) => (\n                    <button className={'message-b'} id={props.value} onClick={event => {\n                        setPatientChatPage(event.target.id, app, history)\n                    }}>\n                        Send Message\n                    </button>\n\n                )\n            },\n        ];\n        return (\n            <div className={'pcp-main-div'}>\n                <PatientHeader history={history} app={app} name={name}/>\n                <div className={\"list-div\"}>\n                    <p className=\"list-header\">Doctor List</p>\n                </div>\n                <Container>\n                    <ReactTable\n                        className={`-highlight`}\n                        columns={columns}\n                        data={this.state.doctorInfo}\n                        noDataText={`No Doctor Found`}\n                    >\n                    </ReactTable>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default PrePatientChat;\n","import React, { Component } from \"react\";\nimport homepage from \"./components/HomePage/homepage\";\nimport covid from \"./components/HomePage/covid19\";\nimport currentnews from \"./components/HomePage/currentnews\";\nimport preventions from \"./components/HomePage/preventions\";\nimport PatientLogin from \"./components/Login/PatientLogin\";\nimport Dlogin from \"./components/Login/DoctorLogin\";\nimport Alogin from \"./components/Login/AdminLogin\";\nimport Registration from \"./components/Registration/Registration\";\nimport PreDoctorChat from \"./components/ChatPage/PreChatPage/PreDoctorChat\";\nimport DoctorChatPage from \"./components/ChatPage/DoctorChatPage\";\nimport PatientChatPage from \"./components/ChatPage/PatientChatPage\";\nimport Adminpg from \"./components/AdminDashboard/AdminDashboard\";\nimport Patpg from \"./components/PatientDashboard/PatientDashboard\";\nimport Docpg from \"./components/DoctorDashboard/DoctorDashboard\";\nimport PrePatientChat from \"./components/ChatPage/PreChatPage/PrePatientChat\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport {\n  readPatientCookie,\n  readSelectedPatientCookie,\n} from \"./actions/patients\";\nimport { readDoctorCookie, readSelectedDoctorCookie } from \"./actions/doctor\";\nimport { readAdminCookie } from \"./actions/admin\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    readSelectedDoctorCookie(this);\n    readSelectedPatientCookie(this);\n    readPatientCookie(this);\n    readDoctorCookie(this);\n    readAdminCookie(this);\n  }\n\n  state = {\n    currentPatient: null,\n    currentDoctor: null,\n    currentAdmin: null,\n    selectedDoctor: null,\n    selectedPatient: null,\n  };\n\n  render() {\n    console.log(\"selected doctor\", this.state.selectedDoctor);\n    console.log(\"current patient\", this.state.currentPatient);\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={homepage} />\n\n        <Route\n          path={[\"/PatientLogin\", \"/PatientHome\", \"/ChatPage/PatientChatPage\"]}\n          render={({ history }) => (\n            <div>\n              {!this.state.currentPatient ? (\n                <PatientLogin history={history} app={this} />\n              ) : !this.state.selectedDoctor ? (\n                <Patpg history={history} app={this} />\n              ) : (\n                <PatientChatPage history={history} app={this} />\n              )}\n            </div>\n          )}\n        />\n\n        <Route\n          path={[\"/doctorLogin\", \"/DoctorHome\", \"/ChatPage/DoctorChatPage\"]}\n          render={({ history }) => (\n            <div>\n              {!this.state.currentDoctor ? (\n                <Dlogin history={history} app={this} />\n              ) : !this.state.selectedPatient ? (\n                <Docpg history={history} app={this} />\n              ) : (\n                <DoctorChatPage history={history} app={this} />\n              )}\n            </div>\n          )}\n        />\n\n        <Route\n          path={[\"/AdminLogin\", \"/AdminHome\"]}\n          render={({ history }) => (\n            <div>\n              {!this.state.currentAdmin ? (\n                <Alogin history={history} app={this} />\n              ) : (\n                <Adminpg history={history} app={this} />\n              )}\n            </div>\n          )}\n        />\n\n        <Route\n          path={\"/ChatPage/PrePatientChat\"}\n          render={({ history }) => (\n            <div>\n              {!this.state.currentPatient ? (\n                <PatientLogin history={history} app={this} />\n              ) : (\n                <PrePatientChat history={history} app={this} />\n              )}\n            </div>\n          )}\n        />\n\n        <Route\n          path={\"/ChatPage/PreDoctorChat\"}\n          render={({ history }) => (\n            <div>\n              {!this.state.currentDoctor ? (\n                <Dlogin history={history} app={this} />\n              ) : (\n                <PreDoctorChat history={history} app={this} />\n              )}\n            </div>\n          )}\n        />\n\n        <Route path=\"/homepage\" component={homepage} />\n        <Route path=\"/covid\" component={covid} />\n        <Route path=\"/currentnews\" component={currentnews} />\n        <Route path=\"/preventions\" component={preventions} />\n        {/* <Route path=\"/PatientLogin\" component={PatientLogin} /> */}\n        <Route path=\"/doctorLogin\" component={Dlogin} />\n        <Route path=\"/AdminLogin\" component={Alogin} />\n        <Route\n          path=\"/registration\"\n          render={({ history }) => (\n            <div>\n                <Registration history={history} app={this} />\n            </div>\n          )}\n        />\n      </Switch>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./main\";\nfunction App() {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"react-mdl/extra/material.css\";\nimport \"react-mdl/extra/material.js\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/patient.c5cf72ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/doctor.429f43b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/b1.40ffd55d.gif\";","module.exports = __webpack_public_path__ + \"static/media/covid.4dbce25e.png\";","module.exports = __webpack_public_path__ + \"static/media/ca1.9bf51cee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ca2.0728ed22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ca3.ac908c8a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/us1.aabe3e92.jpg\";","module.exports = __webpack_public_path__ + \"static/media/us2.4732c8a8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/us3.2529288a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/w1.89c69cde.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/w2.0d5142bc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/w3.e4d365d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pr1.3fd044dc.png\";","module.exports = __webpack_public_path__ + \"static/media/pr2.7bca717f.png\";","module.exports = __webpack_public_path__ + \"static/media/pr3.8f95c346.png\";"],"sourceRoot":""}