{"ast":null,"code":"var patientIcon=\"https://img.icons8.com/ios/50/000000/consultation.png\";var doctorIcon=\"https://img.icons8.com/wired/64/000000/medical-doctor.png\";export var getMessages=function getMessages(chatPage){var p=chatPage.state.isDoctor?chatPage.state.patient.username:chatPage.state.name;var d=chatPage.state.isDoctor?chatPage.state.name:chatPage.state.doctor.username;var url=\"/messages/\".concat(p,\"/\").concat(d);fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){var messages=[];for(var i=0;i<json.length;i++){messages.push({\"text\":json[i].text,\"id\":(i+1).toString(),\"sender\":{\"name\":json[i].sender,\"uid\":json[i].sender===p?\"2\":\"1\",\"avatar\":json[i].sender===p?patientIcon:doctorIcon}});}chatPage.setState({messages:messages});}).catch(function(error){console.log(error);});};export var setPatientChatPage=function setPatientChatPage(doctor,app){var url1=\"/doctors/\".concat(doctor);fetch(url1).then(function(res){if(res.status===200){return res.json();}}).then(function(json){app.setState({contactDoctor:{doctor:json[0]}});var url=\"/patients\";var data={patient:app.state.currentPatient,doctor:json[0]};var request=new Request(url,{method:\"put\",body:JSON.stringify(data),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){app.setState({contactDoctor:{doctor:app.state.contactDoctor.doctor,isChatting:true}});}).catch(function(error){console.log(error);});}).catch(function(error){console.log(error);});};export var getPatientMessage=function getPatientMessage(pdc){var url=\"/messages/\".concat(pdc.state.username);fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){var patientMessages=[];var _loop=function _loop(){var message=json.pop();json=json.filter(function(m){return m.sender!==message.sender;});patientMessages.push(message);};while(json.length>0){_loop();}pdc.setState({patientMessages:patientMessages});}).catch(function(error){console.log(error);});};export var setDoctorChatPage=function setDoctorChatPage(patient,app){var url=\"/patients/\".concat(patient);fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);app.setState({contactPatient:{patient:json[0],isChatting:true}});}).catch(function(error){console.log(error);});};var messageReplied=function messageReplied(receiver,sender){var request=new Request(\"/messages/replied\",{method:\"post\",body:JSON.stringify({sender:sender,receiver:receiver}),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).catch(function(error){console.log(error);});};export var sendMessage=function sendMessage(message,cp){var sender=cp.state.name;var receiver=cp.state.isDoctor?cp.state.patient.username:cp.state.doctor.username;messageReplied(sender,receiver);var data={sender:sender,receiver:receiver,text:message,isReplied:false};var request=new Request(\"/messages\",{method:\"post\",body:JSON.stringify(data),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).catch(function(error){console.log(error);});};export var displayMessage=function displayMessage(message,chatPage){var avatar=chatPage.state.isDoctor?doctorIcon:patientIcon;var newMessage={\"text\":message,\"id\":chatPage.state.messages.length+1,\"sender\":{\"name\":chatPage.state.name,\"uid\":chatPage.state.user.uid,\"avatar\":avatar}};chatPage.state.messages.push(newMessage);};","map":{"version":3,"sources":["/Users/yehuang/309_group/client/src/actions/message.js"],"names":["patientIcon","doctorIcon","getMessages","chatPage","p","state","isDoctor","patient","username","name","d","doctor","url","fetch","then","res","status","json","messages","i","length","push","text","toString","sender","setState","catch","error","console","log","setPatientChatPage","app","url1","contactDoctor","data","currentPatient","request","Request","method","body","JSON","stringify","headers","Accept","isChatting","getPatientMessage","pdc","patientMessages","message","pop","filter","m","setDoctorChatPage","contactPatient","messageReplied","receiver","sendMessage","cp","isReplied","displayMessage","avatar","newMessage","user","uid"],"mappings":"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","sourcesContent":["const patientIcon = \"https://img.icons8.com/ios/50/000000/consultation.png\";\nconst doctorIcon = \"https://img.icons8.com/wired/64/000000/medical-doctor.png\";\n\nexport const getMessages = (chatPage) => {\n    const p = chatPage.state.isDoctor ? chatPage.state.patient.username : chatPage.state.name;\n    const d = chatPage.state.isDoctor ? chatPage.state.name : chatPage.state.doctor.username;\n    const url = `/messages/${p}/${d}`;\n    fetch(url)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            const messages = [];\n            for (let i = 0; i < json.length; i++) {\n                messages.push({\n                    \"text\": json[i].text,\n                    \"id\": (i + 1).toString(),\n                    \"sender\": {\n                        \"name\": json[i].sender,\n                        \"uid\": json[i].sender === p ? \"2\" : \"1\",\n                        \"avatar\": json[i].sender === p ? patientIcon : doctorIcon\n                    }\n                })\n            }\n            chatPage.setState({\n                messages: messages\n            })\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n};\n\nexport const setPatientChatPage = (doctor, app) => {\n    const url1 = `/doctors/${doctor}`;\n    fetch(url1).then((res) => {\n        if (res.status === 200) {\n            return res.json()\n        }\n    }).then((json) => {\n        app.setState({\n            contactDoctor: {\n                doctor: json[0],\n            }\n        });\n        const url = \"/patients\";\n        const data = {\n            patient: app.state.currentPatient,\n            doctor: json[0]\n        };\n        const request = new Request(url, {\n            method: \"put\",\n            body: JSON.stringify(data),\n            headers: {\n                Accept: \"application/json, text/plain, */*\",\n                \"Content-Type\": \"application/json\",\n            },\n        });\n        fetch(request).then((res) => {\n            app.setState({\n                contactDoctor: {\n                    doctor: app.state.contactDoctor.doctor,\n                    isChatting: true\n                }\n            });\n        }).catch((error) => {\n            console.log(error)\n        });\n    }).catch((error) => {\n        console.log(error);\n    });\n};\n\nexport const getPatientMessage = (pdc) => {\n    const url = `/messages/${pdc.state.username}`;\n    fetch(url)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            const patientMessages = [];\n            while (json.length > 0) {\n                let message = json.pop();\n                json = json.filter(m => m.sender !== message.sender);\n                patientMessages.push(message)\n            }\n            pdc.setState({\n                patientMessages: patientMessages\n            })\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n};\n\nexport const setDoctorChatPage = (patient, app) => {\n    const url = `/patients/${patient}`;\n    fetch(url).then((res) => {\n        if (res.status === 200) {\n            return res.json()\n        }\n    }).then((json) => {\n        console.log(json);\n        app.setState({\n            contactPatient: {\n                patient: json[0],\n                isChatting: true\n            }\n        })\n    }).catch(error => {\n        console.log(error)\n    })\n};\n\nconst messageReplied = (receiver, sender) => {\n    const request = new Request(\"/messages/replied\", {\n        method: \"post\",\n        body: JSON.stringify({\n            sender: sender,\n            receiver: receiver\n        }),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\",\n        },\n    });\n    fetch(request).catch(error => {\n        console.log(error)\n    })\n};\n\nexport const sendMessage = (message, cp) => {\n    const sender = cp.state.name;\n    const receiver = cp.state.isDoctor ? cp.state.patient.username : cp.state.doctor.username;\n    messageReplied(sender, receiver);\n    const data = {\n        sender: sender,\n        receiver: receiver,\n        text: message,\n        isReplied: false\n    };\n    const request = new Request(\"/messages\", {\n        method: \"post\",\n        body: JSON.stringify(data),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\",\n        },\n    });\n    fetch(request).catch(error => {\n        console.log(error)\n    })\n};\n\n\nexport const displayMessage = (message, chatPage) => {\n    const avatar = chatPage.state.isDoctor ? doctorIcon : patientIcon;\n    const newMessage = {\n        \"text\": message,\n        \"id\": chatPage.state.messages.length + 1,\n        \"sender\": {\n            \"name\": chatPage.state.name,\n            \"uid\": chatPage.state.user.uid,\n            \"avatar\": avatar,\n        },\n    };\n    chatPage.state.messages.push(newMessage);\n};\n"]},"metadata":{},"sourceType":"module"}