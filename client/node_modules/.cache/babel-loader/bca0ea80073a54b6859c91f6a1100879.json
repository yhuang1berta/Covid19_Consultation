{"ast":null,"code":"import _classCallCheck from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./styles.css';import Button from\"react-mdl\";import ReactTable from\"react-table-v6\";import\"react-table-v6/react-table.css\";import{TextField}from'@material-ui/core';import{getDoctors,getPatients}from\"../../actions/admin\";var UserTable=/*#__PURE__*/function(_React$Component){_inherits(UserTable,_React$Component);var _super=_createSuper(UserTable);function UserTable(props){var _this;_classCallCheck(this,UserTable);_this=_super.call(this,props);_this.state={patients:null,doctors:null,error:\"\"};_this.handleNameChange=_this.handleNameChange.bind(_assertThisInitialized(_this));_this.handlePasswordChange=_this.handlePasswordChange.bind(_assertThisInitialized(_this));_this.handleProvinceChange=_this.handleProvinceChange.bind(_assertThisInitialized(_this));_this.handleAgeChange=_this.handleAgeChange.bind(_assertThisInitialized(_this));return _this;}_createClass(UserTable,[{key:\"componentDidMount\",value:function componentDidMount(){getDoctors(this);getPatients(this);}},{key:\"render\",value:function render(){var _this2=this;// const material_list = this.state.users.map((user)=>(\n//     {account: user.type, \n//     name: <input type=\"text\" value={user.name} onChange={this.handleNameChange}/>, \n//     Id: user.userId, \n//     password: <input type=\"text\" value={user.password} onChange={this.handlePasswordChange} />,\n//     province: <input type=\"text\" value={user.province} onChange={this.handleProvinceChange} />\n//     }\n//   ))\nvar patient_columns=[{Header:'User ID',accessor:'_id'},{Header:'Username',accessor:'username',Cell:function Cell(props){return/*#__PURE__*/React.createElement(TextField,{onChange:_this2.handleNameChange,label:props.value,style:{width:\"80%\"}});}},{Header:\"Password\",accessor:\"password\",Cell:function Cell(props){return/*#__PURE__*/React.createElement(TextField,{onChange:_this2.handlePasswordChange,label:\"New Password...\",style:{width:\"80%\"}});}},{Header:\"Province\",accessor:\"province\",Cell:function Cell(props){return/*#__PURE__*/React.createElement(TextField,{onChange:_this2.handleProvinceChange,label:props.value,style:{width:\"80%\"}});}},{Header:\"Age\",accessor:\"age\",Cell:function Cell(props){return/*#__PURE__*/React.createElement(TextField,{onChange:_this2.handleAgeChange,label:props.value,style:{width:\"80%\"}});}},{Header:'Update',accessor:'_id',Cell:function Cell(props){return/*#__PURE__*/React.createElement(Button,{id:props.value,onClick:function onClick(){return console.log(\"clicked!\");}},\"Update\");}}];var doctor_columns=[{Header:'User ID',accessor:'_id'},{Header:'Username',accessor:'username',Cell:function Cell(props){return/*#__PURE__*/React.createElement(TextField,{onChange:_this2.handleNameChange,label:props.value,style:{width:\"80%\"}});}},{Header:\"Password\",accessor:\"password\",Cell:function Cell(props){return/*#__PURE__*/React.createElement(TextField,{onChange:_this2.handlePasswordChange,label:\"New Password...\",style:{width:\"80%\"}});}},{Header:\"Province\",accessor:\"location\",Cell:function Cell(props){return/*#__PURE__*/React.createElement(TextField,{onChange:_this2.handleProvinceChange,label:props.value,style:{width:\"80%\"}});}},{Header:\"Doctor Type\",accessor:\"doctorType\",Cell:function Cell(props){return/*#__PURE__*/React.createElement(TextField,{onChange:function onChange(){return console.log(\"typed\");},label:props.value,style:{width:\"80%\"}});}},{Header:'Update',accessor:'_id',Cell:function Cell(props){return/*#__PURE__*/React.createElement(Button,{id:props.value,onClick:function onClick(){return console.log(\"clicked!\");}},\"Update\");}}];return/*#__PURE__*/React.createElement(ReactTable,{className:\"-highlight\",columns:doctor_columns,data:this.state.doctors,noDataText:\"No User currently\"});// return (\n// <Table \n// className=\"table\"\n// sortable \n// shadow={1} \n// rows={material_list}\n// >\n//     <TableHeader\n//     name=\"account\"\n//     sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n//     tooltip=\"The type of account\">\n//         Account\n//     </TableHeader>\n//     <TableHeader\n//     name=\"Id\"\n//     sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n//     tooltip=\"The id of the users\"\n//     >\n//     User Id\n//     </TableHeader>\n//     <TableHeader\n//     name=\"name\"\n//     // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n//     tooltip=\"The name of the users\"\n//     >\n//     Name\n//     </TableHeader>\n//     <TableHeader\n//     name=\"password\"\n//     // sortFn={(a, b, isAsc) => (isAsc ? a.value : b.value).match(/(.*)/)[0].localeCompare((isAsc ? b.value : a.value).match(/(.*)/)[0])}\n//     tooltip=\"The password of the users\"\n//     >\n//     Password\n//     </TableHeader>\n//     <TableHeader\n//     name=\"province\"\n//     // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n//     tooltip=\"The password of the users\"\n//     >\n//     Province\n//     </TableHeader>\n// </Table>\n// )\n}},{key:\"handleNameChange\",value:function handleNameChange(event){var changed_id=event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText;var new_state=this.state.users.slice();for(var i=0;i<new_state.length;i++){if(new_state[i].userId===changed_id){new_state[i].name=event.target.value;break;}}this.setState({users:new_state});}},{key:\"handlePasswordChange\",value:function handlePasswordChange(event){console.log(event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText);var changed_id=event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText;var new_state=this.state.users.slice();for(var i=0;i<new_state.length;i++){if(new_state[i].userId===changed_id){new_state[i].password=event.target.value;break;}}this.setState({users:new_state});}},{key:\"handleProvinceChange\",value:function handleProvinceChange(event){var changed_id=event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText;var new_state=this.state.users.slice();for(var i=0;i<new_state.length;i++){if(new_state[i].userId===changed_id){new_state[i].province=event.target.value;break;}}this.setState({users:new_state});}},{key:\"handleAgeChange\",value:function handleAgeChange(event){var changed_id=event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText;var new_state=this.state.users.slice();for(var i=0;i<new_state.length;i++){if(new_state[i].userId===changed_id){new_state[i].province=event.target.value;break;}}this.setState({users:new_state});}}]);return UserTable;}(React.Component);export default UserTable;","map":{"version":3,"sources":["/Users/yehuang/309_group/client/src/components/AdminDashboard/UserTable.js"],"names":["React","Button","ReactTable","TextField","getDoctors","getPatients","UserTable","props","state","patients","doctors","error","handleNameChange","bind","handlePasswordChange","handleProvinceChange","handleAgeChange","patient_columns","Header","accessor","Cell","value","width","console","log","doctor_columns","event","changed_id","target","parentElement","querySelectorAll","innerText","new_state","users","slice","i","length","userId","name","setState","password","province","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './styles.css'\nimport Button from \"react-mdl\"\nimport ReactTable from \"react-table-v6\"\nimport \"react-table-v6/react-table.css\";\nimport { TextField } from '@material-ui/core';\nimport {getDoctors, getPatients} from \"../../actions/admin\"\n\nclass UserTable extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state= {\n            patients: null,\n            doctors: null,\n            error: \"\"\n        }\n        this.handleNameChange = this.handleNameChange.bind(this)\n        this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        this.handleProvinceChange = this.handleProvinceChange.bind(this)\n        this.handleAgeChange = this.handleAgeChange.bind(this)\n        \n    }\n\n    componentDidMount() {\n        getDoctors(this)\n        getPatients(this)\n    }\n\n    render() {\n\n\n        // const material_list = this.state.users.map((user)=>(\n        //     {account: user.type, \n        //     name: <input type=\"text\" value={user.name} onChange={this.handleNameChange}/>, \n        //     Id: user.userId, \n        //     password: <input type=\"text\" value={user.password} onChange={this.handlePasswordChange} />,\n        //     province: <input type=\"text\" value={user.province} onChange={this.handleProvinceChange} />\n        //     }\n        //   ))\n        const patient_columns = [\n            {\n                Header: 'User ID',\n                accessor: '_id'\n            },\n            {\n                Header: 'Username',\n                accessor: 'username',\n                Cell: (props) => (\n                    <TextField\n                    onChange={this.handleNameChange}\n                    label={props.value} \n                    style={{width: \"80%\"}}/>\n                )\n            },\n            {\n                Header: \"Password\",\n                accessor: \"password\",\n                Cell: (props) => (\n                    <TextField\n                    onChange={this.handlePasswordChange}\n                    label=\"New Password...\" \n                    style={{width: \"80%\"}}/>\n                )\n            },\n            {\n                Header: \"Province\",\n                accessor: \"province\",\n                Cell: (props) => (\n                    <TextField\n                    onChange={this.handleProvinceChange}\n                    label={props.value} \n                    style={{width: \"80%\"}}/>\n                )\n            },\n            {\n                Header: \"Age\",\n                accessor: \"age\",\n                Cell: (props) => (\n                        <TextField\n                        onChange={this.handleAgeChange}\n                        label={props.value} \n                        style={{width: \"80%\"}}/>\n                    )\n            },\n            {\n                Header: 'Update',\n                accessor: '_id',\n                Cell: (props) => (\n                    <Button id={props.value} onClick={() => console.log(\"clicked!\")}>\n                        Update\n                    </Button>)\n            }\n        ];\n\n        const doctor_columns = [\n            {\n                Header: 'User ID',\n                accessor: '_id'\n            },\n            {\n                Header: 'Username',\n                accessor: 'username',\n                Cell: (props) => (\n                    <TextField\n                    onChange={this.handleNameChange}\n                    label={props.value} \n                    style={{width: \"80%\"}}/>\n                )\n            },\n            {\n                Header: \"Password\",\n                accessor: \"password\",\n                Cell: (props) => (\n                    <TextField\n                    onChange={this.handlePasswordChange}\n                    label=\"New Password...\" \n                    style={{width: \"80%\"}}/>\n                )\n            },\n            {\n                Header: \"Province\",\n                accessor: \"location\",\n                Cell: (props) => (\n                    <TextField\n                    onChange={this.handleProvinceChange}\n                    label={props.value} \n                    style={{width: \"80%\"}}/>\n                )\n            },\n            {\n                Header: \"Doctor Type\",\n                accessor: \"doctorType\",\n                Cell: (props) => (\n                        <TextField\n                        onChange={() => console.log(\"typed\")}\n                        label={props.value} \n                        style={{width: \"80%\"}}/>\n                    )\n            },\n            {\n                Header: 'Update',\n                accessor: '_id',\n                Cell: (props) => (\n                    <Button id={props.value} onClick={() => console.log(\"clicked!\")}>\n                        Update\n                    </Button>)\n            }\n        ];\n        return (\n\n                <ReactTable\n                    className={`-highlight`}\n                    columns={doctor_columns}\n                    data={this.state.doctors}\n                    noDataText={`No User currently`}\n                >\n                </ReactTable>\n        );\n\n        // return (\n            \n            // <Table \n            // className=\"table\"\n            // sortable \n            // shadow={1} \n            // rows={material_list}\n            // >\n            //     <TableHeader\n            //     name=\"account\"\n            //     sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n            //     tooltip=\"The type of account\">\n            //         Account\n            //     </TableHeader>\n        \n            //     <TableHeader\n            //     name=\"Id\"\n            //     sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n            //     tooltip=\"The id of the users\"\n            //     >\n            //     User Id\n            //     </TableHeader>\n\n            //     <TableHeader\n            //     name=\"name\"\n            //     // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n            //     tooltip=\"The name of the users\"\n            //     >\n            //     Name\n            //     </TableHeader>\n                \n            //     <TableHeader\n            //     name=\"password\"\n            //     // sortFn={(a, b, isAsc) => (isAsc ? a.value : b.value).match(/(.*)/)[0].localeCompare((isAsc ? b.value : a.value).match(/(.*)/)[0])}\n            //     tooltip=\"The password of the users\"\n            //     >\n            //     Password\n            //     </TableHeader>\n\n            //     <TableHeader\n            //     name=\"province\"\n            //     // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n            //     tooltip=\"The password of the users\"\n            //     >\n            //     Province\n            //     </TableHeader>\n            // </Table>\n        // )\n    }\n\n    handleNameChange(event) {\n        const changed_id= event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText\n        const new_state= this.state.users.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i].userId === changed_id) {\n                new_state[i].name = event.target.value\n                break\n            }\n        }\n        this.setState({users: new_state})\n    }\n\n    handlePasswordChange(event) {\n        console.log(event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText)\n        const changed_id= event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText\n        const new_state= this.state.users.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i].userId === changed_id) {\n                new_state[i].password = event.target.value\n                break\n            }\n        }\n        this.setState({users: new_state})\n    }\n\n    handleProvinceChange(event) {\n        const changed_id= event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText\n        const new_state= this.state.users.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i].userId === changed_id) {\n                new_state[i].province = event.target.value\n                break\n            }\n        }\n        this.setState({users: new_state})\n    }\n\n    handleAgeChange(event) {\n        const changed_id= event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText\n        const new_state= this.state.users.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i].userId === changed_id) {\n                new_state[i].province = event.target.value\n                break\n            }\n        }\n        this.setState({users: new_state})\n    }\n\n}\n\nexport default UserTable"]},"metadata":{},"sourceType":"module"}