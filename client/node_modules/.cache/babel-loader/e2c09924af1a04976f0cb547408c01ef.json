{"ast":null,"code":"var _jsxFileName = \"/Users/yehuang/309_group/client/src/components/AdminDashboard/UserTable.js\";\nimport React from 'react';\nimport './styles.css';\nimport { Table, TableHeader } from 'react-mdl';\n\nclass UserTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: props.users\n    };\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleProvinceChange = this.handleProvinceChange.bind(this);\n  }\n\n  render() {\n    const material_list = this.state.users.map(user => ({\n      account: user.type,\n      name: /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: user.name,\n        onChange: this.handleNameChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 19\n        }\n      }),\n      Id: user.userId,\n      password: /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: user.password,\n        onChange: this.handlePasswordChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 23\n        }\n      }),\n      province: /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: user.province,\n        onChange: this.handleProvinceChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 23\n        }\n      })\n    }));\n    return /*#__PURE__*/React.createElement(Table, {\n      className: \"table\",\n      sortable: true,\n      shadow: 1,\n      rows: material_list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableHeader, {\n      name: \"account\",\n      sortFn: (a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0]),\n      tooltip: \"The type of account\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"Account\"), /*#__PURE__*/React.createElement(TableHeader, {\n      name: \"Id\",\n      sortFn: (a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0]),\n      tooltip: \"The id of the users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \"User Id\"), /*#__PURE__*/React.createElement(TableHeader, {\n      name: \"name\" // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n      ,\n      tooltip: \"The name of the users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(TableHeader, {\n      name: \"password\" // sortFn={(a, b, isAsc) => (isAsc ? a.value : b.value).match(/(.*)/)[0].localeCompare((isAsc ? b.value : a.value).match(/(.*)/)[0])}\n      ,\n      tooltip: \"The password of the users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(TableHeader, {\n      name: \"province\" // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n      ,\n      tooltip: \"The password of the users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Province\"));\n  }\n\n  handleNameChange(event) {\n    const changed_id = event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText;\n    const new_state = this.state.users.slice();\n\n    for (let i = 0; i < new_state.length; i++) {\n      if (new_state[i].userId === changed_id) {\n        new_state[i].name = event.target.value;\n        break;\n      }\n    }\n\n    this.setState({\n      users: new_state\n    });\n  }\n\n  handlePasswordChange(event) {\n    console.log(event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText);\n    const changed_id = event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText;\n    const new_state = this.state.users.slice();\n\n    for (let i = 0; i < new_state.length; i++) {\n      if (new_state[i].userId === changed_id) {\n        new_state[i].password = event.target.value;\n        break;\n      }\n    }\n\n    this.setState({\n      users: new_state\n    });\n  }\n\n  handleProvinceChange(event) {\n    const changed_id = event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText;\n    const new_state = this.state.users.slice();\n\n    for (let i = 0; i < new_state.length; i++) {\n      if (new_state[i].userId === changed_id) {\n        new_state[i].province = event.target.value;\n        break;\n      }\n    }\n\n    this.setState({\n      users: new_state\n    });\n  }\n\n}\n\nexport default UserTable;","map":{"version":3,"sources":["/Users/yehuang/309_group/client/src/components/AdminDashboard/UserTable.js"],"names":["React","Table","TableHeader","UserTable","Component","constructor","props","state","users","handleNameChange","bind","handlePasswordChange","handleProvinceChange","render","material_list","map","user","account","type","name","Id","userId","password","province","a","b","isAsc","match","localeCompare","event","changed_id","target","parentElement","querySelectorAll","innerText","new_state","slice","i","length","value","setState","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './styles.css'\nimport {Table, TableHeader} from 'react-mdl'\n\nclass UserTable extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state= {\n            users: props.users\n        }\n        this.handleNameChange = this.handleNameChange.bind(this)\n        this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        this.handleProvinceChange = this.handleProvinceChange.bind(this)\n    }\n\n    render() {\n        const material_list = this.state.users.map((user)=>(\n            {account: user.type, \n            name: <input type=\"text\" value={user.name} onChange={this.handleNameChange}/>, \n            Id: user.userId, \n            password: <input type=\"text\" value={user.password} onChange={this.handlePasswordChange} />,\n            province: <input type=\"text\" value={user.province} onChange={this.handleProvinceChange} />\n            }\n          ))\n\n        return (\n            <Table \n            className=\"table\"\n            sortable \n            shadow={1} \n            rows={material_list}\n            >\n                <TableHeader\n                name=\"account\"\n                sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                tooltip=\"The type of account\">\n                    Account\n                </TableHeader>\n        \n                <TableHeader\n                name=\"Id\"\n                sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                tooltip=\"The id of the users\"\n                >\n                User Id\n                </TableHeader>\n\n                <TableHeader\n                name=\"name\"\n                // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                tooltip=\"The name of the users\"\n                >\n                Name\n                </TableHeader>\n                \n                <TableHeader\n                name=\"password\"\n                // sortFn={(a, b, isAsc) => (isAsc ? a.value : b.value).match(/(.*)/)[0].localeCompare((isAsc ? b.value : a.value).match(/(.*)/)[0])}\n                tooltip=\"The password of the users\"\n                >\n                Password\n                </TableHeader>\n\n                <TableHeader\n                name=\"province\"\n                // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                tooltip=\"The password of the users\"\n                >\n                Province\n                </TableHeader>\n            </Table>\n        )\n    }\n\n    handleNameChange(event) {\n        const changed_id= event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText\n        const new_state= this.state.users.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i].userId === changed_id) {\n                new_state[i].name = event.target.value\n                break\n            }\n        }\n        this.setState({users: new_state})\n    }\n\n    handlePasswordChange(event) {\n        console.log(event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText)\n        const changed_id= event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText\n        const new_state= this.state.users.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i].userId === changed_id) {\n                new_state[i].password = event.target.value\n                break\n            }\n        }\n        this.setState({users: new_state})\n    }\n\n    handleProvinceChange(event) {\n        const changed_id= event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText\n        const new_state= this.state.users.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i].userId === changed_id) {\n                new_state[i].province = event.target.value\n                break\n            }\n        }\n        this.setState({users: new_state})\n    }\n\n\n\n}\n\nexport default UserTable"]},"metadata":{},"sourceType":"module"}