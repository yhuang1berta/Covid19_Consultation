{"ast":null,"code":"export const readDoctorCookie = app => {\n  const url = \"/doctors/check-session\";\n  fetch(url).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    }\n  }).then(json => {\n    if (json && json.currentDoctor) {\n      app.setState({\n        currentDoctor: json.currentDoctor\n      });\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const updateLoginForm = (loginComp, field) => {\n  const value = field.value;\n  const name = field.name;\n  loginComp.setState({\n    [name]: value\n  });\n};\nexport const login = (loginComp, app) => {\n  const request = new Request(\"/doctors/login\", {\n    method: \"post\",\n    body: JSON.stringify(loginComp.state),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  fetch(request).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    }\n  }).then(json => {\n    console.log(json);\n\n    if (json.currentDoctor !== undefined) {\n      app.setState({\n        currentDoctor: json.currentDoctor\n      });\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const logout = app => {\n  const url = \"/logout\";\n  fetch(url).then(res => {\n    app.setState({\n      currentDoctor: null,\n      message: {\n        type: \"\",\n        body: \"\"\n      }\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getDoctors = ppc => {\n  const url = \"/doctors\";\n  fetch(url).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    }\n  }).then(json => {\n    console.log(json);\n    ppc.setState({\n      doctorInfo: json\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["/Users/yehuang/309_group/client/src/actions/doctor.js"],"names":["readDoctorCookie","app","url","fetch","then","res","status","json","currentDoctor","setState","catch","error","console","log","updateLoginForm","loginComp","field","value","name","login","request","Request","method","body","JSON","stringify","state","headers","Accept","undefined","logout","message","type","getDoctors","ppc","doctorInfo"],"mappings":"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","sourcesContent":["export const readDoctorCookie = (app) => {\n  const url = \"/doctors/check-session\";\n\n  fetch(url)\n    .then((res) => {\n      if (res.status === 200) {\n        return res.json();\n      }\n    })\n    .then((json) => {\n      if (json && json.currentDoctor) {\n        app.setState({ currentDoctor: json.currentDoctor });\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nexport const updateLoginForm = (loginComp, field) => {\n  const value = field.value;\n  const name = field.name;\n\n  loginComp.setState({\n    [name]: value,\n  });\n};\n\nexport const login = (loginComp, app) => {\n  const request = new Request(\"/doctors/login\", {\n    method: \"post\",\n    body: JSON.stringify(loginComp.state),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  fetch(request)\n    .then((res) => {\n      if (res.status === 200) {\n        return res.json();\n      }\n    })\n    .then((json) => {\n      console.log(json);\n      if (json.currentDoctor !== undefined) {\n        app.setState({ currentDoctor: json.currentDoctor });\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nexport const logout = (app) => {\n  const url = \"/logout\";\n\n  fetch(url)\n    .then((res) => {\n      app.setState({\n        currentDoctor: null,\n        message: { type: \"\", body: \"\" },\n      });\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nexport const getDoctors = (ppc) => {\n  const url = \"/doctors\";\n  fetch(url)\n      .then((res) => {\n        if (res.status === 200) {\n          return res.json();\n        }\n      })\n      .then((json) => {\n        console.log(json);\n        ppc.setState({\n          doctorInfo: json\n        })\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n}\n"]},"metadata":{},"sourceType":"module"}