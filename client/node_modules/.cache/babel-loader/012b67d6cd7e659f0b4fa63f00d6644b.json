{"ast":null,"code":"import _defineProperty from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";export var readAdminCookie=function readAdminCookie(app){var url=\"/admins/check-session\";fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){if(json&&json.currentAdmin){app.setState({currentAdmin:json.currentAdmin});}}).catch(function(error){console.log(error);});};export var updateLoginForm=function updateLoginForm(loginComp,field){var value=field.value;var name=field.name;loginComp.setState(_defineProperty({},name,value));};export var login=function login(loginComp,app){var request=new Request(\"/admins/login\",{method:\"post\",body:JSON.stringify(loginComp.state),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}else{console.log(res.status);throw new Error();}}).then(function(json){console.log(json);if(json.currentAdmin!==null&&json.currentAdmin.username!==undefined){app.setState({currentAdmin:json.currentAdmin});}}).catch(function(error){console.log(error);loginComp.setState({wrong:true});});};export var logout=function logout(app){var url=\"/logout\";fetch(url).then(function(res){app.setState({currentAdmin:null,message:{type:\"\",body:\"\"}});}).catch(function(error){console.log(error);});};export var getDoctors=function getDoctors(app){var url=\"/doctors\";fetch(url).then(function(res){if(res.status===200){return res.json();}else{throw new Error();}}).then(function(json){if(json!==null&&json!==undefined){app.setState({doctors:json});console.log(json);}else{app.setState({error:\"Cannot retrieve Doctor accounts information!\"});}}).catch(function(e){app.setState({error:\"Cannot retrieve Doctor accounts information!\"});});};export var getPatients=function getPatients(app){var url=\"/patients\";fetch(url).then(function(res){if(res.status===200){return res.json();}else{throw new Error();}}).then(function(json){console.log(\"res tatus === 200\");if(json!==null&&json!==undefined){app.setState({patients:json});console.log(json);}else{app.setState({error:\"Cannot retrieve patient accounts information!\"});}}).catch(function(e){app.setState({error:\"Cannot retrieve patient accounts information!\"});});};","map":{"version":3,"sources":["/Users/yehuang/309_group/client/src/actions/admin.js"],"names":["readAdminCookie","app","url","fetch","then","res","status","json","currentAdmin","setState","catch","error","console","log","updateLoginForm","loginComp","field","value","name","login","request","Request","method","body","JSON","stringify","state","headers","Accept","Error","username","undefined","wrong","logout","message","type","getDoctors","doctors","e","getPatients","patients"],"mappings":"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","sourcesContent":["export const readAdminCookie = (app) => {\n  const url = \"/admins/check-session\";\n\n  fetch(url)\n    .then((res) => {\n      if (res.status === 200) {\n        return res.json();\n      }\n    })\n    .then((json) => {\n      if (json && json.currentAdmin) {\n        app.setState({ currentAdmin: json.currentAdmin });\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nexport const updateLoginForm = (loginComp, field) => {\n  const value = field.value;\n  const name = field.name;\n\n  loginComp.setState({\n    [name]: value,\n  });\n};\n\nexport const login = (loginComp, app) => {\n  const request = new Request(\"/admins/login\", {\n    method: \"post\",\n    body: JSON.stringify(loginComp.state),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  fetch(request)\n    .then((res) => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        console.log(res.status)\n        throw new Error()\n      }\n    })\n    .then((json) => {\n      console.log(json);\n      if (json.currentAdmin !== null && json.currentAdmin.username !== undefined) {\n        app.setState({ currentAdmin: json.currentAdmin });\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n      loginComp.setState({wrong: true})\n    });\n};\n\nexport const logout = (app) => {\n  const url = \"/logout\";\n\n  fetch(url)\n    .then((res) => {\n      app.setState({\n        currentAdmin: null,\n        message: { type: \"\", body: \"\" },\n      });\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nexport const getDoctors = (app) => {\n  const url = \"/doctors\"\n\n  fetch(url)\n  .then((res) => {\n    if (res.status === 200) {\n      return res.json()\n    } else {\n      throw new Error()\n    }\n  }).then((json) => {\n    if (json !== null && json !== undefined) {\n      app.setState({doctors: json})\n      console.log(json)\n    } else {\n      app.setState({error: \"Cannot retrieve Doctor accounts information!\"})\n    }\n  }).catch((e) => {\n    app.setState({error: \"Cannot retrieve Doctor accounts information!\"})\n  })\n}\n\nexport const getPatients = (app) => {\n  const url = \"/patients\"\n\n  fetch(url)\n  .then((res) => {\n    if (res.status === 200) {\n      return res.json()\n    } else {\n      throw new Error()\n    }\n  }).then((json) => {\n    console.log(\"res tatus === 200\")\n    if (json !== null && json !== undefined) {\n      app.setState({patients: json})\n      console.log(json)\n    } else {\n      app.setState({error: \"Cannot retrieve patient accounts information!\"})\n    }\n  }).catch((e) => {\n    app.setState({error: \"Cannot retrieve patient accounts information!\"})\n  })\n}"]},"metadata":{},"sourceType":"module"}