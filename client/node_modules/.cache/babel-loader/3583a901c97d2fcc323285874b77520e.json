{"ast":null,"code":"import _defineProperty from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";export var readPatientCookie=function readPatientCookie(app){var url=\"/patients/check-session\";fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){if(json&&json.currentPatient){app.setState({currentPatient:json});}}).catch(function(error){console.log(error);});};export var updateLoginForm=function updateLoginForm(loginComp,field){var value=field.value;var name=field.name;loginComp.setState(_defineProperty({},name,value));};export var login=function login(loginComp,app){var request=new Request(\"/patients/login\",{method:\"post\",body:JSON.stringify(loginComp.state),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);console.log(json.currentPatient);if(json.currentPatient!==null&&json.currentPatient.username!==undefined){console.log(\"entered\");app.setState({currentPatient:json.currentPatient});console.log(app.state);}}).catch(function(error){console.log(error);});};export var register=function register(registerComp,app){var url=\"/patients\";var patient=registerComp.state;var request=new Request(url,{method:\"post\",body:JSON.stringify(patient),headers:{Accept:\"application/json, text/plain, */*\",\"Content-type\":\"application/json\"}});// console.log(JSON.stringify(patient));\nfetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){if(!app.state.currentPatient&&app.state.currentPatient!==undefined){app.setState({currentPatient:json});}console.log(app.state);}).catch(function(e){// console.log(registerComp);\nconsole.log(\"registration error\");registerComp.error=\"Patient account cannot be created at the moment!\";registerComp.setState(registerComp.state);});};export var logout=function logout(app){var url=\"/logout\";fetch(url).then(function(res){app.setState({currentPatient:null,message:{type:\"\",body:\"\"}});}).catch(function(error){console.log(error);});};","map":{"version":3,"sources":["/Users/yehuang/309_group/client/src/actions/patients.js"],"names":["readPatientCookie","app","url","fetch","then","res","status","json","currentPatient","setState","catch","error","console","log","updateLoginForm","loginComp","field","value","name","login","request","Request","method","body","JSON","stringify","state","headers","Accept","username","undefined","register","registerComp","patient","e","logout","message","type"],"mappings":"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","sourcesContent":["export const readPatientCookie = (app) => {\n  const url = \"/patients/check-session\";\n\n  fetch(url)\n    .then((res) => {\n      if (res.status === 200) {\n        return res.json();\n      }\n    })\n    .then((json) => {\n      if (json && json.currentPatient) {\n        app.setState({ currentPatient: json });\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nexport const updateLoginForm = (loginComp, field) => {\n  const value = field.value;\n  const name = field.name;\n\n  loginComp.setState({\n    [name]: value,\n  });\n};\n\nexport const login = (loginComp, app) => {\n  const request = new Request(\"/patients/login\", {\n    method: \"post\",\n    body: JSON.stringify(loginComp.state),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  fetch(request)\n    .then((res) => {\n      if (res.status === 200) {\n        return res.json();\n      }\n    })\n    .then((json) => {\n      console.log(json);\n      console.log(json.currentPatient)\n      if (json.currentPatient !== null && json.currentPatient.username !== undefined) {\n        console.log(\"entered\")\n        app.setState({ currentPatient: json.currentPatient });\n        console.log(app.state)\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nexport const register = (registerComp, app) => {\n  const url = \"/patients\";\n\n  const patient = registerComp.state;\n\n  const request = new Request(url, {\n    method: \"post\",\n    body: JSON.stringify(patient),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-type\": \"application/json\",\n    },\n  });\n\n  // console.log(JSON.stringify(patient));\n\n  fetch(request)\n    .then(function (res) {\n      if (res.status === 200) {\n        return res.json()\n      }\n    })\n    .then((json) => {\n      if (!app.state.currentPatient && app.state.currentPatient !== undefined) {\n        app.setState({ currentPatient: json})\n      }\n      console.log(app.state)\n    })\n    .catch((e) => {\n      // console.log(registerComp);\n      console.log(\"registration error\")\n      registerComp.error = \"Patient account cannot be created at the moment!\"\n      registerComp.setState(registerComp.state)\n    });\n};\n\nexport const logout = (app) => {\n  const url = \"/logout\";\n\n  fetch(url)\n    .then((res) => {\n      app.setState({\n        currentPatient: null,\n        message: { type: \"\", body: \"\" },\n      });\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}