{"ast":null,"code":"import _defineProperty from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";export var readPatientCookie=function readPatientCookie(app){var url=\"/patients/check-session\";fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){if(json&&json.currentPatient){app.setState({currentPatient:json});}}).catch(function(error){console.log(error);});};export var updateLoginForm=function updateLoginForm(loginComp,field){var value=field.value;var name=field.name;loginComp.setState(_defineProperty({},name,value));};export var login=function login(loginComp,app){var request=new Request(\"/patients/login\",{method:\"post\",body:JSON.stringify(loginComp.state),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);console.log(json.currentPatient);if(json.currentPatient!==null&&json.currentPatient.username!==undefined){console.log(\"entered\");app.setState({currentPatient:json.currentPatient});console.log(app.state);}}).catch(function(error){console.log(error);});};export var register=function register(registerComp,app){var url=\"/patients\";var patient=registerComp.state;var request=new Request(url,{method:\"post\",body:JSON.stringify(patient),headers:{Accept:\"application/json, text/plain, */*\",\"Content-type\":\"application/json\"}});// console.log(JSON.stringify(patient));\nfetch(request).then(function(res){// console.log(\"first then: \")\n// console.log(app.state)\nif(res.status===200){return res.json();}else{throw new Error();}}).then(function(json){if(!app.state.currentPatient&&app.state.currentPatient!==undefined){app.setState({currentPatient:json});}}).catch(function(e){registerComp.error=\"Patient account cannot be created at the moment!\";registerComp.setState(registerComp.state);});};export var logout=function logout(app){var url=\"/logout\";fetch(url).then(function(res){app.setState({currentPatient:null,message:{type:\"\",body:\"\"}});}).catch(function(error){console.log(error);});};","map":{"version":3,"sources":["/Users/yehuang/309_group/client/src/actions/patients.js"],"names":["readPatientCookie","app","url","fetch","then","res","status","json","currentPatient","setState","catch","error","console","log","updateLoginForm","loginComp","field","value","name","login","request","Request","method","body","JSON","stringify","state","headers","Accept","username","undefined","register","registerComp","patient","Error","e","logout","message","type"],"mappings":"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","sourcesContent":["export const readPatientCookie = (app) => {\n    const url = \"/patients/check-session\";\n    fetch(url)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            if (json && json.currentPatient) {\n                app.setState({currentPatient: json});\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n};\n\nexport const updateLoginForm = (loginComp, field) => {\n    const value = field.value;\n    const name = field.name;\n\n    loginComp.setState({\n        [name]: value,\n    });\n};\n\n\nexport const login = (loginComp, app) => {\n    const request = new Request(\"/patients/login\", {\n        method: \"post\",\n        body: JSON.stringify(loginComp.state),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\",\n        },\n    });\n\n    fetch(request)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            console.log(json);\n            console.log(json.currentPatient)\n            if (json.currentPatient !== null && json.currentPatient.username !== undefined) {\n                console.log(\"entered\")\n                app.setState({currentPatient: json.currentPatient});\n                console.log(app.state)\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n};\n\n\nexport const register = (registerComp, app) => {\n    const url = \"/patients\";\n\n    const patient = registerComp.state;\n\n    const request = new Request(url, {\n        method: \"post\",\n        body: JSON.stringify(patient),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-type\": \"application/json\",\n        },\n    });\n\n    // console.log(JSON.stringify(patient));\n\n    fetch(request)\n        .then(function (res) {\n            // console.log(\"first then: \")\n            // console.log(app.state)\n            if (res.status === 200) {\n                return res.json()\n            } else {\n                throw new Error()\n            }\n        })\n        .then((json) => {\n            if (!app.state.currentPatient && app.state.currentPatient !== undefined) {\n                app.setState({currentPatient: json})\n            }\n        })\n        .catch((e) => {\n            registerComp.error = \"Patient account cannot be created at the moment!\"\n            registerComp.setState(registerComp.state)\n        })\n};\nexport const logout = (app) => {\n    const url = \"/logout\";\n    fetch(url)\n        .then((res) => {\n            app.setState({\n                currentPatient: null,\n                message: {type: \"\", body: \"\"},\n            });\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n};\n"]},"metadata":{},"sourceType":"module"}