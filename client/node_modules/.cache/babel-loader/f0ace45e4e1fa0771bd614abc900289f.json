{"ast":null,"code":"var patientIcon=\"https://img.icons8.com/ios/50/000000/consultation.png\";var doctorIcon=\"https://img.icons8.com/wired/64/000000/medical-doctor.png\";export var getMessages=function getMessages(chatPage){var p=chatPage.state.isDoctor?chatPage.state.patient.username:chatPage.state.name;var d=chatPage.state.isDoctor?chatPage.state.name:chatPage.state.doctor.username;var url=\"/messages/\".concat(p,\"/\").concat(d);fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){var messages=[];for(var i=0;i<json.length;i++){messages.push({\"text\":json[i].text,\"id\":(i+1).toString(),\"sender\":{\"name\":json[i].sender,\"uid\":json[i].sender===p?\"2\":\"1\",\"avatar\":json[i].sender===p?patientIcon:doctorIcon}});}chatPage.setState({messages:messages});}).catch(function(error){console.log(error);});};export var setPatientChatPage=function setPatientChatPage(doctor,app){var url1=\"/doctors/\".concat(doctor);fetch(url1).then(function(res){if(res.status===200){return res.json();}}).then(function(json){app.setState({contactDoctor:{doctor:json[0]}});var url=\"/patients/update\";var request=new Request(url,{method:\"post\",body:JSON.stringify(json),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){app.setState({contactDoctor:{doctor:app.state.contactDoctor.doctor,isChatting:true}});}).catch(function(error){console.log(error);});}).catch(function(error){console.log(error);});};export var getPatientMessage=function getPatientMessage(pdc){var url=\"/messages/\".concat(pdc.state.username);fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){var patientMessages=[];var _loop=function _loop(){var message=json.pop();json=json.filter(function(m){return m.sender!==message.sender;});patientMessages.push(message);};while(json.length>0){_loop();}pdc.setState({patientMessages:patientMessages});}).catch(function(error){console.log(error);});};export var setDoctorChatPage=function setDoctorChatPage(patient,app){var url=\"/patients/\".concat(patient);fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){app.setState({contactPatient:{patient:json[0],isChatting:true}});}).catch(function(error){console.log(error);});};var messageReplied=function messageReplied(sender,receiver){var request=new Request(\"/messages\",{method:\"post\",body:JSON.stringify({sender:sender,receiver:receiver}),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).catch(function(error){console.log(error);});};export var sendMessage=function sendMessage(message,cp){var sender=cp.state.name;var receiver=cp.state.isDoctor?cp.state.patient.username:cp.state.doctor.username;// messageReplied(sender, receiver);\nvar data={sender:sender,receiver:receiver,text:message,isReplied:false};var request=new Request(\"/messages\",{method:\"post\",body:JSON.stringify(data),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).catch(function(error){console.log(error);});};","map":{"version":3,"sources":["/Users/yehuang/309_group/client/src/actions/message.js"],"names":["patientIcon","doctorIcon","getMessages","chatPage","p","state","isDoctor","patient","username","name","d","doctor","url","fetch","then","res","status","json","messages","i","length","push","text","toString","sender","setState","catch","error","console","log","setPatientChatPage","app","url1","contactDoctor","request","Request","method","body","JSON","stringify","headers","Accept","isChatting","getPatientMessage","pdc","patientMessages","message","pop","filter","m","setDoctorChatPage","contactPatient","messageReplied","receiver","sendMessage","cp","data","isReplied"],"mappings":"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","sourcesContent":["const patientIcon = \"https://img.icons8.com/ios/50/000000/consultation.png\";\nconst doctorIcon = \"https://img.icons8.com/wired/64/000000/medical-doctor.png\";\n\nexport const getMessages = (chatPage) => {\n    const p = chatPage.state.isDoctor ? chatPage.state.patient.username : chatPage.state.name;\n    const d = chatPage.state.isDoctor ? chatPage.state.name : chatPage.state.doctor.username;\n    const url = `/messages/${p}/${d}`;\n    fetch(url)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            const messages = [];\n            for (let i = 0; i < json.length; i++) {\n                messages.push({\n                    \"text\": json[i].text,\n                    \"id\": (i + 1).toString(),\n                    \"sender\": {\n                        \"name\": json[i].sender,\n                        \"uid\": json[i].sender === p ? \"2\" : \"1\",\n                        \"avatar\": json[i].sender === p ? patientIcon : doctorIcon\n                    }\n                })\n            }\n            chatPage.setState({\n                messages: messages\n            })\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n};\n\nexport const setPatientChatPage = (doctor, app) => {\n    const url1 = `/doctors/${doctor}`;\n    fetch(url1).then((res) => {\n        if (res.status === 200) {\n            return res.json()\n        }\n    }).then((json) => {\n        app.setState({\n            contactDoctor: {\n                doctor: json[0],\n            }\n        });\n        const url = \"/patients/update\";\n        const request = new Request(url, {\n            method: \"post\",\n            body: JSON.stringify(json),\n            headers: {\n                Accept: \"application/json, text/plain, */*\",\n                \"Content-Type\": \"application/json\",\n            },\n        });\n        fetch(request).then((res) => {\n            app.setState({\n                contactDoctor: {\n                    doctor: app.state.contactDoctor.doctor,\n                    isChatting: true\n                }\n            });\n        }).catch((error) => {\n            console.log(error)\n        });\n    }).catch((error) => {\n        console.log(error);\n    });\n};\n\nexport const getPatientMessage = (pdc) => {\n    const url = `/messages/${pdc.state.username}`;\n    fetch(url)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            const patientMessages = [];\n            while (json.length > 0) {\n                let message = json.pop();\n                json = json.filter(m => m.sender !== message.sender);\n                patientMessages.push(message)\n            }\n            pdc.setState({\n                patientMessages: patientMessages\n            })\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n};\n\nexport const setDoctorChatPage = (patient, app) => {\n    const url = `/patients/${patient}`;\n    fetch(url).then((res) => {\n        if (res.status === 200) {\n            return res.json()\n        }\n    }).then((json) => {\n        app.setState({\n            contactPatient: {\n                patient: json[0],\n                isChatting: true\n            }\n        })\n    }).catch(error => {\n        console.log(error)\n    })\n};\n\nconst messageReplied = (sender, receiver) => {\n    const request = new Request(\"/messages\", {\n        method: \"post\",\n        body: JSON.stringify({\n            sender: sender,\n            receiver: receiver\n        }),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\",\n        },\n    });\n    fetch(request).catch(error => {\n        console.log(error)\n    })\n};\n\nexport const sendMessage = (message, cp) => {\n    const sender = cp.state.name;\n    const receiver = cp.state.isDoctor ? cp.state.patient.username : cp.state.doctor.username;\n    // messageReplied(sender, receiver);\n    const data = {\n        sender: sender,\n        receiver: receiver,\n        text: message,\n        isReplied: false\n    };\n    const request = new Request(\"/messages\", {\n        method: \"post\",\n        body: JSON.stringify(data),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\",\n        },\n    });\n    fetch(request).catch(error => {\n        console.log(error)\n    })\n};\n\n"]},"metadata":{},"sourceType":"module"}