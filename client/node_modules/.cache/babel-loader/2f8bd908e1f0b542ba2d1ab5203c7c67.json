{"ast":null,"code":"import _classCallCheck from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Container}from\"reactstrap\";import{DataTable,TableHeader,Button}from\"react-mdl\";import{getPatients,AddToWatchlist,getWatchlist,removePatientFromWatchlist}from\"../../../actions/doctor\";import\"./styles.css\";var SearchBar=/*#__PURE__*/function(_React$Component){_inherits(SearchBar,_React$Component);var _super=_createSuper(SearchBar);function SearchBar(props){var _this;_classCallCheck(this,SearchBar);_this=_super.call(this,props);_this.handleChange=function(event){_this.setState({keyword:event.target.value});};_this.state={keyword:\"\",found:[],patients:[],watchlist:null,doctor:props.app.state.currentDoctor,error:\"\",success:\"\"};_this.handleSearchClick=_this.handleSearchClick.bind(_assertThisInitialized(_this));return _this;}_createClass(SearchBar,[{key:\"showSearch\",value:function showSearch(found_patients){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"br\",null),\" \",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(DataTable,{className:\"dtable\",shadow:0,rows:found_patients},/*#__PURE__*/React.createElement(TableHeader,{name:\"Id\",tooltip:\"The id of patients\"},\"Id\"),/*#__PURE__*/React.createElement(TableHeader,{name:\"name\",tooltip:\"The name of patients\"},\"Name\"),/*#__PURE__*/React.createElement(TableHeader,{name:\"province\",tooltip:\"The province of patient(s)\"},\"Province\"),/*#__PURE__*/React.createElement(TableHeader,{name:\"age\",tooltip:\"The age of patient(s)\"},\"Age\"),/*#__PURE__*/React.createElement(TableHeader,{name:\"province\",tooltip:\"The gender of patient(s)\"},\"Gender\"),/*#__PURE__*/React.createElement(TableHeader,{name:\"add\"},\"Add\")));}// update = (new_list) => {\n//   this.setState({watchlist: new_list});\n//   console.log(new_list)\n// };\n},{key:\"showWatchlist\",value:function showWatchlist(watchlist){var _this2=this;console.log(\"watchlist in showWatchlist\");console.log(watchlist);if(!watchlist){return/*#__PURE__*/React.createElement(\"p\",null,\"Watchlist Loading!\");}else if(watchlist.length<1){return/*#__PURE__*/React.createElement(\"p\",null,\"No Patient on watchlist at the moment!\");}else{return watchlist.map(function(patient){return/*#__PURE__*/React.createElement(\"div\",{className:\"Patient\"},/*#__PURE__*/React.createElement(\"br\",null),\" \",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"h3\",null,\"UserName :\",patient.username),/*#__PURE__*/React.createElement(\"p\",null,\"User Id :\",patient._id),/*#__PURE__*/React.createElement(\"p\",null,\"Province :\",patient.province),/*#__PURE__*/React.createElement(Button,{raised:true,colored:true,ripple:true,onClick:function onClick(event){removePatientFromWatchlist(_this2,patient);}},\"KICK OUT\"),\" \",/*#__PURE__*/React.createElement(\"br\",null),\" \",/*#__PURE__*/React.createElement(\"br\",null));});}}},{key:\"handleSearchClick\",value:function handleSearchClick(){// check if name or id matches\ngetPatients(this);}},{key:\"componentWillMount\",value:function componentWillMount(){getWatchlist(this,this.props.app.state.currentDoctor._id);}},{key:\"render\",value:function render(){var _this3=this;var app=this.props.app;var found_patients=[];if(this.state.keyword.length<1){found_patients=this.state.patients.map(function(user){return{name:\"\".concat(user.username),Id:\"\".concat(user._id),province:\"\".concat(user.province),age:\"\".concat(user.age),add:/*#__PURE__*/React.createElement(Button,{raised:true,colored:true,ripple:true,onClick:function onClick(event){return AddToWatchlist(_this3,event.target,app.state.currentDoctor,user);}},\"Add\")};});}else{found_patients=this.state.patients.filter(function(patient){return patient._id.includes(_this3.state.keyword)||patient.username.includes(_this3.state.keyword);});found_patients=found_patients.map(function(user){return{name:\"\".concat(user.username),Id:\"\".concat(user._id),province:\"\".concat(user.province),age:\"\".concat(user.age),add:/*#__PURE__*/React.createElement(Button,{raised:true,colored:true,ripple:true,onClick:function onClick(event){return AddToWatchlist(_this3,event.target,app.state.currentDoctor,user);}},\"Add\")};});}return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"div\",{className:\"SearchBar\"},/*#__PURE__*/React.createElement(\"label\",null,\"Search Patient:\",/*#__PURE__*/React.createElement(\"input\",{className:\"input\",type:\"text\",placeholder:\"Search a patient by username\",value:this.state.keyword,onChange:this.handleChange}),/*#__PURE__*/React.createElement(Button,{raised:true,colored:true,ripple:true,className:\"button\",onClick:function onClick(){return _this3.handleSearchClick();}},\"Search\"),this.showSearch(found_patients))),/*#__PURE__*/React.createElement(\"h3\",{className:\"error\"},this.state.error),/*#__PURE__*/React.createElement(\"h3\",{className:\"success\"},this.state.success),/*#__PURE__*/React.createElement(\"h3\",null,\"Watchlist:\"),this.showWatchlist(this.state.watchlist));}}]);return SearchBar;}(React.Component);export default SearchBar;","map":{"version":3,"sources":["/Users/yehuang/309_group/client/src/components/DoctorDashboard/SearchBar/SearchBar.js"],"names":["React","Container","DataTable","TableHeader","Button","getPatients","AddToWatchlist","getWatchlist","removePatientFromWatchlist","SearchBar","props","handleChange","event","setState","keyword","target","value","state","found","patients","watchlist","doctor","app","currentDoctor","error","success","handleSearchClick","bind","found_patients","console","log","length","map","patient","username","_id","province","user","name","Id","age","add","filter","includes","showSearch","showWatchlist","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Container } from \"reactstrap\";\nimport { DataTable, TableHeader, Button} from \"react-mdl\";\nimport { getPatients, AddToWatchlist, getWatchlist, removePatientFromWatchlist } from \"../../../actions/doctor\"\nimport \"./styles.css\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keyword: \"\",\n      found: [],\n      patients: [],\n      watchlist: null,\n      doctor: props.app.state.currentDoctor,\n      error: \"\",\n      success: \"\"\n    };\n    this.handleSearchClick = this.handleSearchClick.bind(this);\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      keyword: event.target.value,\n    });\n  };\n\n  showSearch(found_patients) {\n    return (\n      <div>\n        <br></br> <br></br>\n        <DataTable className=\"dtable\" shadow={0} rows={found_patients}>\n          <TableHeader name=\"Id\" tooltip=\"The id of patients\">\n            Id\n          </TableHeader>\n          <TableHeader name=\"name\" tooltip=\"The name of patients\">\n            Name\n          </TableHeader>\n          <TableHeader name=\"province\" tooltip=\"The province of patient(s)\">\n            Province\n          </TableHeader>\n          <TableHeader name=\"age\" tooltip=\"The age of patient(s)\">\n            Age\n          </TableHeader>\n          <TableHeader name=\"province\" tooltip=\"The gender of patient(s)\">\n            Gender\n          </TableHeader>\n          <TableHeader name=\"add\">Add</TableHeader>\n        </DataTable>\n      </div>\n    );\n  }\n\n  // update = (new_list) => {\n  //   this.setState({watchlist: new_list});\n  //   console.log(new_list)\n  // };\n\n  showWatchlist(watchlist) {\n    console.log(\"watchlist in showWatchlist\")\n    console.log(watchlist)\n    if (!watchlist) {\n      return (<p>Watchlist Loading!</p>)\n    } else if (watchlist.length < 1) {\n      return (<p>No Patient on watchlist at the moment!</p>)\n    } else {\n      return (\n          watchlist.map((patient) => (\n            <div className=\"Patient\">\n              <br></br> <br></br>\n              <h3>UserName :{patient.username}</h3>\n              <p>User Id :{patient._id}</p>\n              <p>Province :{patient.province}</p>\n              <Button\n                raised colored ripple\n                onClick={(event) => {\n                  removePatientFromWatchlist(this, patient);\n                }}\n              >\n                KICK OUT\n              </Button>{\" \"}\n              <br></br> <br></br>\n            </div>\n          ))\n      );\n    }\n  }\n\n  handleSearchClick() {\n    // check if name or id matches\n      getPatients(this);\n  }\n\n  componentWillMount() {\n    getWatchlist(this, this.props.app.state.currentDoctor._id)\n  }\n\n\n  render() {\n      const {app} = this.props;\n\n      let found_patients = [];\n    if (this.state.keyword.length < 1) {\n      found_patients =  this.state.patients.map((user) => {\n        return (\n        {name: `${user.username}`, \n        Id: `${user._id}`, \n        province: `${user.province}`,\n        age: `${user.age}`,\n        add: <Button raised colored ripple onClick={(event)=> AddToWatchlist(this, event.target, app.state.currentDoctor, user)} >Add</Button>\n        }\n        )\n        })\n    } else {\n        found_patients = this.state.patients.filter(\n            (patient) =>\n                patient._id.includes(this.state.keyword) ||\n                patient.username.includes(this.state.keyword)\n        );\n      found_patients = found_patients.map((user) => {\n          return {\n              name: `${user.username}`,\n              Id: `${user._id}`,\n          province: `${user.province}`,\n          age: `${user.age}`,\n          add: <Button raised colored ripple onClick={(event)=> AddToWatchlist(this, event.target, app.state.currentDoctor, user)} >Add</Button>\n        }\n      })\n    }\n\n    return (\n      <Container>\n        <div className=\"SearchBar\">\n          <label>\n            Search Patient:\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Search a patient by username\"\n              value={this.state.keyword}\n              onChange={this.handleChange}\n            />\n            <Button raised colored ripple\n              className=\"button\"\n              onClick={() => this.handleSearchClick()}\n            >\n              Search\n            </Button>\n            {this.showSearch(found_patients)}\n          </label>\n        </div>\n        <h3 className=\"error\">{this.state.error}</h3>\n        <h3 className=\"success\">{this.state.success}</h3>\n        <h3>Watchlist:</h3>\n        {this.showWatchlist(this.state.watchlist)}\n      </Container>\n    );\n  }\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}