{"ast":null,"code":"var _jsxFileName = \"/Users/yehuang/covid_consultant/client/src/components/AdminDashboard/PatientTable.js\";\nimport React from 'react';\nimport './styles.css';\nimport \"react-table-v6/react-table.css\";\nimport { getPatients } from \"../../actions/admin\";\nimport { Table, TableHeader } from \"react-mdl\";\nimport { updatePatient } from \"../../actions/admin\";\n\nclass PatientTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patients: [],\n      doctors: [],\n      error: \"\",\n      success: \"\",\n      searching: false\n    };\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleProvinceChange = this.handleProvinceChange.bind(this);\n    this.handleAgeChange = this.handleAgeChange.bind(this);\n  }\n\n  componentWillMount() {\n    getPatients(this);\n  }\n\n  render() {\n    const patient_list = this.state.patients.map(user => ({\n      name: /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: user.username,\n        onChange: this.handleNameChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 20\n        }\n      }),\n      Id: user._id,\n      password: /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handlePasswordChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 23\n        }\n      }),\n      province: /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: user.province,\n        onChange: this.handleProvinceChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 23\n        }\n      }),\n      age: /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: user.age,\n        onChange: this.handleAgeChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 18\n        }\n      }),\n      edit: /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => updatePatient(this, user),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 19\n        }\n      }, \"Edit\")\n    })); // const patient_columns = [\n    //     {\n    //         Header: 'User ID',\n    //         accessor: '_id'\n    //     },\n    //     {\n    //         Header: 'Username',\n    //         accessor: 'username',\n    //         Cell: (props) => (\n    //             <input type=\"text\" value={props.value} onChange={this.handleNameChange}/>\n    //         )\n    //     },\n    //     {\n    //         Header: \"Password\",\n    //         accessor: \"password\",\n    //         Cell: (props) => (\n    //             <input type=\"text\" value={props.value} onChange={this.handlePasswordChange}/>\n    //         )\n    //     },\n    //     {\n    //         Header: \"Province\",\n    //         accessor: \"province\",\n    //         Cell: (props) => (\n    //             <input type=\"text\" value={props.value} onChange={this.handleProvinceChange}/>\n    //         )\n    //     },\n    //     {\n    //         Header: \"Age\",\n    //         accessor: \"age\",\n    //         Cell: (props) => (\n    //             <input type=\"text\" value={props.value} onChange={this.handleAgeChange}/>\n    //         )\n    //     },\n    //     {\n    //         Header: 'Update',\n    //         accessor: '_id',\n    //         Cell: (props) => (\n    //             <Button id={props.value} onClick={() => console.log(\"clicked!\")}>\n    //                 Update\n    //             </Button>)\n    //     }\n    // ];\n    // const doctor_columns = [\n    //     {\n    //         Header: 'User ID',\n    //         accessor: '_id'\n    //     },\n    //     {\n    //         Header: 'Username',\n    //         accessor: 'username',\n    //         Cell: (props) => (\n    //             <TextField\n    //             onChange={this.handleNameChange}\n    //             label={props.value} \n    //             style={{width: \"80%\"}}/>\n    //         )\n    //     },\n    //     {\n    //         Header: \"Password\",\n    //         accessor: \"password\",\n    //         Cell: (props) => (\n    //             <TextField\n    //             onChange={this.handlePasswordChange}\n    //             label=\"New Password...\" \n    //             style={{width: \"80%\"}}/>\n    //         )\n    //     },\n    //     {\n    //         Header: \"Province\",\n    //         accessor: \"location\",\n    //         Cell: (props) => (\n    //             <TextField\n    //             onChange={this.handleProvinceChange}\n    //             label={props.value} \n    //             style={{width: \"80%\"}}/>\n    //         )\n    //     },\n    //     {\n    //         Header: \"Doctor Type\",\n    //         accessor: \"doctorType\",\n    //         Cell: (props) => (\n    //                 <TextField\n    //                 onChange={() => console.log(\"typed\")}\n    //                 label={props.value} \n    //                 style={{width: \"80%\"}}/>\n    //             )\n    //     },\n    //     {\n    //         Header: 'Update',\n    //         accessor: '_id',\n    //         Cell: (props) => (\n    //             <Button id={props.value} onClick={() => console.log(\"clicked!\")}>\n    //                 Update\n    //             </Button>)\n    //     }\n    // ];\n    // return (\n    //         <ReactTable\n    //             className={`-highlight`}\n    //             columns={patient_columns}\n    //             data={this.state.patients}\n    //             noDataText={`No User currently`}\n    //         >\n    //         </ReactTable>\n    // );\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, this.state.error), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, this.state.success), /*#__PURE__*/React.createElement(Table, {\n      sortable: true,\n      shadow: 1,\n      rows: patient_list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableHeader, {\n      name: \"Id\",\n      sortFn: (a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0]),\n      tooltip: \"The id of the users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, \"User Id\"), /*#__PURE__*/React.createElement(TableHeader, {\n      name: \"name\",\n      sortFn: (a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0]),\n      tooltip: \"The name of the users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(TableHeader, {\n      name: \"password\" // sortFn={(a, b, isAsc) => (isAsc ? a.value : b.value).match(/(.*)/)[0].localeCompare((isAsc ? b.value : a.value).match(/(.*)/)[0])}\n      ,\n      tooltip: \"Enter new password for the user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, \"New Password\"), /*#__PURE__*/React.createElement(TableHeader, {\n      name: \"province\" // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n      ,\n      tooltip: \"The password of the users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, \"Province\"), /*#__PURE__*/React.createElement(TableHeader, {\n      name: \"age\" // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n      ,\n      tooltip: \"The age of the users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, \"Age\"), /*#__PURE__*/React.createElement(TableHeader, {\n      name: \"edit\" // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n      ,\n      tooltip: \"Click the edit button to update the user's information\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, \"Edit\")));\n  }\n\n  handleNameChange(event) {\n    const changed_id = event.target.parentElement.parentElement.firstElementChild.innerText;\n    const new_state = this.state.patients.slice();\n\n    for (let i = 0; i < new_state.length; i++) {\n      if (new_state[i]._id === changed_id) {\n        new_state[i].username = event.target.value;\n        break;\n      }\n    }\n\n    this.setState({\n      patien: new_state\n    });\n  }\n\n  handlePasswordChange(event) {\n    console.log(event.target.parentElement.parentElement.firstElementChild.innerText);\n    const changed_id = event.target.parentElement.parentElement.firstElementChild.innerText;\n    const new_state = this.state.patients.slice();\n\n    for (let i = 0; i < new_state.length; i++) {\n      if (new_state[i]._id === changed_id) {\n        new_state[i].password = event.target.value;\n        break;\n      }\n    }\n\n    this.setState({\n      users: new_state\n    });\n  }\n\n  handleProvinceChange(event) {\n    const changed_id = event.target.parentElement.parentElement.firstElementChild.innerText;\n    const new_state = this.state.patients.slice();\n\n    for (let i = 0; i < new_state.length; i++) {\n      if (new_state[i]._id === changed_id) {\n        new_state[i].province = event.target.value;\n        break;\n      }\n    }\n\n    this.setState({\n      patients: new_state\n    });\n  }\n\n  handleAgeChange(event) {\n    const changed_id = event.target.parentElement.parentElement.firstElementChild.innerText;\n    const new_state = this.state.patients.slice();\n\n    for (let i = 0; i < new_state.length; i++) {\n      if (new_state[i]._id === changed_id) {\n        new_state[i].age = event.target.value;\n        break;\n      }\n    }\n\n    this.setState({\n      patients: new_state\n    });\n  }\n\n}\n\nexport default PatientTable;","map":{"version":3,"sources":["/Users/yehuang/covid_consultant/client/src/components/AdminDashboard/PatientTable.js"],"names":["React","getPatients","Table","TableHeader","updatePatient","PatientTable","Component","constructor","props","state","patients","doctors","error","success","searching","handleNameChange","bind","handlePasswordChange","handleProvinceChange","handleAgeChange","componentWillMount","render","patient_list","map","user","name","username","Id","_id","password","province","age","edit","a","b","isAsc","match","localeCompare","event","changed_id","target","parentElement","firstElementChild","innerText","new_state","slice","i","length","value","setState","patien","console","log","users"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './styles.css'\nimport \"react-table-v6/react-table.css\";\nimport {getPatients} from \"../../actions/admin\"\nimport {Table, TableHeader} from \"react-mdl\"\nimport {updatePatient} from \"../../actions/admin\"\n\nclass PatientTable extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state= {\n            patients: [],\n            doctors: [],\n            error: \"\",\n            success: \"\",\n            searching: false\n        }\n        this.handleNameChange = this.handleNameChange.bind(this)\n        this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        this.handleProvinceChange = this.handleProvinceChange.bind(this)\n        this.handleAgeChange = this.handleAgeChange.bind(this)\n        \n    }\n\n    componentWillMount() {\n        getPatients(this)\n    }\n\n    render() {\n\n        const patient_list = this.state.patients.map((user)=>(\n            {name: <input type=\"text\" value={user.username} onChange={this.handleNameChange}/>, \n            Id: user._id, \n            password: <input type=\"text\" onChange={this.handlePasswordChange} />,\n            province: <input type=\"text\" value={user.province} onChange={this.handleProvinceChange} />,\n            age: <input type=\"text\" value={user.age} onChange={this.handleAgeChange} />,\n            edit: <button onClick={()=> updatePatient(this, user)} >Edit</button>\n            }\n          ))\n\n        // const patient_columns = [\n        //     {\n        //         Header: 'User ID',\n        //         accessor: '_id'\n        //     },\n        //     {\n        //         Header: 'Username',\n        //         accessor: 'username',\n        //         Cell: (props) => (\n        //             <input type=\"text\" value={props.value} onChange={this.handleNameChange}/>\n        //         )\n        //     },\n        //     {\n        //         Header: \"Password\",\n        //         accessor: \"password\",\n        //         Cell: (props) => (\n        //             <input type=\"text\" value={props.value} onChange={this.handlePasswordChange}/>\n        //         )\n        //     },\n        //     {\n        //         Header: \"Province\",\n        //         accessor: \"province\",\n        //         Cell: (props) => (\n        //             <input type=\"text\" value={props.value} onChange={this.handleProvinceChange}/>\n        //         )\n        //     },\n        //     {\n        //         Header: \"Age\",\n        //         accessor: \"age\",\n        //         Cell: (props) => (\n        //             <input type=\"text\" value={props.value} onChange={this.handleAgeChange}/>\n        //         )\n        //     },\n        //     {\n        //         Header: 'Update',\n        //         accessor: '_id',\n        //         Cell: (props) => (\n        //             <Button id={props.value} onClick={() => console.log(\"clicked!\")}>\n        //                 Update\n        //             </Button>)\n        //     }\n        // ];\n\n        // const doctor_columns = [\n        //     {\n        //         Header: 'User ID',\n        //         accessor: '_id'\n        //     },\n        //     {\n        //         Header: 'Username',\n        //         accessor: 'username',\n        //         Cell: (props) => (\n        //             <TextField\n        //             onChange={this.handleNameChange}\n        //             label={props.value} \n        //             style={{width: \"80%\"}}/>\n        //         )\n        //     },\n        //     {\n        //         Header: \"Password\",\n        //         accessor: \"password\",\n        //         Cell: (props) => (\n        //             <TextField\n        //             onChange={this.handlePasswordChange}\n        //             label=\"New Password...\" \n        //             style={{width: \"80%\"}}/>\n        //         )\n        //     },\n        //     {\n        //         Header: \"Province\",\n        //         accessor: \"location\",\n        //         Cell: (props) => (\n        //             <TextField\n        //             onChange={this.handleProvinceChange}\n        //             label={props.value} \n        //             style={{width: \"80%\"}}/>\n        //         )\n        //     },\n        //     {\n        //         Header: \"Doctor Type\",\n        //         accessor: \"doctorType\",\n        //         Cell: (props) => (\n        //                 <TextField\n        //                 onChange={() => console.log(\"typed\")}\n        //                 label={props.value} \n        //                 style={{width: \"80%\"}}/>\n        //             )\n        //     },\n        //     {\n        //         Header: 'Update',\n        //         accessor: '_id',\n        //         Cell: (props) => (\n        //             <Button id={props.value} onClick={() => console.log(\"clicked!\")}>\n        //                 Update\n        //             </Button>)\n        //     }\n        // ];\n        // return (\n        //         <ReactTable\n        //             className={`-highlight`}\n        //             columns={patient_columns}\n        //             data={this.state.patients}\n        //             noDataText={`No User currently`}\n        //         >\n        //         </ReactTable>\n        // );\n    \n\n        return (\n            <div>\n                <h3 className=\"error\">{this.state.error}</h3>\n                <h3 className=\"success\">{this.state.success}</h3>\n                <Table \n                sortable \n                shadow={1} \n                rows={patient_list}\n                >\n            \n                    <TableHeader\n                    name=\"Id\"\n                    sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                    tooltip=\"The id of the users\"\n                    >\n                    User Id\n                    </TableHeader>\n\n                    <TableHeader\n                    name=\"name\"\n                    sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                    tooltip=\"The name of the users\"\n                    >\n                    Name\n                    </TableHeader>\n                    \n                    <TableHeader\n                    name=\"password\"\n                    // sortFn={(a, b, isAsc) => (isAsc ? a.value : b.value).match(/(.*)/)[0].localeCompare((isAsc ? b.value : a.value).match(/(.*)/)[0])}\n                    tooltip=\"Enter new password for the user\"\n                    >\n                    New Password\n                    </TableHeader>\n\n                    <TableHeader\n                    name=\"province\"\n                    // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                    tooltip=\"The password of the users\"\n                    >\n                    Province\n                    </TableHeader>\n\n                    <TableHeader\n                    name=\"age\"\n                    // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                    tooltip=\"The age of the users\"\n                    >\n                    Age\n                    </TableHeader>\n\n                    <TableHeader\n                    name=\"edit\"\n                    // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                    tooltip=\"Click the edit button to update the user's information\"\n                    >\n                    Edit\n                    </TableHeader>\n                </Table>\n            </div>\n        )\n    }\n\n    handleNameChange(event) {\n        const changed_id= event.target.parentElement.parentElement.firstElementChild.innerText\n        const new_state= this.state.patients.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i]._id === changed_id) {\n                new_state[i].username = event.target.value\n                break\n            }\n        }\n        this.setState({patien: new_state})\n    }\n\n    handlePasswordChange(event) {\n        console.log(event.target.parentElement.parentElement.firstElementChild.innerText)\n        const changed_id= event.target.parentElement.parentElement.firstElementChild.innerText\n        const new_state= this.state.patients.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i]._id === changed_id) {\n                new_state[i].password = event.target.value\n                break\n            }\n        }\n        this.setState({users: new_state})\n    }\n\n    handleProvinceChange(event) {\n        const changed_id= event.target.parentElement.parentElement.firstElementChild.innerText\n        const new_state= this.state.patients.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i]._id === changed_id) {\n                new_state[i].province = event.target.value\n                break\n            }\n        }\n        this.setState({patients: new_state})\n    }\n\n    handleAgeChange(event) {\n        const changed_id= event.target.parentElement.parentElement.firstElementChild.innerText\n        const new_state= this.state.patients.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i]._id === changed_id) {\n                new_state[i].age = event.target.value\n                break\n            }\n        }\n        this.setState({patients: new_state})\n    }\n\n}\n\nexport default PatientTable"]},"metadata":{},"sourceType":"module"}