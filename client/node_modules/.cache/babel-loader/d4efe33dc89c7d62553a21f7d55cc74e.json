{"ast":null,"code":"import _classCallCheck from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./styles.css';import Button from\"react-mdl\";import ReactTable from\"react-table-v6\";import\"react-table-v6/react-table.css\";import{TextField}from'@material-ui/core';import{getDoctors,getPatients}from\"../../actions/admin\";import{Table,TableHeader}from\"react-mdl\";var UserTable=/*#__PURE__*/function(_React$Component){_inherits(UserTable,_React$Component);var _super=_createSuper(UserTable);function UserTable(props){var _this;_classCallCheck(this,UserTable);_this=_super.call(this,props);_this.state={patients:[],doctors:[],error:\"\"};_this.handleNameChange=_this.handleNameChange.bind(_assertThisInitialized(_this));_this.handlePasswordChange=_this.handlePasswordChange.bind(_assertThisInitialized(_this));_this.handleProvinceChange=_this.handleProvinceChange.bind(_assertThisInitialized(_this));_this.handleAgeChange=_this.handleAgeChange.bind(_assertThisInitialized(_this));return _this;}_createClass(UserTable,[{key:\"componentWillMount\",value:function componentWillMount(){getPatients(this);getDoctors(this);}},{key:\"render\",value:function render(){var _this2=this;var material_list=this.state.patients.map(function(user){return{name:/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:user.username,onChange:_this2.handleNameChange}),Id:user._id,password:/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:\"Enter new password here\",onChange:_this2.handlePasswordChange}),province:/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:user.province,onChange:_this2.handleProvinceChange}),age:/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:user.age,onChange:_this2.handleAgeChange}),edit:/*#__PURE__*/React.createElement(Button,{raised:true,colored:true,ripple:true},\"\\\"Edit\\\"\")};});// const patient_columns = [\n//     {\n//         Header: 'User ID',\n//         accessor: '_id'\n//     },\n//     {\n//         Header: 'Username',\n//         accessor: 'username',\n//         Cell: (props) => (\n//             <input type=\"text\" value={props.value} onChange={this.handleNameChange}/>\n//         )\n//     },\n//     {\n//         Header: \"Password\",\n//         accessor: \"password\",\n//         Cell: (props) => (\n//             <input type=\"text\" value={props.value} onChange={this.handlePasswordChange}/>\n//         )\n//     },\n//     {\n//         Header: \"Province\",\n//         accessor: \"province\",\n//         Cell: (props) => (\n//             <input type=\"text\" value={props.value} onChange={this.handleProvinceChange}/>\n//         )\n//     },\n//     {\n//         Header: \"Age\",\n//         accessor: \"age\",\n//         Cell: (props) => (\n//             <input type=\"text\" value={props.value} onChange={this.handleAgeChange}/>\n//         )\n//     },\n//     {\n//         Header: 'Update',\n//         accessor: '_id',\n//         Cell: (props) => (\n//             <Button id={props.value} onClick={() => console.log(\"clicked!\")}>\n//                 Update\n//             </Button>)\n//     }\n// ];\n// const doctor_columns = [\n//     {\n//         Header: 'User ID',\n//         accessor: '_id'\n//     },\n//     {\n//         Header: 'Username',\n//         accessor: 'username',\n//         Cell: (props) => (\n//             <TextField\n//             onChange={this.handleNameChange}\n//             label={props.value} \n//             style={{width: \"80%\"}}/>\n//         )\n//     },\n//     {\n//         Header: \"Password\",\n//         accessor: \"password\",\n//         Cell: (props) => (\n//             <TextField\n//             onChange={this.handlePasswordChange}\n//             label=\"New Password...\" \n//             style={{width: \"80%\"}}/>\n//         )\n//     },\n//     {\n//         Header: \"Province\",\n//         accessor: \"location\",\n//         Cell: (props) => (\n//             <TextField\n//             onChange={this.handleProvinceChange}\n//             label={props.value} \n//             style={{width: \"80%\"}}/>\n//         )\n//     },\n//     {\n//         Header: \"Doctor Type\",\n//         accessor: \"doctorType\",\n//         Cell: (props) => (\n//                 <TextField\n//                 onChange={() => console.log(\"typed\")}\n//                 label={props.value} \n//                 style={{width: \"80%\"}}/>\n//             )\n//     },\n//     {\n//         Header: 'Update',\n//         accessor: '_id',\n//         Cell: (props) => (\n//             <Button id={props.value} onClick={() => console.log(\"clicked!\")}>\n//                 Update\n//             </Button>)\n//     }\n// ];\n// return (\n//         <ReactTable\n//             className={`-highlight`}\n//             columns={patient_columns}\n//             data={this.state.patients}\n//             noDataText={`No User currently`}\n//         >\n//         </ReactTable>\n// );\nreturn/*#__PURE__*/React.createElement(Table,{className:\"table\",sortable:true,shadow:1,rows:material_list},/*#__PURE__*/React.createElement(TableHeader,{name:\"Id\",sortFn:function sortFn(a,b,isAsc){return(isAsc?a:b).match(/(.*)/)[0].localeCompare((isAsc?b:a).match(/(.*)/)[0]);},tooltip:\"The id of the users\"},\"User Id\"),/*#__PURE__*/React.createElement(TableHeader,{name:\"name\"// sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n,tooltip:\"The name of the users\"},\"Name\"),/*#__PURE__*/React.createElement(TableHeader,{name:\"password\"// sortFn={(a, b, isAsc) => (isAsc ? a.value : b.value).match(/(.*)/)[0].localeCompare((isAsc ? b.value : a.value).match(/(.*)/)[0])}\n,tooltip:\"The password of the users\"},\"Password\"),/*#__PURE__*/React.createElement(TableHeader,{name:\"province\"// sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n,tooltip:\"The password of the users\"},\"Province\"),/*#__PURE__*/React.createElement(TableHeader,{name:\"age\"// sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n,tooltip:\"The age of the users\"},\"Age\"),/*#__PURE__*/React.createElement(TableHeader,{name:\"edit\"// sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n,tooltip:\"Click the edit button to update the user's information\"}));}},{key:\"handleNameChange\",value:function handleNameChange(event){var changed_id=event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText;var new_state=this.state.users.slice();for(var i=0;i<new_state.length;i++){if(new_state[i].userId===changed_id){new_state[i].name=event.target.value;break;}}this.setState({users:new_state});}},{key:\"handlePasswordChange\",value:function handlePasswordChange(event){console.log(event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText);var changed_id=event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText;var new_state=this.state.users.slice();for(var i=0;i<new_state.length;i++){if(new_state[i].userId===changed_id){new_state[i].password=event.target.value;break;}}this.setState({users:new_state});}},{key:\"handleProvinceChange\",value:function handleProvinceChange(event){var changed_id=event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText;var new_state=this.state.users.slice();for(var i=0;i<new_state.length;i++){if(new_state[i].userId===changed_id){new_state[i].province=event.target.value;break;}}this.setState({users:new_state});}},{key:\"handleAgeChange\",value:function handleAgeChange(event){var changed_id=event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText;var new_state=this.state.users.slice();for(var i=0;i<new_state.length;i++){if(new_state[i].userId===changed_id){new_state[i].province=event.target.value;break;}}this.setState({users:new_state});}}]);return UserTable;}(React.Component);export default UserTable;","map":{"version":3,"sources":["/Users/yehuang/309_group/client/src/components/AdminDashboard/UserTable.js"],"names":["React","Button","ReactTable","TextField","getDoctors","getPatients","Table","TableHeader","UserTable","props","state","patients","doctors","error","handleNameChange","bind","handlePasswordChange","handleProvinceChange","handleAgeChange","material_list","map","user","name","username","Id","_id","password","province","age","edit","a","b","isAsc","match","localeCompare","event","changed_id","target","parentElement","querySelectorAll","innerText","new_state","users","slice","i","length","userId","value","setState","console","log","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './styles.css'\nimport Button from \"react-mdl\"\nimport ReactTable from \"react-table-v6\"\nimport \"react-table-v6/react-table.css\";\nimport { TextField } from '@material-ui/core';\nimport {getDoctors, getPatients} from \"../../actions/admin\"\nimport {Table, TableHeader} from \"react-mdl\"\n\nclass UserTable extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state= {\n            patients: [],\n            doctors: [],\n            error: \"\"\n        }\n        this.handleNameChange = this.handleNameChange.bind(this)\n        this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        this.handleProvinceChange = this.handleProvinceChange.bind(this)\n        this.handleAgeChange = this.handleAgeChange.bind(this)\n        \n    }\n\n    componentWillMount() {\n        getPatients(this)\n        getDoctors(this)\n    }\n\n    render() {\n\n        const material_list = this.state.patients.map((user)=>(\n            {name: <input type=\"text\" value={user.username} onChange={this.handleNameChange}/>, \n            Id: user._id, \n            password: <input type=\"text\" value={\"Enter new password here\"} onChange={this.handlePasswordChange} />,\n            province: <input type=\"text\" value={user.province} onChange={this.handleProvinceChange} />,\n            age: <input type=\"text\" value={user.age} onChange={this.handleAgeChange} />,\n            edit: <Button raised colored ripple>\"Edit\"</Button>\n            }\n          ))\n        // const patient_columns = [\n        //     {\n        //         Header: 'User ID',\n        //         accessor: '_id'\n        //     },\n        //     {\n        //         Header: 'Username',\n        //         accessor: 'username',\n        //         Cell: (props) => (\n        //             <input type=\"text\" value={props.value} onChange={this.handleNameChange}/>\n        //         )\n        //     },\n        //     {\n        //         Header: \"Password\",\n        //         accessor: \"password\",\n        //         Cell: (props) => (\n        //             <input type=\"text\" value={props.value} onChange={this.handlePasswordChange}/>\n        //         )\n        //     },\n        //     {\n        //         Header: \"Province\",\n        //         accessor: \"province\",\n        //         Cell: (props) => (\n        //             <input type=\"text\" value={props.value} onChange={this.handleProvinceChange}/>\n        //         )\n        //     },\n        //     {\n        //         Header: \"Age\",\n        //         accessor: \"age\",\n        //         Cell: (props) => (\n        //             <input type=\"text\" value={props.value} onChange={this.handleAgeChange}/>\n        //         )\n        //     },\n        //     {\n        //         Header: 'Update',\n        //         accessor: '_id',\n        //         Cell: (props) => (\n        //             <Button id={props.value} onClick={() => console.log(\"clicked!\")}>\n        //                 Update\n        //             </Button>)\n        //     }\n        // ];\n\n        // const doctor_columns = [\n        //     {\n        //         Header: 'User ID',\n        //         accessor: '_id'\n        //     },\n        //     {\n        //         Header: 'Username',\n        //         accessor: 'username',\n        //         Cell: (props) => (\n        //             <TextField\n        //             onChange={this.handleNameChange}\n        //             label={props.value} \n        //             style={{width: \"80%\"}}/>\n        //         )\n        //     },\n        //     {\n        //         Header: \"Password\",\n        //         accessor: \"password\",\n        //         Cell: (props) => (\n        //             <TextField\n        //             onChange={this.handlePasswordChange}\n        //             label=\"New Password...\" \n        //             style={{width: \"80%\"}}/>\n        //         )\n        //     },\n        //     {\n        //         Header: \"Province\",\n        //         accessor: \"location\",\n        //         Cell: (props) => (\n        //             <TextField\n        //             onChange={this.handleProvinceChange}\n        //             label={props.value} \n        //             style={{width: \"80%\"}}/>\n        //         )\n        //     },\n        //     {\n        //         Header: \"Doctor Type\",\n        //         accessor: \"doctorType\",\n        //         Cell: (props) => (\n        //                 <TextField\n        //                 onChange={() => console.log(\"typed\")}\n        //                 label={props.value} \n        //                 style={{width: \"80%\"}}/>\n        //             )\n        //     },\n        //     {\n        //         Header: 'Update',\n        //         accessor: '_id',\n        //         Cell: (props) => (\n        //             <Button id={props.value} onClick={() => console.log(\"clicked!\")}>\n        //                 Update\n        //             </Button>)\n        //     }\n        // ];\n        // return (\n        //         <ReactTable\n        //             className={`-highlight`}\n        //             columns={patient_columns}\n        //             data={this.state.patients}\n        //             noDataText={`No User currently`}\n        //         >\n        //         </ReactTable>\n        // );\n\n        return (\n            \n            <Table \n            className=\"table\"\n            sortable \n            shadow={1} \n            rows={material_list}\n            >\n        \n                <TableHeader\n                name=\"Id\"\n                sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                tooltip=\"The id of the users\"\n                >\n                User Id\n                </TableHeader>\n\n                <TableHeader\n                name=\"name\"\n                // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                tooltip=\"The name of the users\"\n                >\n                Name\n                </TableHeader>\n                \n                <TableHeader\n                name=\"password\"\n                // sortFn={(a, b, isAsc) => (isAsc ? a.value : b.value).match(/(.*)/)[0].localeCompare((isAsc ? b.value : a.value).match(/(.*)/)[0])}\n                tooltip=\"The password of the users\"\n                >\n                Password\n                </TableHeader>\n\n                <TableHeader\n                name=\"province\"\n                // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                tooltip=\"The password of the users\"\n                >\n                Province\n                </TableHeader>\n\n                <TableHeader\n                name=\"age\"\n                // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                tooltip=\"The age of the users\"\n                >\n                Age\n                </TableHeader>\n\n                <TableHeader\n                name=\"edit\"\n                // sortFn={(a, b, isAsc) => (isAsc ? a : b).match(/(.*)/)[0].localeCompare((isAsc ? b : a).match(/(.*)/)[0])}\n                tooltip=\"Click the edit button to update the user's information\"\n                >\n                </TableHeader>\n            </Table>\n        )\n    }\n\n    handleNameChange(event) {\n        const changed_id= event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText\n        const new_state= this.state.users.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i].userId === changed_id) {\n                new_state[i].name = event.target.value\n                break\n            }\n        }\n        this.setState({users: new_state})\n    }\n\n    handlePasswordChange(event) {\n        console.log(event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText)\n        const changed_id= event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText\n        const new_state= this.state.users.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i].userId === changed_id) {\n                new_state[i].password = event.target.value\n                break\n            }\n        }\n        this.setState({users: new_state})\n    }\n\n    handleProvinceChange(event) {\n        const changed_id= event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText\n        const new_state= this.state.users.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i].userId === changed_id) {\n                new_state[i].province = event.target.value\n                break\n            }\n        }\n        this.setState({users: new_state})\n    }\n\n    handleAgeChange(event) {\n        const changed_id= event.target.parentElement.parentElement.querySelectorAll(\"td\")[1].innerText\n        const new_state= this.state.users.slice()\n        for (let i = 0; i < new_state.length; i++) {\n            if (new_state[i].userId === changed_id) {\n                new_state[i].province = event.target.value\n                break\n            }\n        }\n        this.setState({users: new_state})\n    }\n\n}\n\nexport default UserTable"]},"metadata":{},"sourceType":"module"}