{"ast":null,"code":"var _jsxFileName = \"/Users/yehuang/309_group/client/src/components/ChatPage/PreChatPage/PrePatientChat.js\";\nimport React from \"react\";\nimport PatientHeader from \"../../PatientDashboard/components/PatientHeader/PatientHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles.css\";\nimport { doctorType } from \"../../RegistrationInfo/infomation\";\nimport ReactTable from 'react-table-v6';\nimport \"react-table-v6/react-table.css\";\nimport matchSorter from 'match-sorter';\nimport { getDoctors } from '../../../actions/doctor';\n\nclass PrePatientChat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.createOptions = opt => {\n      let select = [];\n\n      for (let i = 0; i < opt.length; i++) {\n        select.push( /*#__PURE__*/React.createElement(\"option\", {\n          value: `${opt[i]}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }\n        }, opt[i]));\n      }\n\n      return select;\n    };\n\n    this.state = {\n      doctorInfo: []\n    };\n  }\n\n  componentDidMount() {\n    getDoctors(this);\n  }\n\n  render() {\n    const columns = [{\n      Header: 'Doctor Name',\n      id: 'doctorName',\n      filterable: true,\n      accessor: 'username',\n      filterMethod: (filter, rows) => matchSorter(rows, filter.value, {\n        keys: ['doctorName']\n      }),\n      filterAll: true\n    }, {\n      Header: 'Doctor Type',\n      filterable: true,\n      accessor: 'doctorType',\n      filterMethod: (filter, row) => {\n        if (filter.value === \"All\") {\n          return true;\n        }\n\n        return row[filter.id] === filter.value;\n      },\n      Filter: ({\n        filter,\n        onChange\n      }) => /*#__PURE__*/React.createElement(\"select\", {\n        onChange: event => onChange(event.target.value),\n        style: {\n          width: \"100%\"\n        },\n        value: filter ? filter.value : \"All\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"All\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, \"All\"), this.createOptions(doctorType))\n    }, {\n      Header: 'Location',\n      id: 'location',\n      filterable: true,\n      accessor: 'location',\n      filterMethod: (filter, rows) => matchSorter(rows, filter.value, {\n        keys: ['location']\n      }),\n      filterAll: true\n    }, {\n      Header: 'Chat With Doctor',\n      sortable: false,\n      Cell: () => /*#__PURE__*/React.createElement(Link, {\n        to: \"/ChatPage/PatientChatPage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }, \"Send Message\"))\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PatientHeader, {\n      name: \"yyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"list-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, \"Doctor List\")), /*#__PURE__*/React.createElement(ReactTable, {\n      className: `-highlight`,\n      columns: columns,\n      data: this.state.doctorInfo,\n      noDataText: `No Doctor Found`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default PrePatientChat;","map":{"version":3,"sources":["/Users/yehuang/309_group/client/src/components/ChatPage/PreChatPage/PrePatientChat.js"],"names":["React","PatientHeader","Button","Link","doctorType","ReactTable","matchSorter","getDoctors","PrePatientChat","Component","constructor","props","createOptions","opt","select","i","length","push","state","doctorInfo","componentDidMount","render","columns","Header","id","filterable","accessor","filterMethod","filter","rows","value","keys","filterAll","row","Filter","onChange","event","target","width","sortable","Cell"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PatientHeader from \"../../PatientDashboard/components/PatientHeader/PatientHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport {Link} from \"react-router-dom\";\nimport \"./styles.css\";\nimport {doctorType} from \"../../RegistrationInfo/infomation\";\nimport ReactTable from 'react-table-v6';\nimport \"react-table-v6/react-table.css\";\nimport matchSorter from 'match-sorter';\nimport {getDoctors} from '../../../actions/doctor';\n\nclass PrePatientChat extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            doctorInfo: []\n        };\n    };\n\n    createOptions = (opt) => {\n        let select = [];\n        for (let i = 0; i < opt.length; i++) {\n            select.push(<option value={`${opt[i]}`}>{opt[i]}</option>)\n        }\n        return select\n    };\n\n    componentDidMount() {\n        getDoctors(this)\n    }\n    render() {\n        const columns = [\n            {\n                Header: 'Doctor Name',\n                id: 'doctorName',\n                filterable: true,\n                accessor: 'username',\n                filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, {keys: ['doctorName']}),\n                filterAll: true\n            },\n            {\n                Header: 'Doctor Type',\n                filterable: true,\n                accessor: 'doctorType',\n                filterMethod: (filter, row) => {\n                    if (filter.value === \"All\") {\n                        return true;\n                    }\n                    return row[filter.id] === filter.value;\n                },\n                Filter: ({filter, onChange}) =>\n                    <select\n                        onChange={event => onChange(event.target.value)}\n                        style={{width: \"100%\"}}\n                        value={filter ? filter.value : \"All\"}\n                    >\n                        <option value='All'>All</option>\n                        {this.createOptions(doctorType)}\n                    </select>\n            },\n            {\n                Header: 'Location',\n                id: 'location',\n                filterable: true,\n                accessor: 'location',\n                filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, {keys: ['location']}),\n                filterAll: true\n            },\n            {\n                Header: 'Chat With Doctor',\n                sortable: false,\n                Cell: () => (\n                    <Link to={\"/ChatPage/PatientChatPage\"}>\n                        <Button variant=\"contained\" color=\"secondary\" size={\"small\"}>Send Message</Button>\n                    </Link>)\n            },\n        ];\n        return (\n            <div>\n                <div><PatientHeader name=\"yyy\"/></div>\n                <div className=\"list-div\">\n                    <p className=\"list-header\">Doctor List</p>\n                </div>\n\n                <ReactTable\n                    className={`-highlight`}\n                    columns={columns}\n                    data={this.state.doctorInfo}\n                    noDataText={`No Doctor Found`}\n                >\n                </ReactTable>\n            </div>\n        );\n    }\n}\n\nexport default PrePatientChat;\n"]},"metadata":{},"sourceType":"module"}