{"ast":null,"code":"import _classCallCheck from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Container}from\"reactstrap\";import{DataTable,TableHeader,Button}from\"react-mdl\";import{getPatients,updateWatchlist,getWatchlist}from\"../../../actions/doctor\";import Patient from\"../Patient/Patient\";import\"./styles.css\";var SearchBar=/*#__PURE__*/function(_React$Component){_inherits(SearchBar,_React$Component);var _super=_createSuper(SearchBar);function SearchBar(props){var _this;_classCallCheck(this,SearchBar);_this=_super.call(this,props);_this.handleChange=function(event){_this.setState({keyword:event.target.value});};_this.state={keyword:\"\",found:[],patients:[],watchlist:null,doctor:props.app.state.currentDoctor};_this.handleSearchClick=_this.handleSearchClick.bind(_assertThisInitialized(_this));return _this;}_createClass(SearchBar,[{key:\"showSearch\",value:function showSearch(found_patients){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"br\",null),\" \",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(DataTable,{className:\"dtable\",shadow:0,rows:found_patients},/*#__PURE__*/React.createElement(TableHeader,{name:\"Id\",tooltip:\"The id of patients\"},\"Id\"),/*#__PURE__*/React.createElement(TableHeader,{name:\"name\",tooltip:\"The name of patients\"},\"Name\"),/*#__PURE__*/React.createElement(TableHeader,{name:\"province\",tooltip:\"The province of patient(s)\"},\"Province\"),/*#__PURE__*/React.createElement(TableHeader,{name:\"age\",tooltip:\"The age of patient(s)\"},\"Age\"),/*#__PURE__*/React.createElement(TableHeader,{name:\"province\",tooltip:\"The gender of patient(s)\"},\"Gender\"),/*#__PURE__*/React.createElement(TableHeader,{name:\"add\"},\"Add\")));}},{key:\"showWatchlist\",value:function showWatchlist(){if(!this.state.watchlist){return/*#__PURE__*/React.createElement(\"p\",null,\"Watchlist Loading!\");}else if(this.state.watchlist.length<1){return/*#__PURE__*/React.createElement(\"p\",null,\"No Patient on watchlist at the moment!\");}else{return/*#__PURE__*/React.createElement(\"ul\",null,this.state.watchlist.map(function(patient){return/*#__PURE__*/React.createElement(\"li\",{key:patient.userId},/*#__PURE__*/React.createElement(Patient,{key:patient._id,name:patient.username,userId:patient._id,province:patient.province}),/*#__PURE__*/React.createElement(Button,{raised:true,colored:true,ripple:true},\"kick\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null));}));}}},{key:\"handleSearchClick\",value:function handleSearchClick(){// check if name or id matches\ngetPatients(this);}},{key:\"componentWillMount\",value:function componentWillMount(){getWatchlist(this,this.props.app.state.currentDoctor._id);}},{key:\"render\",value:function render(){var _this2=this;var app=this.props.app;var found_patients=[];if(this.state.keyword.length<1){found_patients=this.state.patients.map(function(user){console.log(user);return{name:\"\".concat(user.username),Id:\"\".concat(user._id),province:\"\".concat(user.province),age:\"\".concat(user.age),add:/*#__PURE__*/React.createElement(Button,{raised:true,colored:true,ripple:true,onClick:function onClick(event){return updateWatchlist(_this2,event.target,app.state.currentDoctor,user);}},\"Add\")};});}else{found_patients=this.state.patients.filter(function(patient){return patient._id.includes(_this2.state.keyword)||patient.username.includes(_this2.state.keyword);});found_patients=found_patients.map(function(user){return{name:\"\".concat(user.username),Id:\"\".concat(user._id),province:\"\".concat(user.province),age:\"\".concat(user.age),add:/*#__PURE__*/React.createElement(Button,{raised:true,colored:true,ripple:true,onClick:function onClick(event){return updateWatchlist(_this2,event.target,app.state.currentDoctor,user);}},\"Add\")};});}console.log(this.state.watchlist);return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"div\",{className:\"SearchBar\"},/*#__PURE__*/React.createElement(\"label\",null,\"Search Patient:\",/*#__PURE__*/React.createElement(\"input\",{className:\"input\",type:\"text\",placeholder:\"Search a patient by username\",value:this.state.keyword,onChange:this.handleChange}),/*#__PURE__*/React.createElement(Button,{raised:true,colored:true,ripple:true,className:\"button\",onClick:function onClick(){return _this2.handleSearchClick();}},\"Search\"),this.showSearch(found_patients))),/*#__PURE__*/React.createElement(\"h3\",null,\"Watchlist:\"),this.showWatchlist());}}]);return SearchBar;}(React.Component);export default SearchBar;","map":{"version":3,"sources":["/Users/yehuang/309_group/client/src/components/DoctorDashboard/SearchBar/SearchBar.js"],"names":["React","Container","DataTable","TableHeader","Button","getPatients","updateWatchlist","getWatchlist","Patient","SearchBar","props","handleChange","event","setState","keyword","target","value","state","found","patients","watchlist","doctor","app","currentDoctor","handleSearchClick","bind","found_patients","length","map","patient","userId","_id","username","province","user","console","log","name","Id","age","add","filter","includes","showSearch","showWatchlist","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Container } from \"reactstrap\";\nimport { DataTable, TableHeader, Button} from \"react-mdl\";\nimport { getPatients, updateWatchlist, getWatchlist } from \"../../../actions/doctor\"\nimport Patient from \"../Patient/Patient\";\nimport \"./styles.css\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keyword: \"\",\n      found: [],\n      patients: [],\n      watchlist: null,\n      doctor: props.app.state.currentDoctor\n    };\n    this.handleSearchClick = this.handleSearchClick.bind(this);\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      keyword: event.target.value,\n    });\n  };\n\n  showSearch(found_patients) {\n\n    return (\n      <div>\n        <br></br> <br></br>\n        <DataTable className=\"dtable\" shadow={0} rows={found_patients}>\n          <TableHeader name=\"Id\" tooltip=\"The id of patients\">\n            Id\n          </TableHeader>\n          <TableHeader name=\"name\" tooltip=\"The name of patients\">\n            Name\n          </TableHeader>\n          <TableHeader name=\"province\" tooltip=\"The province of patient(s)\">\n            Province\n          </TableHeader>\n          <TableHeader name=\"age\" tooltip=\"The age of patient(s)\">\n            Age\n          </TableHeader>\n          <TableHeader name=\"province\" tooltip=\"The gender of patient(s)\">\n            Gender\n          </TableHeader>\n          <TableHeader name=\"add\">Add</TableHeader>\n        </DataTable>\n      </div>\n    );\n  }\n\n  showWatchlist() {\n    if (!this.state.watchlist) {\n      return (<p>Watchlist Loading!</p>)\n    } else if (this.state.watchlist.length < 1) {\n      return (<p>No Patient on watchlist at the moment!</p>)\n    } else {\n      return( \n        <ul>\n        {this.state.watchlist.map((patient) => (\n          <li key={patient.userId}>\n            <Patient\n              key={patient._id}\n              name={patient.username}\n              userId={patient._id}\n              province={patient.province}\n            />\n            <Button raised colored ripple>kick</Button>\n            <br></br>\n            <br></br>\n          </li>\n        ))}\n      </ul>\n      )\n    }\n  }\n\n  handleSearchClick() {\n    // check if name or id matches\n    getPatients(this)\n  }\n\n  componentWillMount() {\n    getWatchlist(this, this.props.app.state.currentDoctor._id)\n  }\n\n\n  render() {\n    const {app} = this.props\n\n    let found_patients = []\n    if (this.state.keyword.length < 1) {\n      found_patients =  this.state.patients.map((user) => {\n        console.log(user)\n        return (\n        {name: `${user.username}`, \n        Id: `${user._id}`, \n        province: `${user.province}`,\n        age: `${user.age}`,\n        add: <Button raised colored ripple onClick={(event)=> updateWatchlist(this, event.target, app.state.currentDoctor, user)} >Add</Button>\n        }\n        )\n        })\n    } else {\n      found_patients = this.state.patients.filter((patient) => (\n        patient._id.includes(this.state.keyword) || patient.username.includes(this.state.keyword)\n      ))\n      found_patients = found_patients.map((user) => {\n        return (\n          {name: `${user.username}`, \n          Id: `${user._id}`, \n          province: `${user.province}`,\n          age: `${user.age}`,\n          add: <Button raised colored ripple onClick={(event)=> updateWatchlist(this, event.target, app.state.currentDoctor, user)} >Add</Button>\n        }\n        )\n      })\n    }\n\n    console.log(this.state.watchlist)\n\n    return (\n      <Container>\n        <div className=\"SearchBar\">\n          <label>\n            Search Patient:\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Search a patient by username\"\n              value={this.state.keyword}\n              onChange={this.handleChange}\n            />\n            <Button raised colored ripple\n              className=\"button\"\n              onClick={() => this.handleSearchClick()}\n            >\n              Search\n            </Button>\n            {this.showSearch(found_patients)}\n          </label>\n        </div>\n        <h3>Watchlist:</h3>\n        {this.showWatchlist()}\n      </Container>\n    );\n  }\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}