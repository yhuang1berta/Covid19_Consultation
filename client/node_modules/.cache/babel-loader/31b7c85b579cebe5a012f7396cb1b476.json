{"ast":null,"code":"var _jsxFileName = \"/Users/yehuang/309_group/client/src/components/ChatPage/PreChatPage/PreDoctorChat.js\";\nimport React from \"react\";\nimport LoginHeader from \"../../DoctorDashboard/LoginHeader/LoginHeader\";\nimport ReactTable from 'react-table-v6';\nimport \"react-table-v6/react-table.css\";\nimport matchSorter from \"match-sorter\";\nimport { getPatientMessage, setDoctorChatPage } from \"../../../actions/message\";\nimport { Container } from \"@material-ui/core\";\n\nclass PreDoctorChat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props.history.push(\"/ChatPage/PreDoctorChat\");\n    this.state = {\n      currentDoctor: {\n        username: ''\n      },\n      patientMessages: []\n    };\n  }\n\n  componentDidMount() {\n    getPatientMessage(this);\n  }\n\n  render() {\n    const {\n      history,\n      app\n    } = this.props;\n    const columns = [{\n      Header: 'Patient Name',\n      id: 'patientName',\n      filterable: true,\n      accessor: 'sender',\n      filterMethod: (filter, rows) => matchSorter(rows, filter.value, {\n        keys: ['patientName']\n      }),\n      filterAll: true\n    }, {\n      Header: 'Message',\n      id: 'message',\n      sortable: false,\n      filterable: true,\n      accessor: 'text',\n      filterMethod: (filter, rows) => matchSorter(rows, filter.value, {\n        keys: ['message']\n      }),\n      filterAll: true\n    }, {\n      Header: 'Chat With Patient',\n      sortable: false,\n      accessor: 'sender',\n      Cell: props => /*#__PURE__*/React.createElement(\"button\", {\n        className: \"message-b\",\n        id: props.value,\n        onClick: event => {\n          setDoctorChatPage(event.target.id, app, history);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, \"Send Message\")\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pcp-main-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(LoginHeader, {\n      history: history,\n      app: app,\n      name: this.state.currentDoctor.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"list-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"patient messages:\")), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ReactTable, {\n      className: `-highlight`,\n      columns: columns,\n      data: this.state.patientMessages,\n      noDataText: `No Patient Message Found`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default PreDoctorChat;","map":{"version":3,"sources":["/Users/yehuang/309_group/client/src/components/ChatPage/PreChatPage/PreDoctorChat.js"],"names":["React","LoginHeader","ReactTable","matchSorter","getPatientMessage","setDoctorChatPage","Container","PreDoctorChat","Component","constructor","props","history","push","state","currentDoctor","username","patientMessages","componentDidMount","render","app","columns","Header","id","filterable","accessor","filterMethod","filter","rows","value","keys","filterAll","sortable","Cell","event","target"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport LoginHeader from \"../../DoctorDashboard/LoginHeader/LoginHeader\";\nimport ReactTable from 'react-table-v6';\nimport \"react-table-v6/react-table.css\";\nimport matchSorter from \"match-sorter\";\nimport {getPatientMessage, setDoctorChatPage} from \"../../../actions/message\";\nimport {Container} from \"@material-ui/core\";\n\nclass PreDoctorChat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.history.push(\"/ChatPage/PreDoctorChat\");\n        this.state = {\n            currentDoctor: {\n                username: ''\n            },\n            patientMessages: []\n        };\n    };\n\n    componentDidMount() {\n        getPatientMessage(this)\n    }\n\n    render() {\n        const {history, app} = this.props;\n        const columns = [\n            {\n                Header: 'Patient Name',\n                id: 'patientName',\n                filterable: true,\n                accessor: 'sender',\n                filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, {keys: ['patientName']}),\n                filterAll: true\n            },\n            {\n                Header: 'Message',\n                id: 'message',\n                sortable: false,\n                filterable: true,\n                accessor: 'text',\n                filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, {keys: ['message']}),\n                filterAll: true\n            },\n            {\n                Header: 'Chat With Patient',\n                sortable: false,\n                accessor: 'sender',\n                Cell: (props) => (\n                    <button className={\"message-b\"} id={props.value} onClick={event => {\n                        setDoctorChatPage(event.target.id, app, history)\n                    }}>\n                        Send Message\n                    </button>)\n            },\n        ];\n        return (\n            <div className=\"pcp-main-div\">\n                <LoginHeader history={history} app={app} name={this.state.currentDoctor.username}/>\n                <div className=\"list-div\">\n                    <p className=\"list-header\">\n                        patient messages:\n                    </p>\n                </div>\n                <Container>\n                    <ReactTable\n                        className={`-highlight`}\n                        columns={columns}\n                        data={this.state.patientMessages}\n                        noDataText={`No Patient Message Found`}\n                    >\n                    </ReactTable>\n                </Container>\n            </div>\n\n        );\n    }\n}\n\nexport default PreDoctorChat;\n\n"]},"metadata":{},"sourceType":"module"}