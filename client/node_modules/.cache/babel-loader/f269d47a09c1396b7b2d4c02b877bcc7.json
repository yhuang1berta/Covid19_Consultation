{"ast":null,"code":"import _defineProperty from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";export var readDoctorCookie=function readDoctorCookie(app){var url=\"/doctors/check-session\";fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){if(json&&json.currentDoctor){app.setState({currentDoctor:json.currentDoctor});}}).catch(function(error){console.log(error);});};export var readSelectedDoctorCookie=function readSelectedDoctorCookie(app){var url=\"/doctors/contact-session\";fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){if(json&&json.selectedDoctor){app.setState({selectedDoctor:json.selectedDoctor});}}).catch(function(error){console.log(error);});};export var updateLoginForm=function updateLoginForm(loginComp,field){var value=field.value;var name=field.name;loginComp.setState(_defineProperty({},name,value));};export var login=function login(loginComp,app){var request=new Request(\"/doctors/login\",{method:\"post\",body:JSON.stringify(loginComp.state),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);if(json.currentDoctor!==undefined){app.setState({currentDoctor:json.currentDoctor});}}).catch(function(error){console.log(error);loginComp.setState({wrong:true});});};export var logout=function logout(app){var url=\"/logout\";fetch(url).then(function(res){app.setState({currentDoctor:null,message:{type:\"\",body:\"\"}});}).catch(function(error){console.log(error);});};export var getDoctors=function getDoctors(ppc){var url=\"/doctors\";fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){ppc.setState({doctorInfo:json});}).catch(function(error){console.log(error);});};export var addPatientToWatchlist=function addPatientToWatchlist(button,doctor,patient){var url=\"/doctors\";console.log(patient);console.log(doctor);var request=new Request(url,{method:\"put\",body:JSON.stringify({patient:patient,doctor:doctor}),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){button.innerText='Added!';setTimeout(function(){button.innerText='Add to List';},1000);}else{button.innerText='Failed!';setTimeout(function(){button.innerText='Add to List';},1000);}}).catch(function(error){console.log(error);});};export var endDoctorChat=function endDoctorChat(app){var url=\"/patients/contact-session\";var request=new Request(url,{method:\"put\",body:JSON.stringify({selectedPatient:null}),headers:{Accept:\"application/json, text/plain, */*\",\"Content-type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){app.setState({selectedPatient:json.selectedPatient});}).catch(function(error){console.log(error);});};export var getPatients=function getPatients(app){var url=\"/patients\";fetch(url).then(function(res){if(res.status===200){return res.json();}else{throw new Error();}}).then(function(json){if(json!==null&&json!==undefined){app.setState({patients:json});// app.setState({error: \"success\"})\n}else{app.setState({error:\"Cannot retrieve patient accounts information!\"});}}).catch(function(e){app.setState({error:\"Cannot retrieve patient accounts information!\"});});};","map":{"version":3,"sources":["/Users/yehuang/309_group/client/src/actions/doctor.js"],"names":["readDoctorCookie","app","url","fetch","then","res","status","json","currentDoctor","setState","catch","error","console","log","readSelectedDoctorCookie","selectedDoctor","updateLoginForm","loginComp","field","value","name","login","request","Request","method","body","JSON","stringify","state","headers","Accept","undefined","wrong","logout","message","type","getDoctors","ppc","doctorInfo","addPatientToWatchlist","button","doctor","patient","innerText","setTimeout","endDoctorChat","selectedPatient","getPatients","Error","patients","e"],"mappings":"wJAAA,MAAO,IAAMA,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,GAAD,CAAS,CACrC,GAAMC,CAAAA,GAAG,CAAG,wBAAZ,CACAC,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACU,SAACC,GAAD,CAAS,CACX,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACJ,CALL,EAMKH,IANL,CAMU,SAACG,IAAD,CAAU,CACZ,GAAIA,IAAI,EAAIA,IAAI,CAACC,aAAjB,CAAgC,CAC5BP,GAAG,CAACQ,QAAJ,CAAa,CAACD,aAAa,CAAED,IAAI,CAACC,aAArB,CAAb,EACH,CACJ,CAVL,EAWKE,KAXL,CAWW,SAACC,KAAD,CAAW,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CAbL,EAcH,CAhBM,CAkBP,MAAO,IAAMG,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACb,GAAD,CAAS,CAC7C,GAAMC,CAAAA,GAAG,CAAG,0BAAZ,CACAC,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACU,SAACC,GAAD,CAAS,CACX,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACJ,CALL,EAMKH,IANL,CAMU,SAACG,IAAD,CAAU,CACZ,GAAIA,IAAI,EAAIA,IAAI,CAACQ,cAAjB,CAAiC,CAC7Bd,GAAG,CAACQ,QAAJ,CAAa,CAACM,cAAc,CAAER,IAAI,CAACQ,cAAtB,CAAb,EACH,CACJ,CAVL,EAWKL,KAXL,CAWW,SAACC,KAAD,CAAW,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CAbL,EAcH,CAhBM,CAmBP,MAAO,IAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,SAAD,CAAYC,KAAZ,CAAsB,CACjD,GAAMC,CAAAA,KAAK,CAAGD,KAAK,CAACC,KAApB,CACA,GAAMC,CAAAA,IAAI,CAAGF,KAAK,CAACE,IAAnB,CAEAH,SAAS,CAACR,QAAV,oBACKW,IADL,CACYD,KADZ,GAGH,CAPM,CASP,MAAO,IAAME,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACJ,SAAD,CAAYhB,GAAZ,CAAoB,CACrC,GAAMqB,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAY,gBAAZ,CAA8B,CAC1CC,MAAM,CAAE,MADkC,CAE1CC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeV,SAAS,CAACW,KAAzB,CAFoC,CAG1CC,OAAO,CAAE,CACLC,MAAM,CAAE,mCADH,CAEL,eAAgB,kBAFX,CAHiC,CAA9B,CAAhB,CASA3B,KAAK,CAACmB,OAAD,CAAL,CACKlB,IADL,CACU,SAACC,GAAD,CAAS,CACX,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACJ,CALL,EAMKH,IANL,CAMU,SAACG,IAAD,CAAU,CACZK,OAAO,CAACC,GAAR,CAAYN,IAAZ,EACA,GAAIA,IAAI,CAACC,aAAL,GAAuBuB,SAA3B,CAAsC,CAClC9B,GAAG,CAACQ,QAAJ,CAAa,CAACD,aAAa,CAAED,IAAI,CAACC,aAArB,CAAb,EACH,CACJ,CAXL,EAYKE,KAZL,CAYW,SAACC,KAAD,CAAW,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACAM,SAAS,CAACR,QAAV,CAAmB,CAACuB,KAAK,CAAE,IAAR,CAAnB,EACH,CAfL,EAgBH,CA1BM,CA4BP,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAChC,GAAD,CAAS,CAC3B,GAAMC,CAAAA,GAAG,CAAG,SAAZ,CAEAC,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACU,SAACC,GAAD,CAAS,CACXJ,GAAG,CAACQ,QAAJ,CAAa,CACTD,aAAa,CAAE,IADN,CAET0B,OAAO,CAAE,CAACC,IAAI,CAAE,EAAP,CAAWV,IAAI,CAAE,EAAjB,CAFA,CAAb,EAIH,CANL,EAOKf,KAPL,CAOW,SAACC,KAAD,CAAW,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CATL,EAUH,CAbM,CAeP,MAAO,IAAMyB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,GAAD,CAAS,CAC/B,GAAMnC,CAAAA,GAAG,CAAG,UAAZ,CACAC,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACU,SAACC,GAAD,CAAS,CACX,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACJ,CALL,EAMKH,IANL,CAMU,SAACG,IAAD,CAAU,CACZ8B,GAAG,CAAC5B,QAAJ,CAAa,CACT6B,UAAU,CAAE/B,IADH,CAAb,EAGH,CAVL,EAWKG,KAXL,CAWW,SAACC,KAAD,CAAW,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CAbL,EAcH,CAhBM,CAkBP,MAAO,IAAM4B,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,MAAD,CAASC,MAAT,CAAiBC,OAAjB,CAA6B,CAC9D,GAAMxC,CAAAA,GAAG,CAAG,UAAZ,CACAU,OAAO,CAACC,GAAR,CAAY6B,OAAZ,EACA9B,OAAO,CAACC,GAAR,CAAY4B,MAAZ,EACA,GAAMnB,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAYrB,GAAZ,CAAiB,CAC7BsB,MAAM,CAAE,KADqB,CAE7BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBe,OAAO,CAAEA,OADQ,CAEjBD,MAAM,CAAEA,MAFS,CAAf,CAFuB,CAM7BZ,OAAO,CAAE,CACLC,MAAM,CAAE,mCADH,CAEL,eAAgB,kBAFX,CANoB,CAAjB,CAAhB,CAWA3B,KAAK,CAACmB,OAAD,CAAL,CAAelB,IAAf,CAAoB,SAAAC,GAAG,CAAI,CACvB,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpBkC,MAAM,CAACG,SAAP,CAAmB,QAAnB,CACAC,UAAU,CAAC,UAAY,CACnBJ,MAAM,CAACG,SAAP,CAAmB,aAAnB,CACH,CAFS,CAEP,IAFO,CAAV,CAGH,CALD,IAKO,CACHH,MAAM,CAACG,SAAP,CAAmB,SAAnB,CACAC,UAAU,CAAC,UAAY,CACnBJ,MAAM,CAACG,SAAP,CAAmB,aAAnB,CACH,CAFS,CAEP,IAFO,CAAV,CAGH,CACJ,CAZD,EAYGjC,KAZH,CAYS,SAAAC,KAAK,CAAI,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CAdD,EAgBH,CA/BM,CAiCP,MAAO,IAAMkC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAC5C,GAAD,CAAS,CAClC,GAAMC,CAAAA,GAAG,CAAG,2BAAZ,CACA,GAAMoB,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAYrB,GAAZ,CAAiB,CAC7BsB,MAAM,CAAE,KADqB,CAE7BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBmB,eAAe,CAAE,IADA,CAAf,CAFuB,CAK7BjB,OAAO,CAAE,CACLC,MAAM,CAAE,mCADH,CAEL,eAAgB,kBAFX,CALoB,CAAjB,CAAhB,CAUA3B,KAAK,CAACmB,OAAD,CAAL,CAAelB,IAAf,CAAoB,SAAAC,GAAG,CAAI,CACvB,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACJ,CAJD,EAIGH,IAJH,CAIQ,SAAAG,IAAI,CAAI,CACZN,GAAG,CAACQ,QAAJ,CACI,CACIqC,eAAe,CAAEvC,IAAI,CAACuC,eAD1B,CADJ,EAIH,CATD,EAUKpC,KAVL,CAUW,SAAAC,KAAK,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CAZL,EAaH,CAzBM,CA2BP,MAAO,IAAMoC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAC9C,GAAD,CAAS,CAChC,GAAMC,CAAAA,GAAG,CAAG,WAAZ,CAEAC,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACM,SAACC,GAAD,CAAS,CACb,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACtB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACD,CAFD,IAEO,CACL,KAAM,IAAIyC,CAAAA,KAAJ,EAAN,CACD,CACF,CAPD,EAOG5C,IAPH,CAOQ,SAACG,IAAD,CAAU,CAChB,GAAIA,IAAI,GAAK,IAAT,EAAiBA,IAAI,GAAKwB,SAA9B,CAAyC,CACvC9B,GAAG,CAACQ,QAAJ,CAAa,CAACwC,QAAQ,CAAE1C,IAAX,CAAb,EACA;AACD,CAHD,IAGO,CACLN,GAAG,CAACQ,QAAJ,CAAa,CAACE,KAAK,CAAE,+CAAR,CAAb,EACD,CACF,CAdD,EAcGD,KAdH,CAcS,SAACwC,CAAD,CAAO,CACdjD,GAAG,CAACQ,QAAJ,CAAa,CAACE,KAAK,CAAE,+CAAR,CAAb,EACD,CAhBD,EAiBD,CApBI","sourcesContent":["export const readDoctorCookie = (app) => {\n    const url = \"/doctors/check-session\";\n    fetch(url)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            if (json && json.currentDoctor) {\n                app.setState({currentDoctor: json.currentDoctor});\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n};\n\nexport const readSelectedDoctorCookie = (app) => {\n    const url = \"/doctors/contact-session\";\n    fetch(url)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            if (json && json.selectedDoctor) {\n                app.setState({selectedDoctor: json.selectedDoctor});\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n};\n\n\nexport const updateLoginForm = (loginComp, field) => {\n    const value = field.value;\n    const name = field.name;\n\n    loginComp.setState({\n        [name]: value,\n    });\n};\n\nexport const login = (loginComp, app) => {\n    const request = new Request(\"/doctors/login\", {\n        method: \"post\",\n        body: JSON.stringify(loginComp.state),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\",\n        },\n    });\n\n    fetch(request)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            console.log(json);\n            if (json.currentDoctor !== undefined) {\n                app.setState({currentDoctor: json.currentDoctor});\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n            loginComp.setState({wrong: true})\n        });\n};\n\nexport const logout = (app) => {\n    const url = \"/logout\";\n\n    fetch(url)\n        .then((res) => {\n            app.setState({\n                currentDoctor: null,\n                message: {type: \"\", body: \"\"},\n            });\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n};\n\nexport const getDoctors = (ppc) => {\n    const url = \"/doctors\";\n    fetch(url)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            ppc.setState({\n                doctorInfo: json\n            })\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n};\n\nexport const addPatientToWatchlist = (button, doctor, patient) => {\n    const url = \"/doctors\";\n    console.log(patient);\n    console.log(doctor);\n    const request = new Request(url, {\n        method: \"put\",\n        body: JSON.stringify({\n            patient: patient,\n            doctor: doctor\n        }),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\",\n        },\n    });\n    fetch(request).then(res => {\n        if (res.status === 200) {\n            button.innerText = 'Added!';\n            setTimeout(function () {\n                button.innerText = 'Add to List'\n            }, 1000)\n        } else {\n            button.innerText = 'Failed!';\n            setTimeout(function () {\n                button.innerText = 'Add to List'\n            }, 1000)\n        }\n    }).catch(error => {\n        console.log(error)\n    })\n\n};\n\nexport const endDoctorChat = (app) => {\n    const url = \"/patients/contact-session\";\n    const request = new Request(url, {\n        method: \"put\",\n        body: JSON.stringify({\n            selectedPatient: null\n        }),\n        headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-type\": \"application/json\",\n        },\n    });\n    fetch(request).then(res => {\n        if (res.status === 200) {\n            return res.json()\n        }\n    }).then(json => {\n        app.setState(\n            {\n                selectedPatient: json.selectedPatient\n            })\n    })\n        .catch(error => {\n            console.log(error);\n        });\n};\n\nexport const getPatients = (app) => {\n    const url = \"/patients\"\n  \n    fetch(url)\n    .then((res) => {\n      if (res.status === 200) {\n        return res.json()\n      } else {\n        throw new Error()\n      }\n    }).then((json) => {\n      if (json !== null && json !== undefined) {\n        app.setState({patients: json})\n        // app.setState({error: \"success\"})\n      } else {\n        app.setState({error: \"Cannot retrieve patient accounts information!\"})\n      }\n    }).catch((e) => {\n      app.setState({error: \"Cannot retrieve patient accounts information!\"})\n    })\n  }"]},"metadata":{},"sourceType":"module"}