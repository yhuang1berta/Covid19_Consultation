{"ast":null,"code":"var _jsxFileName = \"/Users/yehuang/covid_consultant/client/src/components/ChatPage/PreChatPage/PrePatientChat.js\";\nimport React from \"react\";\nimport PatientHeader from \"../../PatientDashboard/components/PatientHeader/PatientHeader\";\nimport \"./styles.css\";\nimport { doctorType } from \"../../RegistrationInfo/infomation\";\nimport ReactTable from 'react-table-v6';\nimport \"react-table-v6/react-table.css\";\nimport matchSorter from 'match-sorter';\nimport { getDoctors } from '../../../actions/doctor';\nimport { setPatientChatPage } from \"../../../actions/message\";\nimport { endPatientChat, readPatientCookie } from \"../../../actions/patients\";\nimport { Container } from \"@material-ui/core\";\n\nclass PrePatientChat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPatient: {\n        username: ''\n      },\n      doctorInfo: []\n    };\n\n    this.createOptions = opt => {\n      let select = [];\n\n      for (let i = 0; i < opt.length; i++) {\n        select.push( /*#__PURE__*/React.createElement(\"option\", {\n          value: `${opt[i]}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }\n        }, opt[i]));\n      }\n\n      return select;\n    };\n\n    this.props.history.push(\"/ChatPage/PrePatientChat\");\n  }\n\n  componentDidMount() {\n    endPatientChat(this.props.app);\n    readPatientCookie(this);\n    getDoctors(this);\n  }\n\n  render() {\n    const {\n      history,\n      app\n    } = this.props;\n    const name = this.state.currentPatient.username;\n    const columns = [{\n      Header: 'Doctor Name',\n      id: 'doctorName',\n      filterable: true,\n      accessor: 'username',\n      filterMethod: (filter, rows) => matchSorter(rows, filter.value, {\n        keys: ['doctorName']\n      }),\n      filterAll: true\n    }, {\n      Header: 'Doctor Type',\n      filterable: true,\n      accessor: 'doctorType',\n      filterMethod: (filter, row) => {\n        if (filter.value === \"All\") {\n          return true;\n        }\n\n        return row[filter.id] === filter.value;\n      },\n      Filter: ({\n        filter,\n        onChange\n      }) => /*#__PURE__*/React.createElement(\"select\", {\n        onChange: event => onChange(event.target.value),\n        style: {\n          width: \"100%\"\n        },\n        value: filter ? filter.value : \"All\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"All\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }, \"All\"), this.createOptions(doctorType))\n    }, {\n      Header: 'Location',\n      id: 'location',\n      filterable: true,\n      accessor: 'location',\n      filterMethod: (filter, rows) => matchSorter(rows, filter.value, {\n        keys: ['location']\n      }),\n      filterAll: true\n    }, {\n      Header: 'Chat With Doctor',\n      sortable: false,\n      accessor: 'username',\n      Cell: props => /*#__PURE__*/React.createElement(\"button\", {\n        className: 'message-b',\n        id: props.value,\n        onClick: event => {\n          setPatientChatPage(event.target.id, app, history);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, \"Send Message\")\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'pcp-main-div',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PatientHeader, {\n      history: history,\n      app: app,\n      name: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"list-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, \"Doctor List\")), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ReactTable, {\n      className: `-highlight`,\n      columns: columns,\n      data: this.state.doctorInfo,\n      noDataText: `No Doctor Found`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default PrePatientChat;","map":{"version":3,"sources":["/Users/yehuang/covid_consultant/client/src/components/ChatPage/PreChatPage/PrePatientChat.js"],"names":["React","PatientHeader","doctorType","ReactTable","matchSorter","getDoctors","setPatientChatPage","endPatientChat","readPatientCookie","Container","PrePatientChat","Component","constructor","props","state","currentPatient","username","doctorInfo","createOptions","opt","select","i","length","push","history","componentDidMount","app","render","name","columns","Header","id","filterable","accessor","filterMethod","filter","rows","value","keys","filterAll","row","Filter","onChange","event","target","width","sortable","Cell"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PatientHeader from \"../../PatientDashboard/components/PatientHeader/PatientHeader\";\nimport \"./styles.css\";\nimport {doctorType} from \"../../RegistrationInfo/infomation\";\nimport ReactTable from 'react-table-v6';\nimport \"react-table-v6/react-table.css\";\nimport matchSorter from 'match-sorter';\nimport {getDoctors} from '../../../actions/doctor';\nimport {setPatientChatPage} from \"../../../actions/message\";\nimport {endPatientChat, readPatientCookie} from \"../../../actions/patients\";\nimport {Container} from \"@material-ui/core\";\n\nclass PrePatientChat extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.props.history.push(\"/ChatPage/PrePatientChat\");\n    }\n\n    state = {\n        currentPatient: {\n            username: ''\n        },\n        doctorInfo: []\n    };\n\n    createOptions = (opt) => {\n        let select = [];\n        for (let i = 0; i < opt.length; i++) {\n            select.push(<option value={`${opt[i]}`}>{opt[i]}</option>)\n        }\n        return select\n    };\n\n    componentDidMount() {\n        endPatientChat(this.props.app);\n        readPatientCookie(this);\n        getDoctors(this);\n    }\n\n    render() {\n        const {history, app} = this.props;\n        const name = this.state.currentPatient.username;\n        const columns = [\n            {\n                Header: 'Doctor Name',\n                id: 'doctorName',\n                filterable: true,\n                accessor: 'username',\n                filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, {keys: ['doctorName']}),\n                filterAll: true\n            },\n            {\n                Header: 'Doctor Type',\n                filterable: true,\n                accessor: 'doctorType',\n                filterMethod: (filter, row) => {\n                    if (filter.value === \"All\") {\n                        return true;\n                    }\n                    return row[filter.id] === filter.value;\n                },\n                Filter: ({filter, onChange}) =>\n                    <select\n                        onChange={event => onChange(event.target.value)}\n                        style={{width: \"100%\"}}\n                        value={filter ? filter.value : \"All\"}\n                    >\n                        <option value='All'>All</option>\n                        {this.createOptions(doctorType)}\n                    </select>\n            },\n            {\n                Header: 'Location',\n                id: 'location',\n                filterable: true,\n                accessor: 'location',\n                filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, {keys: ['location']}),\n                filterAll: true\n            },\n            {\n                Header: 'Chat With Doctor',\n                sortable: false,\n                accessor: 'username',\n                Cell: (props) => (\n                    <button className={'message-b'} id={props.value} onClick={event => {\n                        setPatientChatPage(event.target.id, app, history)\n                    }}>\n                        Send Message\n                    </button>\n\n                )\n            },\n        ];\n        return (\n            <div className={'pcp-main-div'}>\n                <PatientHeader history={history} app={app} name={name}/>\n                <div className={\"list-div\"}>\n                    <p className=\"list-header\">Doctor List</p>\n                </div>\n                <Container>\n                    <ReactTable\n                        className={`-highlight`}\n                        columns={columns}\n                        data={this.state.doctorInfo}\n                        noDataText={`No Doctor Found`}\n                    >\n                    </ReactTable>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default PrePatientChat;\n"]},"metadata":{},"sourceType":"module"}