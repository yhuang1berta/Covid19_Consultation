{"ast":null,"code":"var _jsxFileName = \"/Users/yehuang/covid_consultant/client/src/components/DoctorDashboard/SearchBar/SearchBar.js\";\nimport React from \"react\";\nimport { Container } from \"reactstrap\";\nimport { DataTable, TableHeader, Button, Grid, Cell } from \"react-mdl\";\nimport { getPatients, AddToWatchlist, getWatchlist, removePatientFromWatchlist } from \"../../../actions/doctor\";\nimport \"./styles.css\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        keyword: event.target.value\n      });\n    };\n\n    this.state = {\n      keyword: \"\",\n      found: [],\n      patients: [],\n      watchlist: null,\n      doctor: props.app.state.currentDoctor,\n      error: \"\",\n      success: \"\"\n    };\n    this.handleSearchClick = this.handleSearchClick.bind(this);\n  }\n\n  showSearch(found_patients) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(DataTable, {\n      className: \"dtable\",\n      shadow: 0,\n      rows: found_patients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHeader, {\n      name: \"Id\",\n      tooltip: \"The id of patients\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, \"Id\"), /*#__PURE__*/React.createElement(TableHeader, {\n      name: \"name\",\n      tooltip: \"The name of patients\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(TableHeader, {\n      name: \"province\",\n      tooltip: \"The province of patient(s)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \"Province\"), /*#__PURE__*/React.createElement(TableHeader, {\n      name: \"age\",\n      tooltip: \"The age of patient(s)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"Age\"), /*#__PURE__*/React.createElement(TableHeader, {\n      name: \"province\",\n      tooltip: \"The gender of patient(s)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Gender\"), /*#__PURE__*/React.createElement(TableHeader, {\n      name: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Add\")));\n  } // update = (new_list) => {\n  //   this.setState({watchlist: new_list});\n  //   console.log(new_list)\n  // };\n\n\n  showWatchlist(watchlist) {\n    console.log(\"watchlist in showWatchlist\");\n    console.log(watchlist);\n\n    if (!watchlist) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 14\n        }\n      }, \"Watchlist Loading!\");\n    } else if (watchlist.length < 1) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 14\n        }\n      }, \"No Patient on watchlist at the moment!\");\n    } else {\n      return watchlist.map(patient => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Patient\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, \"UserName :\", patient.username), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, \"User Id :\", patient._id), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, \"Province :\", patient.province), /*#__PURE__*/React.createElement(Button, {\n        raised: true,\n        colored: true,\n        ripple: true,\n        onClick: event => {\n          removePatientFromWatchlist(this, patient);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, \"KICK OUT\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      })));\n    }\n  }\n\n  handleSearchClick() {\n    // check if name or id matches\n    getPatients(this);\n  }\n\n  componentWillMount() {\n    getWatchlist(this, this.props.app.state.currentDoctor._id);\n  }\n\n  render() {\n    const {\n      app\n    } = this.props;\n    let found_patients = [];\n\n    if (this.state.keyword.length < 1) {\n      found_patients = this.state.patients.map(user => {\n        return {\n          name: `${user.username}`,\n          Id: `${user._id}`,\n          province: `${user.province}`,\n          age: `${user.age}`,\n          add: /*#__PURE__*/React.createElement(Button, {\n            raised: true,\n            colored: true,\n            ripple: true,\n            onClick: event => AddToWatchlist(this, event.target, app.state.currentDoctor, user),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }\n          }, \"Add\")\n        };\n      });\n    } else {\n      found_patients = this.state.patients.filter(patient => patient._id.includes(this.state.keyword) || patient.username.includes(this.state.keyword));\n      found_patients = found_patients.map(user => {\n        return {\n          name: `${user.username}`,\n          Id: `${user._id}`,\n          province: `${user.province}`,\n          age: `${user.age}`,\n          add: /*#__PURE__*/React.createElement(Button, {\n            raised: true,\n            colored: true,\n            ripple: true,\n            onClick: event => AddToWatchlist(this, event.target, app.state.currentDoctor, user),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }\n          }, \"Add\")\n        };\n      });\n    }\n\n    console.log(`waitlist`, this.state.watchlist);\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Cell, {\n      col: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SearchBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, \"Search Patient:\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      placeholder: \"Search a patient by username\",\n      value: this.state.keyword,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      raised: true,\n      colored: true,\n      ripple: true,\n      className: \"button\",\n      onClick: () => this.handleSearchClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, \"Search\"), this.showSearch(found_patients))), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, this.state.error), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, this.state.success)), /*#__PURE__*/React.createElement(Cell, {\n      col: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Cell, {\n      col: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, \"Watchlist:\"), this.showWatchlist(this.state.watchlist))));\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/yehuang/covid_consultant/client/src/components/DoctorDashboard/SearchBar/SearchBar.js"],"names":["React","Container","DataTable","TableHeader","Button","Grid","Cell","getPatients","AddToWatchlist","getWatchlist","removePatientFromWatchlist","SearchBar","Component","constructor","props","handleChange","event","setState","keyword","target","value","state","found","patients","watchlist","doctor","app","currentDoctor","error","success","handleSearchClick","bind","showSearch","found_patients","showWatchlist","console","log","length","map","patient","username","_id","province","componentWillMount","render","user","name","Id","age","add","filter","includes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Container } from \"reactstrap\";\nimport { DataTable, TableHeader, Button, Grid, Cell } from \"react-mdl\";\nimport {\n  getPatients,\n  AddToWatchlist,\n  getWatchlist,\n  removePatientFromWatchlist,\n} from \"../../../actions/doctor\";\nimport \"./styles.css\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keyword: \"\",\n      found: [],\n      patients: [],\n      watchlist: null,\n      doctor: props.app.state.currentDoctor,\n      error: \"\",\n      success: \"\",\n    };\n    this.handleSearchClick = this.handleSearchClick.bind(this);\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      keyword: event.target.value,\n    });\n  };\n\n  showSearch(found_patients) {\n    return (\n      <div>\n        <br></br> <br></br>\n        <DataTable className=\"dtable\" shadow={0} rows={found_patients}>\n          <TableHeader name=\"Id\" tooltip=\"The id of patients\">\n            Id\n          </TableHeader>\n          <TableHeader name=\"name\" tooltip=\"The name of patients\">\n            Name\n          </TableHeader>\n          <TableHeader name=\"province\" tooltip=\"The province of patient(s)\">\n            Province\n          </TableHeader>\n          <TableHeader name=\"age\" tooltip=\"The age of patient(s)\">\n            Age\n          </TableHeader>\n          <TableHeader name=\"province\" tooltip=\"The gender of patient(s)\">\n            Gender\n          </TableHeader>\n          <TableHeader name=\"add\">Add</TableHeader>\n        </DataTable>\n      </div>\n    );\n  }\n\n  // update = (new_list) => {\n  //   this.setState({watchlist: new_list});\n  //   console.log(new_list)\n  // };\n\n  showWatchlist(watchlist) {\n    console.log(\"watchlist in showWatchlist\");\n    console.log(watchlist);\n    if (!watchlist) {\n      return <p>Watchlist Loading!</p>;\n    } else if (watchlist.length < 1) {\n      return <p>No Patient on watchlist at the moment!</p>;\n    } else {\n      return watchlist.map((patient) => (\n        <div className=\"Patient\">\n          <h3>UserName :{patient.username}</h3>\n          <p>User Id :{patient._id}</p>\n          <p>Province :{patient.province}</p>\n          <Button\n            raised\n            colored\n            ripple\n            onClick={(event) => {\n              removePatientFromWatchlist(this, patient);\n            }}\n          >\n            KICK OUT\n          </Button>{\" \"}\n          <br></br> <br></br>\n        </div>\n      ));\n    }\n  }\n\n  handleSearchClick() {\n    // check if name or id matches\n    getPatients(this);\n  }\n\n  componentWillMount() {\n    getWatchlist(this, this.props.app.state.currentDoctor._id);\n  }\n\n  render() {\n    const { app } = this.props;\n\n    let found_patients = [];\n    if (this.state.keyword.length < 1) {\n      found_patients = this.state.patients.map((user) => {\n        return {\n          name: `${user.username}`,\n          Id: `${user._id}`,\n          province: `${user.province}`,\n          age: `${user.age}`,\n          add: (\n            <Button\n              raised\n              colored\n              ripple\n              onClick={(event) =>\n                AddToWatchlist(\n                  this,\n                  event.target,\n                  app.state.currentDoctor,\n                  user\n                )\n              }\n            >\n              Add\n            </Button>\n          ),\n        };\n      });\n    } else {\n      found_patients = this.state.patients.filter(\n        (patient) =>\n          patient._id.includes(this.state.keyword) ||\n          patient.username.includes(this.state.keyword)\n      );\n      found_patients = found_patients.map((user) => {\n        return {\n          name: `${user.username}`,\n          Id: `${user._id}`,\n          province: `${user.province}`,\n          age: `${user.age}`,\n          add: (\n            <Button\n              raised\n              colored\n              ripple\n              onClick={(event) =>\n                AddToWatchlist(\n                  this,\n                  event.target,\n                  app.state.currentDoctor,\n                  user\n                )\n              }\n            >\n              Add\n            </Button>\n          ),\n        };\n      });\n    }\n    console.log(`waitlist`, this.state.watchlist);\n    return (\n      <Container>\n        <Grid>\n          <Cell col={4}>\n            <div className=\"SearchBar\">\n              <label>\n                Search Patient:\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder=\"Search a patient by username\"\n                  value={this.state.keyword}\n                  onChange={this.handleChange}\n                />\n                <Button\n                  raised\n                  colored\n                  ripple\n                  className=\"button\"\n                  onClick={() => this.handleSearchClick()}\n                >\n                  Search\n                </Button>\n                {this.showSearch(found_patients)}\n              </label>\n            </div>\n            <h3 className=\"error\">{this.state.error}</h3>\n            <h3 className=\"success\">{this.state.success}</h3>\n          </Cell>\n          <Cell col={4}></Cell>\n          <Cell col={4}>\n            <h3>Watchlist:</h3>\n            {this.showWatchlist(this.state.watchlist)}\n          </Cell>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}