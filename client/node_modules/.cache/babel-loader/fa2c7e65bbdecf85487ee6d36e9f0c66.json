{"ast":null,"code":"import _classCallCheck from\"/Users/yehuang/covid_consultant/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yehuang/covid_consultant/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/yehuang/covid_consultant/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/yehuang/covid_consultant/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import LoginHeader from\"../../DoctorDashboard/LoginHeader/LoginHeader\";import ReactTable from'react-table-v6';import\"react-table-v6/react-table.css\";import matchSorter from\"match-sorter\";import{getPatientMessage,setDoctorChatPage}from\"../../../actions/message\";import{Container}from\"@material-ui/core\";var PreDoctorChat=/*#__PURE__*/function(_React$Component){_inherits(PreDoctorChat,_React$Component);var _super=_createSuper(PreDoctorChat);function PreDoctorChat(props){var _this;_classCallCheck(this,PreDoctorChat);_this=_super.call(this,props);_this.props.history.push(\"/ChatPage/PreDoctorChat\");_this.state={currentDoctor:{username:''},patientMessages:[]};return _this;}_createClass(PreDoctorChat,[{key:\"componentDidMount\",value:function componentDidMount(){getPatientMessage(this);}},{key:\"render\",value:function render(){var _this$props=this.props,history=_this$props.history,app=_this$props.app;var columns=[{Header:'Patient Name',id:'patientName',filterable:true,accessor:'sender',filterMethod:function filterMethod(filter,rows){return matchSorter(rows,filter.value,{keys:['patientName']});},filterAll:true},{Header:'Message',id:'message',sortable:false,filterable:true,accessor:'text',filterMethod:function filterMethod(filter,rows){return matchSorter(rows,filter.value,{keys:['message']});},filterAll:true},{Header:'Chat With Patient',sortable:false,accessor:'sender',Cell:function Cell(props){return/*#__PURE__*/React.createElement(\"button\",{className:\"message-b\",id:props.value,onClick:function onClick(event){setDoctorChatPage(event.target.id,app,history);}},\"Send Message\");}}];return/*#__PURE__*/React.createElement(\"div\",{className:\"pcp-main-div\"},/*#__PURE__*/React.createElement(LoginHeader,{history:history,app:app,name:this.state.currentDoctor.username}),/*#__PURE__*/React.createElement(\"div\",{className:\"list-div\"},/*#__PURE__*/React.createElement(\"p\",{className:\"list-header\"},\"patient messages:\")),/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(ReactTable,{className:\"-highlight\",columns:columns,data:this.state.patientMessages,noDataText:\"No Patient Message Found\"})));}}]);return PreDoctorChat;}(React.Component);export default PreDoctorChat;","map":{"version":3,"sources":["/Users/yehuang/covid_consultant/client/src/components/ChatPage/PreChatPage/PreDoctorChat.js"],"names":["React","LoginHeader","ReactTable","matchSorter","getPatientMessage","setDoctorChatPage","Container","PreDoctorChat","props","history","push","state","currentDoctor","username","patientMessages","app","columns","Header","id","filterable","accessor","filterMethod","filter","rows","value","keys","filterAll","sortable","Cell","event","target","Component"],"mappings":"omBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+CAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,gBAAvB,CACA,MAAO,gCAAP,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CACA,OAAQC,iBAAR,CAA2BC,iBAA3B,KAAmD,0BAAnD,CACA,OAAQC,SAAR,KAAwB,mBAAxB,C,GAEMC,CAAAA,a,0HACF,uBAAYC,KAAZ,CAAmB,+CACf,uBAAMA,KAAN,EACA,MAAKA,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,yBAAxB,EACA,MAAKC,KAAL,CAAa,CACTC,aAAa,CAAE,CACXC,QAAQ,CAAE,EADC,CADN,CAITC,eAAe,CAAE,EAJR,CAAb,CAHe,aASlB,C,uFAEmB,CAChBV,iBAAiB,CAAC,IAAD,CAAjB,CACH,C,uCAEQ,iBACkB,KAAKI,KADvB,CACEC,OADF,aACEA,OADF,CACWM,GADX,aACWA,GADX,CAEL,GAAMC,CAAAA,OAAO,CAAG,CACZ,CACIC,MAAM,CAAE,cADZ,CAEIC,EAAE,CAAE,aAFR,CAGIC,UAAU,CAAE,IAHhB,CAIIC,QAAQ,CAAE,QAJd,CAKIC,YAAY,CAAE,sBAACC,MAAD,CAASC,IAAT,QACVpB,CAAAA,WAAW,CAACoB,IAAD,CAAOD,MAAM,CAACE,KAAd,CAAqB,CAACC,IAAI,CAAE,CAAC,aAAD,CAAP,CAArB,CADD,EALlB,CAOIC,SAAS,CAAE,IAPf,CADY,CAUZ,CACIT,MAAM,CAAE,SADZ,CAEIC,EAAE,CAAE,SAFR,CAGIS,QAAQ,CAAE,KAHd,CAIIR,UAAU,CAAE,IAJhB,CAKIC,QAAQ,CAAE,MALd,CAMIC,YAAY,CAAE,sBAACC,MAAD,CAASC,IAAT,QACVpB,CAAAA,WAAW,CAACoB,IAAD,CAAOD,MAAM,CAACE,KAAd,CAAqB,CAACC,IAAI,CAAE,CAAC,SAAD,CAAP,CAArB,CADD,EANlB,CAQIC,SAAS,CAAE,IARf,CAVY,CAoBZ,CACIT,MAAM,CAAE,mBADZ,CAEIU,QAAQ,CAAE,KAFd,CAGIP,QAAQ,CAAE,QAHd,CAIIQ,IAAI,CAAE,cAACpB,KAAD,qBACF,8BAAQ,SAAS,CAAE,WAAnB,CAAgC,EAAE,CAAEA,KAAK,CAACgB,KAA1C,CAAiD,OAAO,CAAE,iBAAAK,KAAK,CAAI,CAC/DxB,iBAAiB,CAACwB,KAAK,CAACC,MAAN,CAAaZ,EAAd,CAAkBH,GAAlB,CAAuBN,OAAvB,CAAjB,CACH,CAFD,iBADE,EAJV,CApBY,CAAhB,CAgCA,mBACI,2BAAK,SAAS,CAAC,cAAf,eACI,oBAAC,WAAD,EAAa,OAAO,CAAEA,OAAtB,CAA+B,GAAG,CAAEM,GAApC,CAAyC,IAAI,CAAE,KAAKJ,KAAL,CAAWC,aAAX,CAAyBC,QAAxE,EADJ,cAEI,2BAAK,SAAS,CAAC,UAAf,eACI,yBAAG,SAAS,CAAC,aAAb,sBADJ,CAFJ,cAOI,oBAAC,SAAD,mBACI,oBAAC,UAAD,EACI,SAAS,aADb,CAEI,OAAO,CAAEG,OAFb,CAGI,IAAI,CAAE,KAAKL,KAAL,CAAWG,eAHrB,CAII,UAAU,2BAJd,EADJ,CAPJ,CADJ,CAoBH,C,2BAtEuBd,KAAK,CAAC+B,S,EAyElC,cAAexB,CAAAA,aAAf","sourcesContent":["import React from \"react\";\nimport LoginHeader from \"../../DoctorDashboard/LoginHeader/LoginHeader\";\nimport ReactTable from 'react-table-v6';\nimport \"react-table-v6/react-table.css\";\nimport matchSorter from \"match-sorter\";\nimport {getPatientMessage, setDoctorChatPage} from \"../../../actions/message\";\nimport {Container} from \"@material-ui/core\";\n\nclass PreDoctorChat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.history.push(\"/ChatPage/PreDoctorChat\");\n        this.state = {\n            currentDoctor: {\n                username: ''\n            },\n            patientMessages: []\n        };\n    };\n\n    componentDidMount() {\n        getPatientMessage(this)\n    }\n\n    render() {\n        const {history, app} = this.props;\n        const columns = [\n            {\n                Header: 'Patient Name',\n                id: 'patientName',\n                filterable: true,\n                accessor: 'sender',\n                filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, {keys: ['patientName']}),\n                filterAll: true\n            },\n            {\n                Header: 'Message',\n                id: 'message',\n                sortable: false,\n                filterable: true,\n                accessor: 'text',\n                filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, {keys: ['message']}),\n                filterAll: true\n            },\n            {\n                Header: 'Chat With Patient',\n                sortable: false,\n                accessor: 'sender',\n                Cell: (props) => (\n                    <button className={\"message-b\"} id={props.value} onClick={event => {\n                        setDoctorChatPage(event.target.id, app, history)\n                    }}>\n                        Send Message\n                    </button>)\n            },\n        ];\n        return (\n            <div className=\"pcp-main-div\">\n                <LoginHeader history={history} app={app} name={this.state.currentDoctor.username}/>\n                <div className=\"list-div\">\n                    <p className=\"list-header\">\n                        patient messages:\n                    </p>\n                </div>\n                <Container>\n                    <ReactTable\n                        className={`-highlight`}\n                        columns={columns}\n                        data={this.state.patientMessages}\n                        noDataText={`No Patient Message Found`}\n                    >\n                    </ReactTable>\n                </Container>\n            </div>\n\n        );\n    }\n}\n\nexport default PreDoctorChat;\n\n"]},"metadata":{},"sourceType":"module"}