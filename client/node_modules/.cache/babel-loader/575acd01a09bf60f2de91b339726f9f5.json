{"ast":null,"code":"export const readPatientCookie = app => {\n  const url = \"/patients/check-session\";\n  fetch(url).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    }\n  }).then(json => {\n    if (json && json.currentPatient) {\n      app.setState({\n        currentPatient: json.currentPatient\n      });\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const updateLoginForm = (loginComp, field) => {\n  const value = field.value;\n  const name = field.name;\n  loginComp.setState({\n    [name]: value\n  });\n};\nexport const login = (loginComp, app) => {\n  const request = new Request(\"/patients/login\", {\n    method: \"post\",\n    body: JSON.stringify(loginComp.state),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  fetch(request).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    }\n  }).then(json => {\n    console.log(json);\n\n    if (json.currentPatient !== undefined) {\n      app.setState({\n        currentPatient: json.currentPatient\n      });\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const register = registerComp => {\n  const url = \"/patients/signup\";\n  const patient = registerComp.state;\n  const request = new Request(url, {\n    method: \"post\",\n    body: JSON.stringify(patient),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-type\": \"application/json\"\n    }\n  });\n  console.log(request);\n  console.log(JSON.stringify(patient));\n  fetch(request).then(function (res) {\n    if (res.status !== 200) {\n      registerComp.setState({\n        patient_registered: \"Patient cannot be registered at the moment!\"\n      });\n    } else {\n      registerComp.setState({\n        patient_registered: \"Patient account added!\"\n      });\n    }\n  }).catch(e => {\n    console.log(e);\n  });\n};\nexport const logout = app => {\n  const url = \"/patients/logout\";\n  fetch(url).then(res => {\n    app.setState({\n      currentPatient: null,\n      message: {\n        type: \"\",\n        body: \"\"\n      }\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["/Users/yehuang/309_group/client/src/actions/patients.js"],"names":["readPatientCookie","app","url","fetch","then","res","status","json","currentPatient","setState","catch","error","console","log","updateLoginForm","loginComp","field","value","name","login","request","Request","method","body","JSON","stringify","state","headers","Accept","undefined","register","registerComp","patient","patient_registered","e","logout","message","type"],"mappings":"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","sourcesContent":["export const readPatientCookie = (app) => {\n  const url = \"/patients/check-session\";\n\n  fetch(url)\n    .then((res) => {\n      if (res.status === 200) {\n        return res.json();\n      }\n    })\n    .then((json) => {\n      if (json && json.currentPatient) {\n        app.setState({ currentPatient: json.currentPatient });\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nexport const updateLoginForm = (loginComp, field) => {\n  const value = field.value;\n  const name = field.name;\n\n  loginComp.setState({\n    [name]: value,\n  });\n};\n\nexport const login = (loginComp, app) => {\n  const request = new Request(\"/patients/login\", {\n    method: \"post\",\n    body: JSON.stringify(loginComp.state),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  fetch(request)\n    .then((res) => {\n      if (res.status === 200) {\n        return res.json();\n      }\n    })\n    .then((json) => {\n      console.log(json);\n      if (json.currentPatient !== undefined) {\n        app.setState({ currentPatient: json.currentPatient });\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nexport const register = (registerComp) => {\n  const url = \"/patients/signup\"\n\n  const patient = registerComp.state\n\n  const request = new Request(url, {\n    method: \"post\",\n    body: JSON.stringify(patient),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-type\": \"application/json\"\n    }\n  })\n\n  console.log(request)\n  console.log(JSON.stringify(patient))\n\n  fetch(request).then(function (res) {\n    if (res.status !== 200) {\n      registerComp.setState({patient_registered: \"Patient cannot be registered at the moment!\"})\n    } else {\n      registerComp.setState({patient_registered: \"Patient account added!\"})\n    }\n  }).catch((e) => {\n    console.log(e)\n  })\n};\n\nexport const logout = (app) => {\n  const url = \"/patients/logout\";\n\n  fetch(url)\n    .then((res) => {\n      app.setState({\n        currentPatient: null,\n        message: { type: \"\", body: \"\" },\n      });\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}