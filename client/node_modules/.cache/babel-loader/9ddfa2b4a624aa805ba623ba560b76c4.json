{"ast":null,"code":"import _defineProperty from\"/Users/yehuang/covid_consultant/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";//get doctor session cookie with doctor information back in order to keep doctor logged in\nexport var readDoctorCookie=function readDoctorCookie(app){var url=\"/doctors/check-session\";fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){if(json&&json.currentDoctor){app.setState({currentDoctor:json.currentDoctor});}}).catch(function(error){console.log(error);});};//Read cookies to get selected Doctor\nexport var readSelectedDoctorCookie=function readSelectedDoctorCookie(app){var url=\"/doctors/contact-session\";fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){if(json&&json.selectedDoctor){app.setState({selectedDoctor:json.selectedDoctor});}}).catch(function(error){console.log(error);});};// used to set state for the login process for doctor's end\nexport var updateLoginForm=function updateLoginForm(loginComp,field){var value=field.value;var name=field.name;loginComp.setState(_defineProperty({},name,value));};//doctor login\nexport var login=function login(loginComp,app){var request=new Request(\"/doctors/login\",{method:\"post\",body:JSON.stringify(loginComp.state),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);if(json.currentDoctor!==undefined){app.setState({currentDoctor:json.currentDoctor});}}).catch(function(error){console.log(error);loginComp.setState({wrong:true});});};//doctor logout\nexport var logout=function logout(app){var url=\"/logout\";fetch(url).then(function(res){app.setState({currentDoctor:null,message:{type:\"\",body:\"\"},selectedPatient:null});}).catch(function(error){console.log(error);});};//Get all doctors\nexport var getDoctors=function getDoctors(ppc){var url=\"/doctors\";fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){ppc.setState({doctorInfo:json});}).catch(function(error){console.log(error);});};//Update patient into doctor watchlist\nvar updateWatchlist=function updateWatchlist(doctor,patient){var url=\"/doctors\";var request=new Request(url,{method:\"put\",body:JSON.stringify({patient:patient,doctor:doctor}),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});return new Promise(function(resolve){fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){resolve(json);}).catch(function(error){console.log(error);});});};//Add patient to list button event listener(DoctorChatPage)\nexport var addPatientToWatchlist=function addPatientToWatchlist(button,doctor,patient,app){updateWatchlist(doctor,patient).then(function(res){if(res){app.state.currentDoctor.watchlist=res.watchlist;button.innerText=\"Added!\";setTimeout(function(){button.innerText=\"Add to List\";},1000);}else{button.innerText=\"Failed!\";setTimeout(function(){button.innerText=\"Add to List\";},1000);}});};//remove patients from doctor's watchlist\nexport var removePatientFromWatchlist=function removePatientFromWatchlist(app,patient){var url=\"/doctors/delfwlist\";var doctor=app.state.doctor;var request=new Request(url,{method:\"put\",body:JSON.stringify({patient:patient,doctor:doctor}),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}else{throw new Error();}}).then(function(json){if(json!==null&&json!==undefined){console.log(json);app.setState({watchlist:json.watchlist});}}).catch(function(error){console.log(error);});};//Update selectedPatient cookie to null\nexport var updateSelectedPatient=function updateSelectedPatient(){var url=\"/patients/contact-session\";var request=new Request(url,{method:\"put\",body:JSON.stringify({selectedPatient:null}),headers:{Accept:\"application/json, text/plain, */*\",\"Content-type\":\"application/json\"}});return new Promise(function(resolve){fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){resolve(json);});}).catch(function(error){console.log(error);});};//Add patient to doctor watchlist button event listener(Doctor Dashboard)\nexport var AddToWatchlist=function AddToWatchlist(app,button,doctor,patient){updateWatchlist(doctor,patient).then(function(json){if(json){button.setDisabled=true;app.setState({watchlist:json.watchlist,success:\"Patient added to watchlist!\",error:\"\"});}else{throw new Error();}}).catch(function(error){button.disabled=true;app.setState({error:\"Failed to add patient to watchlist\",success:\"\"});setTimeout(function(){button.disabled=false;},1000);});};//Set main.state.selectedDoctor by read selectedPatient cookie\nexport var endDoctorChat=function endDoctorChat(app){updateSelectedPatient().then(function(json){if(json){app.setState({selectedPatient:json.selectedPatient});}}).catch(function(error){console.log(error);});};// get all the patients from database, used to search for patient in doctor dashboard\nexport var getPatients=function getPatients(app){var url=\"/patients\";fetch(url).then(function(res){if(res.status===200){return res.json();}else{throw new Error();}}).then(function(json){if(json!==null&&json!==undefined){console.log(json);app.setState({patients:json});// app.setState({error: \"success\"})\n}else{app.setState({error:\"Cannot retrieve patient accounts information!\"});}}).catch(function(e){console.log(\"error caught\");app.setState({error:\"Cannot retrieve patient accounts information!\"});});};// get all the patients from this doctor's watchlist, used for doctor dashboard's watchlist component\nexport var getWatchlist=function getWatchlist(app,id){var url=\"/doctors/get-doctor-by-id/\".concat(id);console.log(id);fetch(url).then(function(res){if(res.status===200){console.log(\"returning json\");return res.json();}else{throw new Error();}}).then(function(json){if(json!==null&&json!==undefined){console.log(json);app.setState({watchlist:json.watchlist});}else{throw new Error();}}).catch(function(e){console.log(e);});};","map":{"version":3,"sources":["/Users/yehuang/covid_consultant/client/src/actions/doctor.js"],"names":["readDoctorCookie","app","url","fetch","then","res","status","json","currentDoctor","setState","catch","error","console","log","readSelectedDoctorCookie","selectedDoctor","updateLoginForm","loginComp","field","value","name","login","request","Request","method","body","JSON","stringify","state","headers","Accept","undefined","wrong","logout","message","type","selectedPatient","getDoctors","ppc","doctorInfo","updateWatchlist","doctor","patient","Promise","resolve","addPatientToWatchlist","button","watchlist","innerText","setTimeout","removePatientFromWatchlist","Error","updateSelectedPatient","AddToWatchlist","setDisabled","success","disabled","endDoctorChat","getPatients","patients","e","getWatchlist","id"],"mappings":"+JAAA;AACA,MAAO,IAAMA,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,GAAD,CAAS,CACvC,GAAMC,CAAAA,GAAG,CAAG,wBAAZ,CACAC,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACU,SAACC,GAAD,CAAS,CACX,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACJ,CALL,EAMKH,IANL,CAMU,SAACG,IAAD,CAAU,CACZ,GAAIA,IAAI,EAAIA,IAAI,CAACC,aAAjB,CAAgC,CAC5BP,GAAG,CAACQ,QAAJ,CAAa,CAACD,aAAa,CAAED,IAAI,CAACC,aAArB,CAAb,EACH,CACJ,CAVL,EAWKE,KAXL,CAWW,SAACC,KAAD,CAAW,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CAbL,EAcD,CAhBM,CAkBP;AACA,MAAO,IAAMG,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACb,GAAD,CAAS,CAC/C,GAAMC,CAAAA,GAAG,CAAG,0BAAZ,CACAC,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACU,SAACC,GAAD,CAAS,CACX,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACJ,CALL,EAMKH,IANL,CAMU,SAACG,IAAD,CAAU,CACZ,GAAIA,IAAI,EAAIA,IAAI,CAACQ,cAAjB,CAAiC,CAC7Bd,GAAG,CAACQ,QAAJ,CAAa,CAACM,cAAc,CAAER,IAAI,CAACQ,cAAtB,CAAb,EACH,CACJ,CAVL,EAWKL,KAXL,CAWW,SAACC,KAAD,CAAW,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CAbL,EAcD,CAhBM,CAkBP;AACA,MAAO,IAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,SAAD,CAAYC,KAAZ,CAAsB,CACnD,GAAMC,CAAAA,KAAK,CAAGD,KAAK,CAACC,KAApB,CACA,GAAMC,CAAAA,IAAI,CAAGF,KAAK,CAACE,IAAnB,CAEAH,SAAS,CAACR,QAAV,oBACGW,IADH,CACUD,KADV,GAGD,CAPM,CASP;AACA,MAAO,IAAME,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACJ,SAAD,CAAYhB,GAAZ,CAAoB,CACvC,GAAMqB,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAY,gBAAZ,CAA8B,CAC5CC,MAAM,CAAE,MADoC,CAE5CC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeV,SAAS,CAACW,KAAzB,CAFsC,CAG5CC,OAAO,CAAE,CACPC,MAAM,CAAE,mCADD,CAEP,eAAgB,kBAFT,CAHmC,CAA9B,CAAhB,CASA3B,KAAK,CAACmB,OAAD,CAAL,CACKlB,IADL,CACU,SAACC,GAAD,CAAS,CACX,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACJ,CALL,EAMKH,IANL,CAMU,SAACG,IAAD,CAAU,CACZK,OAAO,CAACC,GAAR,CAAYN,IAAZ,EACA,GAAIA,IAAI,CAACC,aAAL,GAAuBuB,SAA3B,CAAsC,CAClC9B,GAAG,CAACQ,QAAJ,CAAa,CAACD,aAAa,CAAED,IAAI,CAACC,aAArB,CAAb,EACH,CACJ,CAXL,EAYKE,KAZL,CAYW,SAACC,KAAD,CAAW,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACAM,SAAS,CAACR,QAAV,CAAmB,CAACuB,KAAK,CAAE,IAAR,CAAnB,EACH,CAfL,EAgBD,CA1BM,CA4BP;AACA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAChC,GAAD,CAAS,CAC7B,GAAMC,CAAAA,GAAG,CAAG,SAAZ,CAEAC,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACU,SAACC,GAAD,CAAS,CACXJ,GAAG,CAACQ,QAAJ,CAAa,CACTD,aAAa,CAAE,IADN,CAET0B,OAAO,CAAE,CAACC,IAAI,CAAE,EAAP,CAAWV,IAAI,CAAE,EAAjB,CAFA,CAGTW,eAAe,CAAE,IAHR,CAAb,EAKH,CAPL,EAQK1B,KARL,CAQW,SAACC,KAAD,CAAW,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CAVL,EAWD,CAdM,CAgBP;AACA,MAAO,IAAM0B,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,GAAD,CAAS,CACjC,GAAMpC,CAAAA,GAAG,CAAG,UAAZ,CACAC,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACU,SAACC,GAAD,CAAS,CACX,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACJ,CALL,EAMKH,IANL,CAMU,SAACG,IAAD,CAAU,CACZ+B,GAAG,CAAC7B,QAAJ,CAAa,CACT8B,UAAU,CAAEhC,IADH,CAAb,EAGH,CAVL,EAWKG,KAXL,CAWW,SAACC,KAAD,CAAW,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CAbL,EAcD,CAhBM,CAkBP;AACA,GAAM6B,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,MAAD,CAASC,OAAT,CAAqB,CAC3C,GAAMxC,CAAAA,GAAG,CAAG,UAAZ,CACA,GAAMoB,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAYrB,GAAZ,CAAiB,CAC/BsB,MAAM,CAAE,KADuB,CAE/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBe,OAAO,CAAEA,OADU,CAEnBD,MAAM,CAAEA,MAFW,CAAf,CAFyB,CAM/BZ,OAAO,CAAE,CACPC,MAAM,CAAE,mCADD,CAEP,eAAgB,kBAFT,CANsB,CAAjB,CAAhB,CAWA,MAAO,IAAIa,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa,CAC9BzC,KAAK,CAACmB,OAAD,CAAL,CACKlB,IADL,CACU,SAACC,GAAD,CAAS,CACX,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACJ,CALL,EAMKH,IANL,CAMU,SAACG,IAAD,CAAU,CACZqC,OAAO,CAACrC,IAAD,CAAP,CACH,CARL,EASKG,KATL,CASW,SAACC,KAAD,CAAW,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CAXL,EAYD,CAbM,CAAP,CAcD,CA3BD,CA6BA;AACA,MAAO,IAAMkC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,MAAD,CAASL,MAAT,CAAiBC,OAAjB,CAA0BzC,GAA1B,CAAkC,CACrEuC,eAAe,CAACC,MAAD,CAASC,OAAT,CAAf,CAAiCtC,IAAjC,CAAsC,SAACC,GAAD,CAAS,CAC7C,GAAIA,GAAJ,CAAS,CACPJ,GAAG,CAAC2B,KAAJ,CAAUpB,aAAV,CAAwBuC,SAAxB,CAAoC1C,GAAG,CAAC0C,SAAxC,CACAD,MAAM,CAACE,SAAP,CAAmB,QAAnB,CACAC,UAAU,CAAC,UAAY,CACrBH,MAAM,CAACE,SAAP,CAAmB,aAAnB,CACD,CAFS,CAEP,IAFO,CAAV,CAGD,CAND,IAMO,CACLF,MAAM,CAACE,SAAP,CAAmB,SAAnB,CACAC,UAAU,CAAC,UAAY,CACrBH,MAAM,CAACE,SAAP,CAAmB,aAAnB,CACD,CAFS,CAEP,IAFO,CAAV,CAGD,CACF,CAbD,EAcD,CAfM,CAiBP;AACA,MAAO,IAAME,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,CAACjD,GAAD,CAAMyC,OAAN,CAAkB,CAC1D,GAAMxC,CAAAA,GAAG,CAAG,oBAAZ,CAEA,GAAMuC,CAAAA,MAAM,CAAGxC,GAAG,CAAC2B,KAAJ,CAAUa,MAAzB,CAEA,GAAMnB,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAYrB,GAAZ,CAAiB,CAC/BsB,MAAM,CAAE,KADuB,CAE/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBe,OAAO,CAAEA,OADU,CAEnBD,MAAM,CAAEA,MAFW,CAAf,CAFyB,CAM/BZ,OAAO,CAAE,CACPC,MAAM,CAAE,mCADD,CAEP,eAAgB,kBAFT,CANsB,CAAjB,CAAhB,CAWA3B,KAAK,CAACmB,OAAD,CAAL,CACKlB,IADL,CACU,SAACC,GAAD,CAAS,CACX,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CAFD,IAEO,CACH,KAAM,IAAI4C,CAAAA,KAAJ,EAAN,CACH,CACJ,CAPL,EAQK/C,IARL,CAQU,SAACG,IAAD,CAAU,CACZ,GAAIA,IAAI,GAAK,IAAT,EAAiBA,IAAI,GAAKwB,SAA9B,CAAyC,CACrCnB,OAAO,CAACC,GAAR,CAAYN,IAAZ,EACAN,GAAG,CAACQ,QAAJ,CAAa,CAACsC,SAAS,CAAExC,IAAI,CAACwC,SAAjB,CAAb,EACH,CACJ,CAbL,EAcKrC,KAdL,CAcW,SAACC,KAAD,CAAW,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CAhBL,EAiBD,CAjCM,CAmCP;AACA,MAAO,IAAMyC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,CACzC,GAAMlD,CAAAA,GAAG,CAAG,2BAAZ,CACA,GAAMoB,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAYrB,GAAZ,CAAiB,CAC/BsB,MAAM,CAAE,KADuB,CAE/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBS,eAAe,CAAE,IADE,CAAf,CAFyB,CAK/BP,OAAO,CAAE,CACPC,MAAM,CAAE,mCADD,CAEP,eAAgB,kBAFT,CALsB,CAAjB,CAAhB,CAUA,MAAO,IAAIa,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa,CAC9BzC,KAAK,CAACmB,OAAD,CAAL,CACKlB,IADL,CACU,SAACC,GAAD,CAAS,CACX,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACJ,CALL,EAMKH,IANL,CAMU,SAACG,IAAD,CAAU,CACZqC,OAAO,CAACrC,IAAD,CAAP,CACH,CARL,EASD,CAVM,EAUJG,KAVI,CAUE,SAACC,KAAD,CAAW,CAClBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,CAZM,CAAP,CAaD,CAzBM,CA2BP;AACA,MAAO,IAAM0C,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACpD,GAAD,CAAM6C,MAAN,CAAcL,MAAd,CAAsBC,OAAtB,CAAkC,CAC9DF,eAAe,CAACC,MAAD,CAASC,OAAT,CAAf,CACKtC,IADL,CACU,SAACG,IAAD,CAAU,CACZ,GAAIA,IAAJ,CAAU,CACNuC,MAAM,CAACQ,WAAP,CAAqB,IAArB,CACArD,GAAG,CAACQ,QAAJ,CAAa,CACTsC,SAAS,CAAExC,IAAI,CAACwC,SADP,CAETQ,OAAO,CAAE,6BAFA,CAGT5C,KAAK,CAAE,EAHE,CAAb,EAKH,CAPD,IAOO,CACH,KAAM,IAAIwC,CAAAA,KAAJ,EAAN,CACH,CACJ,CAZL,EAaKzC,KAbL,CAaW,SAACC,KAAD,CAAW,CACdmC,MAAM,CAACU,QAAP,CAAkB,IAAlB,CACAvD,GAAG,CAACQ,QAAJ,CAAa,CACTE,KAAK,CAAE,oCADE,CAET4C,OAAO,CAAE,EAFA,CAAb,EAIAN,UAAU,CAAC,UAAY,CACnBH,MAAM,CAACU,QAAP,CAAkB,KAAlB,CACH,CAFS,CAEP,IAFO,CAAV,CAGH,CAtBL,EAuBD,CAxBM,CA0BP;AACA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACxD,GAAD,CAAS,CACpCmD,qBAAqB,GAChBhD,IADL,CACU,SAACG,IAAD,CAAU,CACZ,GAAIA,IAAJ,CAAU,CACNN,GAAG,CAACQ,QAAJ,CAAa,CACT2B,eAAe,CAAE7B,IAAI,CAAC6B,eADb,CAAb,EAGH,CACJ,CAPL,EAQK1B,KARL,CAQW,SAACC,KAAD,CAAW,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CAVL,EAWD,CAZM,CAcP;AACA,MAAO,IAAM+C,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACzD,GAAD,CAAS,CAClC,GAAMC,CAAAA,GAAG,CAAG,WAAZ,CAEAC,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACU,SAACC,GAAD,CAAS,CACX,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CAFD,IAEO,CACH,KAAM,IAAI4C,CAAAA,KAAJ,EAAN,CACH,CACJ,CAPL,EAQK/C,IARL,CAQU,SAACG,IAAD,CAAU,CACZ,GAAIA,IAAI,GAAK,IAAT,EAAiBA,IAAI,GAAKwB,SAA9B,CAAyC,CACrCnB,OAAO,CAACC,GAAR,CAAYN,IAAZ,EACAN,GAAG,CAACQ,QAAJ,CAAa,CAACkD,QAAQ,CAAEpD,IAAX,CAAb,EACA;AACH,CAJD,IAIO,CACHN,GAAG,CAACQ,QAAJ,CAAa,CACTE,KAAK,CAAE,+CADE,CAAb,EAGH,CACJ,CAlBL,EAmBKD,KAnBL,CAmBW,SAACkD,CAAD,CAAO,CACVhD,OAAO,CAACC,GAAR,CAAY,cAAZ,EACAZ,GAAG,CAACQ,QAAJ,CAAa,CAACE,KAAK,CAAE,+CAAR,CAAb,EACH,CAtBL,EAuBD,CA1BM,CA4BP;AACA,MAAO,IAAMkD,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAC5D,GAAD,CAAM6D,EAAN,CAAa,CACvC,GAAM5D,CAAAA,GAAG,qCAAgC4D,EAAhC,CAAT,CACAlD,OAAO,CAACC,GAAR,CAAYiD,EAAZ,EAEA3D,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACU,SAACC,GAAD,CAAS,CACX,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpBM,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACA,MAAOR,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CAHD,IAGO,CACH,KAAM,IAAI4C,CAAAA,KAAJ,EAAN,CACH,CACJ,CARL,EASK/C,IATL,CASU,SAACG,IAAD,CAAU,CACZ,GAAIA,IAAI,GAAK,IAAT,EAAiBA,IAAI,GAAKwB,SAA9B,CAAyC,CACrCnB,OAAO,CAACC,GAAR,CAAYN,IAAZ,EACAN,GAAG,CAACQ,QAAJ,CAAa,CAACsC,SAAS,CAAExC,IAAI,CAACwC,SAAjB,CAAb,EACH,CAHD,IAGO,CACH,KAAM,IAAII,CAAAA,KAAJ,EAAN,CACH,CACJ,CAhBL,EAiBKzC,KAjBL,CAiBW,SAACkD,CAAD,CAAO,CACVhD,OAAO,CAACC,GAAR,CAAY+C,CAAZ,EACH,CAnBL,EAoBD,CAxBM","sourcesContent":["//get doctor session cookie with doctor information back in order to keep doctor logged in\nexport const readDoctorCookie = (app) => {\n  const url = \"/doctors/check-session\";\n  fetch(url)\n      .then((res) => {\n          if (res.status === 200) {\n              return res.json();\n          }\n      })\n      .then((json) => {\n          if (json && json.currentDoctor) {\n              app.setState({currentDoctor: json.currentDoctor});\n          }\n      })\n      .catch((error) => {\n          console.log(error);\n      });\n};\n\n//Read cookies to get selected Doctor\nexport const readSelectedDoctorCookie = (app) => {\n  const url = \"/doctors/contact-session\";\n  fetch(url)\n      .then((res) => {\n          if (res.status === 200) {\n              return res.json();\n          }\n      })\n      .then((json) => {\n          if (json && json.selectedDoctor) {\n              app.setState({selectedDoctor: json.selectedDoctor});\n          }\n      })\n      .catch((error) => {\n          console.log(error);\n      });\n};\n\n// used to set state for the login process for doctor's end\nexport const updateLoginForm = (loginComp, field) => {\n  const value = field.value;\n  const name = field.name;\n\n  loginComp.setState({\n    [name]: value,\n  });\n};\n\n//doctor login\nexport const login = (loginComp, app) => {\n  const request = new Request(\"/doctors/login\", {\n    method: \"post\",\n    body: JSON.stringify(loginComp.state),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  fetch(request)\n      .then((res) => {\n          if (res.status === 200) {\n              return res.json();\n          }\n      })\n      .then((json) => {\n          console.log(json);\n          if (json.currentDoctor !== undefined) {\n              app.setState({currentDoctor: json.currentDoctor});\n          }\n      })\n      .catch((error) => {\n          console.log(error);\n          loginComp.setState({wrong: true});\n      });\n};\n\n//doctor logout\nexport const logout = (app) => {\n  const url = \"/logout\";\n\n  fetch(url)\n      .then((res) => {\n          app.setState({\n              currentDoctor: null,\n              message: {type: \"\", body: \"\"},\n              selectedPatient: null\n          });\n      })\n      .catch((error) => {\n          console.log(error);\n      });\n};\n\n//Get all doctors\nexport const getDoctors = (ppc) => {\n  const url = \"/doctors\";\n  fetch(url)\n      .then((res) => {\n          if (res.status === 200) {\n              return res.json();\n          }\n      })\n      .then((json) => {\n          ppc.setState({\n              doctorInfo: json,\n          });\n      })\n      .catch((error) => {\n          console.log(error);\n      });\n};\n\n//Update patient into doctor watchlist\nconst updateWatchlist = (doctor, patient) => {\n  const url = \"/doctors\";\n  const request = new Request(url, {\n    method: \"put\",\n    body: JSON.stringify({\n      patient: patient,\n      doctor: doctor,\n    }),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  return new Promise((resolve) => {\n    fetch(request)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            resolve(json);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n  });\n};\n\n//Add patient to list button event listener(DoctorChatPage)\nexport const addPatientToWatchlist = (button, doctor, patient, app) => {\n  updateWatchlist(doctor, patient).then((res) => {\n    if (res) {\n      app.state.currentDoctor.watchlist = res.watchlist;\n      button.innerText = \"Added!\";\n      setTimeout(function () {\n        button.innerText = \"Add to List\";\n      }, 1000);\n    } else {\n      button.innerText = \"Failed!\";\n      setTimeout(function () {\n        button.innerText = \"Add to List\";\n      }, 1000);\n    }\n  });\n};\n\n//remove patients from doctor's watchlist\nexport const removePatientFromWatchlist = (app, patient) => {\n  const url = \"/doctors/delfwlist\";\n\n  const doctor = app.state.doctor;\n\n  const request = new Request(url, {\n    method: \"put\",\n    body: JSON.stringify({\n      patient: patient,\n      doctor: doctor,\n    }),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  fetch(request)\n      .then((res) => {\n          if (res.status === 200) {\n              return res.json();\n          } else {\n              throw new Error();\n          }\n      })\n      .then((json) => {\n          if (json !== null && json !== undefined) {\n              console.log(json);\n              app.setState({watchlist: json.watchlist});\n          }\n      })\n      .catch((error) => {\n          console.log(error);\n      });\n};\n\n//Update selectedPatient cookie to null\nexport const updateSelectedPatient = () => {\n  const url = \"/patients/contact-session\";\n  const request = new Request(url, {\n    method: \"put\",\n    body: JSON.stringify({\n      selectedPatient: null,\n    }),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-type\": \"application/json\",\n    },\n  });\n  return new Promise((resolve) => {\n    fetch(request)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            resolve(json);\n        });\n  }).catch((error) => {\n    console.log(error);\n  });\n};\n\n//Add patient to doctor watchlist button event listener(Doctor Dashboard)\nexport const AddToWatchlist = (app, button, doctor, patient) => {\n  updateWatchlist(doctor, patient)\n      .then((json) => {\n          if (json) {\n              button.setDisabled = true;\n              app.setState({\n                  watchlist: json.watchlist,\n                  success: \"Patient added to watchlist!\",\n                  error: \"\",\n              });\n          } else {\n              throw new Error();\n          }\n      })\n      .catch((error) => {\n          button.disabled = true;\n          app.setState({\n              error: \"Failed to add patient to watchlist\",\n              success: \"\",\n          });\n          setTimeout(function () {\n              button.disabled = false;\n          }, 1000);\n      });\n};\n\n//Set main.state.selectedDoctor by read selectedPatient cookie\nexport const endDoctorChat = (app) => {\n  updateSelectedPatient()\n      .then((json) => {\n          if (json) {\n              app.setState({\n                  selectedPatient: json.selectedPatient,\n              });\n          }\n      })\n      .catch((error) => {\n          console.log(error);\n      });\n};\n\n// get all the patients from database, used to search for patient in doctor dashboard\nexport const getPatients = (app) => {\n  const url = \"/patients\";\n\n  fetch(url)\n      .then((res) => {\n          if (res.status === 200) {\n              return res.json();\n          } else {\n              throw new Error();\n          }\n      })\n      .then((json) => {\n          if (json !== null && json !== undefined) {\n              console.log(json);\n              app.setState({patients: json});\n              // app.setState({error: \"success\"})\n          } else {\n              app.setState({\n                  error: \"Cannot retrieve patient accounts information!\",\n              });\n          }\n      })\n      .catch((e) => {\n          console.log(\"error caught\");\n          app.setState({error: \"Cannot retrieve patient accounts information!\"});\n      });\n};\n\n// get all the patients from this doctor's watchlist, used for doctor dashboard's watchlist component\nexport const getWatchlist = (app, id) => {\n  const url = `/doctors/get-doctor-by-id/${id}`;\n  console.log(id);\n\n  fetch(url)\n      .then((res) => {\n          if (res.status === 200) {\n              console.log(\"returning json\");\n              return res.json();\n          } else {\n              throw new Error();\n          }\n      })\n      .then((json) => {\n          if (json !== null && json !== undefined) {\n              console.log(json);\n              app.setState({watchlist: json.watchlist});\n          } else {\n              throw new Error();\n          }\n      })\n      .catch((e) => {\n          console.log(e);\n      });\n};\n"]},"metadata":{},"sourceType":"module"}