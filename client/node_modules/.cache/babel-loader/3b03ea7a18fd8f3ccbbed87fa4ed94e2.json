{"ast":null,"code":"import _classCallCheck from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import PatientHeader from\"../../PatientDashboard/components/PatientHeader/PatientHeader\";import Button from\"@material-ui/core/Button\";import{Link}from\"react-router-dom\";import\"./styles.css\";import{doctorType}from\"../../RegistrationInfo/infomation\";import ReactTable from'react-table-v6';import\"react-table-v6/react-table.css\";import matchSorter from'match-sorter';import{getDoctors}from'../../../actions/doctor';var PrePatientChat=/*#__PURE__*/function(_React$Component){_inherits(PrePatientChat,_React$Component);var _super=_createSuper(PrePatientChat);function PrePatientChat(props){var _this;_classCallCheck(this,PrePatientChat);_this=_super.call(this,props);_this.createOptions=function(opt){var select=[];for(var i=0;i<opt.length;i++){select.push(/*#__PURE__*/React.createElement(\"option\",{value:\"\".concat(opt[i])},opt[i]));}return select;};_this.state={doctorInfo:[]};return _this;}_createClass(PrePatientChat,[{key:\"componentDidMount\",value:function componentDidMount(){getDoctors(this);}},{key:\"render\",value:function render(){var _this2=this;var columns=[{Header:'Doctor Name',id:'doctorName',filterable:true,accessor:'username',filterMethod:function filterMethod(filter,rows){return matchSorter(rows,filter.value,{keys:['doctorName']});},filterAll:true},{Header:'Doctor Type',filterable:true,accessor:'doctorType',filterMethod:function filterMethod(filter,row){if(filter.value===\"All\"){return true;}return row[filter.id]===filter.value;},Filter:function Filter(_ref){var filter=_ref.filter,_onChange=_ref.onChange;return/*#__PURE__*/React.createElement(\"select\",{onChange:function onChange(event){return _onChange(event.target.value);},style:{width:\"100%\"},value:filter?filter.value:\"All\"},/*#__PURE__*/React.createElement(\"option\",{value:\"All\"},\"All\"),_this2.createOptions(doctorType));}},{Header:'Location',id:'location',filterable:true,accessor:'location',filterMethod:function filterMethod(filter,rows){return matchSorter(rows,filter.value,{keys:['location']});},filterAll:true},{Header:'Chat With Doctor',sortable:false,Cell:function Cell(){return/*#__PURE__*/React.createElement(Link,{to:\"/ChatPage/PatientChatPage\"},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"secondary\",size:\"small\"},\"Send Message\"));}}];return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(PatientHeader,{name:\"yyy\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"list-div\"},/*#__PURE__*/React.createElement(\"p\",{className:\"list-header\"},\"Doctor List\")),/*#__PURE__*/React.createElement(ReactTable,{className:\"-highlight\",columns:columns,data:this.state.doctorInfo,noDataText:\"No Doctor Found\"}));}}]);return PrePatientChat;}(React.Component);export default PrePatientChat;","map":{"version":3,"sources":["/Users/yehuang/309_group/client/src/components/ChatPage/PreChatPage/PrePatientChat.js"],"names":["React","PatientHeader","Button","Link","doctorType","ReactTable","matchSorter","getDoctors","PrePatientChat","props","createOptions","opt","select","i","length","push","state","doctorInfo","columns","Header","id","filterable","accessor","filterMethod","filter","rows","value","keys","filterAll","row","Filter","onChange","event","target","width","sortable","Cell","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PatientHeader from \"../../PatientDashboard/components/PatientHeader/PatientHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport {Link} from \"react-router-dom\";\nimport \"./styles.css\";\nimport {doctorType} from \"../../RegistrationInfo/infomation\";\nimport ReactTable from 'react-table-v6';\nimport \"react-table-v6/react-table.css\";\nimport matchSorter from 'match-sorter';\nimport {getDoctors} from '../../../actions/doctor';\n\nclass PrePatientChat extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            doctorInfo: []\n        };\n    };\n\n    createOptions = (opt) => {\n        let select = [];\n        for (let i = 0; i < opt.length; i++) {\n            select.push(<option value={`${opt[i]}`}>{opt[i]}</option>)\n        }\n        return select\n    };\n\n    componentDidMount() {\n        getDoctors(this)\n    }\n    render() {\n        const columns = [\n            {\n                Header: 'Doctor Name',\n                id: 'doctorName',\n                filterable: true,\n                accessor: 'username',\n                filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, {keys: ['doctorName']}),\n                filterAll: true\n            },\n            {\n                Header: 'Doctor Type',\n                filterable: true,\n                accessor: 'doctorType',\n                filterMethod: (filter, row) => {\n                    if (filter.value === \"All\") {\n                        return true;\n                    }\n                    return row[filter.id] === filter.value;\n                },\n                Filter: ({filter, onChange}) =>\n                    <select\n                        onChange={event => onChange(event.target.value)}\n                        style={{width: \"100%\"}}\n                        value={filter ? filter.value : \"All\"}\n                    >\n                        <option value='All'>All</option>\n                        {this.createOptions(doctorType)}\n                    </select>\n            },\n            {\n                Header: 'Location',\n                id: 'location',\n                filterable: true,\n                accessor: 'location',\n                filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, {keys: ['location']}),\n                filterAll: true\n            },\n            {\n                Header: 'Chat With Doctor',\n                sortable: false,\n                Cell: () => (\n                    <Link to={\"/ChatPage/PatientChatPage\"}>\n                        <Button variant=\"contained\" color=\"secondary\" size={\"small\"}>Send Message</Button>\n                    </Link>)\n            },\n        ];\n        return (\n            <div>\n                <div><PatientHeader name=\"yyy\"/></div>\n                <div className=\"list-div\">\n                    <p className=\"list-header\">Doctor List</p>\n                </div>\n\n                <ReactTable\n                    className={`-highlight`}\n                    columns={columns}\n                    data={this.state.doctorInfo}\n                    noDataText={`No Doctor Found`}\n                >\n                </ReactTable>\n            </div>\n        );\n    }\n}\n\nexport default PrePatientChat;\n"]},"metadata":{},"sourceType":"module"}