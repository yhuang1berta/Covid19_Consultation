{"ast":null,"code":"var patientIcon=\"https://img.icons8.com/ios/50/000000/consultation.png\";var doctorIcon=\"https://img.icons8.com/wired/64/000000/medical-doctor.png\";export var getMessages=function getMessages(pcp){var s=pcp.state.name;var url1=\"/patients/\".concat(s);// const url1 = \"/patients/check-session\";\nfetch(url1).then(function(res){if(res.status===200){return res.json();}}).then(function(json){var patient=json[0];pcp.setState({// \"name\": patient.username,\n\"doctor\":patient.visit_history[patient.visit_history.length-1]});// const s = pcp.state.name;\nvar r=pcp.state.doctor.username;var url2=\"/messages/\".concat(s,\"/\").concat(r);fetch(url2).then(function(res){if(res.status===200){return res.json();}}).then(function(json){var messages=[];for(var i=0;i<json.length;i++){messages.push({\"text\":json[i].text,\"id\":(i+1).toString(),\"sender\":{\"name\":json[i].sender,\"uid\":json[i].sender===s?\"2\":\"1\",\"avatar\":json[i].sender===s?patientIcon:doctorIcon}});}pcp.setState({messages:messages});}).catch(function(error){console.log(error);});}).catch(function(error){console.log(error);});};export var updatePatientCookie=function updatePatientCookie(doctor,app){var url1=\"/doctors/\".concat(doctor);fetch(url1).then(function(res){if(res.status===200){return res.json();}}).then(function(json){var url=\"/patients/update\";var request=new Request(url,{method:\"post\",body:JSON.stringify(json),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){app.setState({isChatting:true});}).catch(function(error){console.log(error);});}).catch(function(error){console.log(error);});};","map":{"version":3,"sources":["/Users/yehuang/309_group/client/src/actions/message.js"],"names":["patientIcon","doctorIcon","getMessages","pcp","s","state","name","url1","fetch","then","res","status","json","patient","setState","visit_history","length","r","doctor","username","url2","messages","i","push","text","toString","sender","catch","error","console","log","updatePatientCookie","app","url","request","Request","method","body","JSON","stringify","headers","Accept","isChatting"],"mappings":"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","sourcesContent":["const patientIcon = \"https://img.icons8.com/ios/50/000000/consultation.png\";\nconst doctorIcon = \"https://img.icons8.com/wired/64/000000/medical-doctor.png\";\n\nexport const getMessages = (pcp) => {\n    const s = pcp.state.name;\n    const url1 = `/patients/${s}`;\n    // const url1 = \"/patients/check-session\";\n    fetch(url1).then((res) => {\n        if (res.status === 200) {\n            return res.json();\n        }\n    })\n        .then((json) => {\n            let patient = json[0];\n            pcp.setState(\n                {\n                    // \"name\": patient.username,\n                    \"doctor\": patient.visit_history[patient.visit_history.length - 1]\n                }\n            );\n            // const s = pcp.state.name;\n            const r = pcp.state.doctor.username;\n            const url2 = `/messages/${s}/${r}`;\n            fetch(url2)\n                .then((res) => {\n                    if (res.status === 200) {\n                        return res.json();\n                    }\n                })\n                .then((json) => {\n                    const messages = [];\n                    for (let i = 0; i < json.length; i++) {\n                        messages.push({\n                            \"text\": json[i].text,\n                            \"id\": (i + 1).toString(),\n                            \"sender\": {\n                                \"name\": json[i].sender,\n                                \"uid\": json[i].sender === s ? \"2\" : \"1\",\n                                \"avatar\": json[i].sender === s ? patientIcon : doctorIcon\n                            }\n                        })\n                    }\n                    pcp.setState({\n                        messages: messages\n                    })\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n};\n\nexport const updatePatientCookie = (doctor, app) => {\n    const url1 = `/doctors/${doctor}`;\n    fetch(url1).then((res) => {\n        if (res.status === 200) {\n            return res.json()\n        }\n    }).then((json) => {\n        const url = \"/patients/update\";\n        const request = new Request(url, {\n            method: \"post\",\n            body: JSON.stringify(json),\n            headers: {\n                Accept: \"application/json, text/plain, */*\",\n                \"Content-Type\": \"application/json\",\n            },\n        });\n        fetch(request).then((res) => {\n            app.setState({\n                isChatting: true\n            })\n        }).catch((error) => {\n            console.log(error)\n        });\n    }).catch((error) => {\n        console.log(error);\n    });\n};\n\n\n"]},"metadata":{},"sourceType":"module"}