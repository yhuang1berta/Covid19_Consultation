{"ast":null,"code":"import _defineProperty from\"/Users/yehuang/309_group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";export var readDoctorCookie=function readDoctorCookie(app){var url=\"/doctors/check-session\";fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){if(json&&json.currentDoctor){app.setState({currentDoctor:json.currentDoctor});}}).catch(function(error){console.log(error);});};export var readSelectedDoctorCookie=function readSelectedDoctorCookie(app){var url=\"/doctors/contact-session\";fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){if(json&&json.selectedDoctor){app.setState({selectedDoctor:json.selectedDoctor});}}).catch(function(error){console.log(error);});};export var updateLoginForm=function updateLoginForm(loginComp,field){var value=field.value;var name=field.name;loginComp.setState(_defineProperty({},name,value));};export var login=function login(loginComp,app){var request=new Request(\"/doctors/login\",{method:\"post\",body:JSON.stringify(loginComp.state),headers:{Accept:\"application/json, text/plain, */*\",\"Content-Type\":\"application/json\"}});fetch(request).then(function(res){if(res.status===200){return res.json();}}).then(function(json){console.log(json);if(json.currentDoctor!==undefined){app.setState({currentDoctor:json.currentDoctor});}}).catch(function(error){console.log(error);loginComp.setState({wrong:true});});};export var logout=function logout(app){var url=\"/logout\";fetch(url).then(function(res){app.setState({currentDoctor:null,message:{type:\"\",body:\"\"}});}).catch(function(error){console.log(error);});};export var getDoctors=function getDoctors(ppc){var url=\"/doctors\";fetch(url).then(function(res){if(res.status===200){return res.json();}}).then(function(json){ppc.setState({doctorInfo:json});}).catch(function(error){console.log(error);});};","map":{"version":3,"sources":["/Users/yehuang/309_group/client/src/actions/doctor.js"],"names":["readDoctorCookie","app","url","fetch","then","res","status","json","currentDoctor","setState","catch","error","console","log","readSelectedDoctorCookie","selectedDoctor","updateLoginForm","loginComp","field","value","name","login","request","Request","method","body","JSON","stringify","state","headers","Accept","undefined","wrong","logout","message","type","getDoctors","ppc","doctorInfo"],"mappings":"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","sourcesContent":["export const readDoctorCookie = (app) => {\n  const url = \"/doctors/check-session\";\n  fetch(url)\n    .then((res) => {\n      if (res.status === 200) {\n        return res.json();\n      }\n    })\n    .then((json) => {\n      if (json && json.currentDoctor) {\n        app.setState({ currentDoctor: json.currentDoctor });\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nexport const readSelectedDoctorCookie = (app) => {\n    const url = \"/doctors/contact-session\";\n    fetch(url)\n        .then((res) => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then((json) => {\n            if (json && json.selectedDoctor) {\n                app.setState({selectedDoctor: json.selectedDoctor});\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n};\n\n\nexport const updateLoginForm = (loginComp, field) => {\n  const value = field.value;\n  const name = field.name;\n\n  loginComp.setState({\n    [name]: value,\n  });\n};\n\nexport const login = (loginComp, app) => {\n  const request = new Request(\"/doctors/login\", {\n    method: \"post\",\n    body: JSON.stringify(loginComp.state),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  fetch(request)\n    .then((res) => {\n      if (res.status === 200) {\n        return res.json();\n      }\n    })\n    .then((json) => {\n      console.log(json);\n      if (json.currentDoctor !== undefined) {\n        app.setState({ currentDoctor: json.currentDoctor });\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n      loginComp.setState({wrong: true})\n    });\n};\n\nexport const logout = (app) => {\n  const url = \"/logout\";\n\n  fetch(url)\n    .then((res) => {\n      app.setState({\n        currentDoctor: null,\n        message: { type: \"\", body: \"\" },\n      });\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nexport const getDoctors = (ppc) => {\n  const url = \"/doctors\";\n  fetch(url)\n      .then((res) => {\n        if (res.status === 200) {\n          return res.json();\n        }\n      })\n      .then((json) => {\n        ppc.setState({\n          doctorInfo: json\n        })\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n}\n"]},"metadata":{},"sourceType":"module"}